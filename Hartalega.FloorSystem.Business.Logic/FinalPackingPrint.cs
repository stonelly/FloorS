using Hartalega.FloorSystem.Business.Logic.DataTransferObjects;
using Hartalega.FloorSystem.Framework;
using Hartalega.FloorSystem.Framework.Common;
using Hartalega.FloorSystem.Framework.DbExceptionLog;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;


namespace Hartalega.FloorSystem.Business.Logic
{
    public class InnerSetReturn
    {
        public string specialInternalLotNumber { get; set; }
        public DateTime? mfgDate { get; set; }
        public DateTime? expDate { get; set; }
    }
    public static class FinalPackingPrint
    {
        /// <summary>
        /// To Return the Special Internal Lotnumber, Mfg Date and Exp Date from Inner
        /// </summary>
        /// <param name="internallotnumber"></param>
        /// <param name="ManufacturingDate"></param>
        /// <param name="expirydate"></param>
        /// <param name="line"></param>
        /// <param name="expiryinmonths"></param>
        /// <param name="CustomerLotNumber"></param>
        /// <param name="innersetNumber"></param>
        /// <returns></returns>
        public static InnerSetReturn ReturnInnerSet(string internallotnumber, DateTime ManufacturingDate, DateTime expirydate, string line, int expiryinmonths, string CustomerLotNumber, string innersetNumber)
        {
            InnerSetReturn objInnerSetReturn = new InnerSetReturn();
            string cCustOrderLot = string.Empty;
            string specailinnerlotnumber = string.Empty;
            DateTime curretDate = CommonBLL.GetCurrentDateAndTimeFromServer();
            DateTime dMfg = ManufacturingDate;
            DateTime dExp = expirydate;
            string cPLine = line;
            int nExpMonth = expiryinmonths;
            string JulianDay = string.Empty;
            string stationNumber = WorkStationDataConfiguration.GetInstance().stationNumber;
            if (!string.IsNullOrEmpty(CustomerLotNumber))
            { cCustOrderLot = CustomerLotNumber; }

            switch (innersetNumber)
            {
                #region old label set 25/07/19 LabelSetNamingProject
                case "LAB-IB-MCKU-0006":
                case "337":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + dMfg.ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                case "LAB-IB-HLYD-0011"://Halyard (V Batch)
                case "325": //Halyard
                case "LAB-IB-HLYD-0013"://Halyard (V Batch)
                case "333": //Halyard
                case "LAB-IB-HLYD-0016"://Halyard (V Batch)
                case "339": //Halyard
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);

                    if (DateTime.DaysInMonth(int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("yyyy")), int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MM"))) >= 30)
                        objInnerSetReturn.expDate = DateTime.ParseExact("30" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    else if (DateTime.DaysInMonth(int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("yyyy")), int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MM"))) >= 28)
                        objInnerSetReturn.expDate = DateTime.ParseExact("28" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    else
                        objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "V" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4); // NGC - SJ, BB - SZ
                    break;
                case "LAB-IB-HLYD-0012"://Halyard (X Batch)
                case "332": //Halyard
                case "LAB-IB-HLYD-0014"://Halyard (X Batch)
                case "334": //Halyard
                case "LAB-IB-HLYD-0015"://Halyard (X Batch)
                case "338": //Halyard
                case "LAB-IB-HLYD-0017": //Halyard (X Batch)
                case "345":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);

                    if (DateTime.DaysInMonth(int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("yyyy")), int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MM"))) >= 30)
                        objInnerSetReturn.expDate = DateTime.ParseExact("30" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    else if (DateTime.DaysInMonth(int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("yyyy")), int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MM"))) >= 28)
                        objInnerSetReturn.expDate = DateTime.ParseExact("28" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    else
                        objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "X" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4); // NGC - SJ, BB - SZ
                    break;
                case "LAB-IB-MEDL-0021":
                case "342":
                case "LAB-IB-MEDL-0020":
                case "340":
                case "LAB-IB-MEDL-0019":
                case "336":
                case "LAB-IB-MEDL-0017":
                case "328":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + dMfg.ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = DateTime.ParseExact("28" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    break;
                case "LAB-IB-MEDL-0016":
                case "323":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + dMfg.ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = DateTime.ParseExact("28" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    break;
                case "LAB-IB-MEDL-0010":
                case "317":
                    objInnerSetReturn.mfgDate = dMfg;
                    objInnerSetReturn.expDate = DateTime.ParseExact("28" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    break;
                case "LAB-IB-S2SG-0001":
                case "316":
                    String[] aYear2 = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" };
                    int nPos4 = Array.IndexOf(aYear2, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPos4 > -1)
                    {
                        if ((nPos4 + 1) > 9)
                        {
                            string cYear1 = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPos4 + 1).ToString(), 1);
                            objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear1, "ddMMyyyy", CultureInfo.InvariantCulture);
                        }
                        else
                        {
                            string cYear1 = DateTime.Today.ToString("yyyy").Substring(0, 3) + (nPos4 + 1).ToString();
                            objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear1, "ddMMyyyy", CultureInfo.InvariantCulture);
                        }
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                case "LAB-IB-CDNL-0001":
                case "LAB-IB-CDNL-0002":
                case "312":
                case "313":
                case "LAB-IB-CDNL-0003":
                case "324":
                    //objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    objInnerSetReturn.mfgDate = dMfg;
                    objInnerSetReturn.expDate = dMfg.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "LAB-IB-HLYD-0009":
                case "310":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);

                    if (DateTime.DaysInMonth(int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("yyyy")), int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MM"))) >= 30)

                        objInnerSetReturn.expDate = DateTime.ParseExact("30" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    else
                        objInnerSetReturn.expDate = DateTime.ParseExact("28" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "X" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);//BB Code
                    break;
                case "LAB-IB-HLYD-0010":
                case "311":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);

                    if (DateTime.DaysInMonth(int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("yyyy")), int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MM"))) >= 30)

                        objInnerSetReturn.expDate = DateTime.ParseExact("30" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    else
                        objInnerSetReturn.expDate = DateTime.ParseExact("28" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "V" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);//BB Code
                    break;
                case "LAB-IB-IHCP-0003":
                case "305":
                case "LAB-IB-IHCP-0004":
                case "348":
                case "LAB-IB-IHCP-0005":
                case "353":
                case "LAB-IB-IHCP-0006":
                case "356":
                    objInnerSetReturn.specialInternalLotNumber = "39" + internallotnumber.Trim();
                    break;
                case "LAB-IB-HLYD-0007"://Halyard
                case "301": //Halyard
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);

                    if (DateTime.DaysInMonth(int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("yyyy")), int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MM"))) >= 30)
                        objInnerSetReturn.expDate = DateTime.ParseExact("30" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    else if (DateTime.DaysInMonth(int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("yyyy")), int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MM"))) >= 28)
                        objInnerSetReturn.expDate = DateTime.ParseExact("28" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    else
                        objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "X" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4); // BB - SZ
                    break;
                case "LAB-IB-HLYD-0008"://Halyard
                case "303": //Halyard
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);

                    if (DateTime.DaysInMonth(int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("yyyy")), int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MM"))) >= 30)

                        objInnerSetReturn.expDate = DateTime.ParseExact("30" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    else if (DateTime.DaysInMonth(int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("yyyy")), int.Parse(objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MM"))) >= 28)
                        objInnerSetReturn.expDate = DateTime.ParseExact("28" + objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    else
                        objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "V" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4); // BB - SZ
                    break;
                case "LAB-IB-MCKU-0001":
                case "302":
                    String[] aYear302 = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                    int nPos302 = Array.IndexOf(aYear302, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPos302 > -1)
                    {
                        string cYear302 = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPos302 + 1).ToString(), 1);
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear302, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                case "LAB-IB-IHCP-0002":
                case "299":
                    objInnerSetReturn.specialInternalLotNumber = "39" + internallotnumber.Trim();
                    break;
                case "LAB-IB-ANSL-0012":
                case "298":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "215":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + dMfg.ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                case "286":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "283":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "HL" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "V" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;

                case "284":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "HL" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "X" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                case "278":
                case "280":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "274":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "V" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                case "273":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "270":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "X" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                case "265":
                    objInnerSetReturn.specialInternalLotNumber = internallotnumber.Trim() + Right(cPLine, 2);
                    break;
                case "264":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "133":
                    objInnerSetReturn.specialInternalLotNumber = dMfg.ToString("yyMMdd") + cPLine.Trim() + Right(internallotnumber, 6);
                    break;

                case "193":
                    objInnerSetReturn.specialInternalLotNumber = "39" + internallotnumber.Trim();
                    break;

                case "181":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "182":
                    String[] aYear = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                    //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                    int nPos = Array.IndexOf(aYear, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPos > -1)
                    {
                        string cYear = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPos + 1).ToString(), 1);
                        //objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "199":
                case "243":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "210":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + "/" + cCustOrderLot.Substring(2, 2) + "/" + cCustOrderLot.Substring(0, 2), "dd/MM/yy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "192":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact(cCustOrderLot.Substring(4, 2) + "/" + cCustOrderLot.Substring(2, 2) + "/" + cCustOrderLot.Substring(0, 2), "dd/MM/yy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "213":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "222":
                    String[] aYear1 = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                    //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                    int nPos1 = Array.IndexOf(aYear1, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPos1 > -1)
                    {
                        string cYear1 = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPos1 + 1).ToString(), 1);
                        //objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear1, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "236":
                case "246":
                    objInnerSetReturn.mfgDate = dMfg;
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    //objInnerSetReturn.expDate = dMfg.AddDays(-1).AddMonths(nExpMonth);
                    break;

                case "241":
                    String[] aMonth = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L" };
                    objInnerSetReturn.specialInternalLotNumber = dMfg.ToString("yy").Substring(1, 1) + aMonth[Convert.ToInt32(DateTime.Today.ToString("MM")) - 1] + internallotnumber.Trim();
                    break;

                case "247":
                    objInnerSetReturn.specialInternalLotNumber = cCustOrderLot.Trim() + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;

                case "245":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "225":
                    String[] aMonth1 = { "A", "B", "C", "D", "E", "H", "J", "K", "L", "N", "P", "S" };
                    //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                    int nPos2 = Array.IndexOf(aMonth1, cCustOrderLot.Trim().Substring(4, 1));
                    if (nPos2 > -1)
                    {
                        string cYear1 = DateTime.Today.ToString("yyyy").Substring(0, 2) + cCustOrderLot.Trim().Substring(2, 2).ToString();
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right("0" + (nPos2 + 1), 2) + cYear1, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "233":
                    String[] aMonth2 = { "A", "B", "C", "D", "E", "H", "J", "K", "L", "N", "P", "S" };
                    //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                    int nPos3 = Array.IndexOf(aMonth2, cCustOrderLot.Trim().Substring(5, 1));
                    if (nPos3 > -1)
                    {
                        string cYear1 = DateTime.Today.ToString("yyyy").Substring(0, 2) + cCustOrderLot.Trim().Substring(3, 2).ToString();
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right("0" + (nPos3 + 1), 2) + cYear1, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "226":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "V" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                case "227":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "X" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                #endregion

                #region new label set 25/07/19 LabelSetNamingProject
                //formerly inner label set 286
                case "LAB-IB-ANSL-0011":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                //formerly inner label set 283
                case "LAB-IB-KCGS-0001":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "HL" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "V" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                //formerly inner label set 284
                case "LAB-IB-KCGS-0002":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "HL" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "X" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                //formerly inner label set 278
                case "LAB-IB-ANSL-0009":
                //formerly inner label set 280
                case "LAB-IB-HTLG-0081":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                //formerly inner label set 274
                case "LAB-IB-HLYD-0006":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "V" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                //formerly inner label set 273
                case "LAB-IB-ANSL-0006":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                //formerly inner label set 270
                case "LAB-IB-HLYD-0005":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "X" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                case "LAB-IB-VRDT-0001": //floor inner label set 265
                case "LAB-IB-VRDT-0002":
                case "341":
                case "LAB-IB-VRDT-0003":
                case "354":
                    objInnerSetReturn.specialInternalLotNumber = internallotnumber.Trim() + Right(cPLine, 2);
                    break;
                //formerly inner label set 133
                case "LAB-IB-BNZL-0001":
                    objInnerSetReturn.specialInternalLotNumber = dMfg.ToString("yyMMdd") + cPLine.Trim() + Right(internallotnumber, 6);
                    break;
                //formerly inner label set 193
                case "LAB-IB-IHCP-0001":
                    objInnerSetReturn.specialInternalLotNumber = "39" + internallotnumber.Trim();
                    break;
                //formerly inner label set 182
                case "LAB-IB-HTLG-0037":
                    String[] aYearNewLabelSet = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                    //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                    int nPosNewLabelSet = Array.IndexOf(aYearNewLabelSet, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPosNewLabelSet > -1)
                    {
                        string cYear = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPosNewLabelSet + 1).ToString(), 1);
                        //objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;                    
                //formerly inner label set 243
                case "LAB-IB-HTLG-0066":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                //formerly inner label set 222
                case "LAB-IB-HTLG-0055":
                    String[] aYear1NewLabelSet = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                    //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                    int nPos1NewLabelSet = Array.IndexOf(aYear1NewLabelSet, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPos1NewLabelSet > -1)
                    {
                        string cYear1 = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPos1NewLabelSet + 1).ToString(), 1);
                        //objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear1, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                //formerly inner label set 241
                case "LAB-IB-GPTH-0001":
                    String[] aMonthNewLabelSet = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L" };
                    objInnerSetReturn.specialInternalLotNumber = dMfg.ToString("yy").Substring(1, 1) + aMonthNewLabelSet[Convert.ToInt32(DateTime.Today.ToString("MM")) - 1] + internallotnumber.Trim();
                    break;
                //formerly inner label set 226
                case "LAB-IB-HLYD-0003":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "V" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                //formerly inner label set 227
                case "LAB-IB-HLYD-0004":
                    JulianDay = FinalPackingBLL.GetJulianDay(curretDate);
                    objInnerSetReturn.mfgDate = FinalPackingBLL.GetJulianMonth(JulianDay);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);

                    objInnerSetReturn.specialInternalLotNumber = "SZ" + Right(objInnerSetReturn.mfgDate.Value.Year.ToString(), 1) + JulianDay + stationNumber + "X" + "_" + internallotnumber.Substring((internallotnumber.Trim().Length - 4), 4);
                    break;
                    #endregion
            }
            return objInnerSetReturn;
        }
        /// <summary>
        /// To Return the Special Internal Lotnumber, Mfg Date and Exp Date from Outer
        /// </summary>
        /// <param name="internalLotNumber"></param>
        /// <param name="ManufacturingDate"></param>
        /// <param name="expirydate"></param>
        /// <param name="line"></param>
        /// <param name="expiryinmonths"></param>
        /// <param name="outersetnumber"></param>
        /// <param name="customerLotNumber"></param>
        /// <param name="SHIPPINGDATEREQUESTED"></param>
        /// <returns></returns>
        public static InnerSetReturn ReturnOuterSet(string internalLotNumber, DateTime ManufacturingDate, DateTime expirydate,
            string line, int expiryinmonths, string outersetnumber, string customerLotNumber, DateTime ManufacturingDateETD)
        {
            InnerSetReturn objInnerSetReturn = new InnerSetReturn();
            string cCustOrderLot = string.Empty;
            string specailinnerlotnumber = string.Empty;

            DateTime curretDate = CommonBLL.GetCurrentDateAndTimeFromServer();
            DateTime dMfg = ManufacturingDate;
            DateTime dExp = expirydate;
            DateTime dEtd = ManufacturingDateETD;
            string cPLine = line;
            int nExpMonth = expiryinmonths;
            string JulianDay = string.Empty;

            if (!string.IsNullOrEmpty(customerLotNumber))
            { cCustOrderLot = customerLotNumber; }

            switch (outersetnumber)
            {
                #region old label set 25/07/19 LabelSetNamingProject
                case "LAB-OC-S2SG-0001":
                case "260":
                    String[] aYear2 = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z" };
                    int nPos4 = Array.IndexOf(aYear2, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPos4 > -1)
                    {

                        if ((nPos4 + 1) > 9)
                        {
                            string cYear1 = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPos4 + 1).ToString(), 1);
                            objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear1, "ddMMyyyy", CultureInfo.InvariantCulture);
                        }
                        else
                        {
                            string cYear1 = DateTime.Today.ToString("yyyy").Substring(0, 3) + (nPos4 + 1).ToString();
                            objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear1, "ddMMyyyy", CultureInfo.InvariantCulture);
                        }
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                case "LAB-OC-ANSL-0016":
                case "257":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "LAB-OC-IHCP-0003":
                case "250":
                    objInnerSetReturn.specialInternalLotNumber = "39" + internalLotNumber.Trim();
                    break;
                case "LAB-OC-ANSL-0015":
                case "249":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "LAB-OC-ANSL-0013":
                case "242":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "LAB-OC-IHCP-0002":
                case "239":
                    objInnerSetReturn.specialInternalLotNumber = "39" + internalLotNumber.Trim();
                    break;

                case "LAB-OC-ANSL-0012":
                case "240":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "LAB-OC-ANSL-0011":
                case "238":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "LAB-OC-ANSL-0010":
                case "234":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "228":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "209":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + dMfg.ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                case "206":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "200":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                case "194":
                    objInnerSetReturn.specialInternalLotNumber = internalLotNumber.Trim() + Right(cPLine, 2);
                    break;
                case "193":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;

                case "114":
                    objInnerSetReturn.expDate = DateTime.ParseExact(cCustOrderLot.Substring(0, 4) + "01", "yyMMdd", CultureInfo.InvariantCulture);
                    objInnerSetReturn.mfgDate = objInnerSetReturn.expDate.Value.AddMonths(-nExpMonth);
                    break;

                case "96":
                    objInnerSetReturn.expDate = DateTime.ParseExact(cCustOrderLot.Substring(0, 4) + "01", "yyMMdd", CultureInfo.InvariantCulture);
                    objInnerSetReturn.mfgDate = objInnerSetReturn.expDate.Value.AddMonths(-nExpMonth);
                    break;

                case "122":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "73":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "85":
                    String[] aYear = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                    //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                    int nPos = Array.IndexOf(aYear, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPos > -1)
                    {
                        string cYear = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPos + 1).ToString(), 1);
                        //objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "90":
                case "152":
                    objInnerSetReturn.mfgDate = dEtd;
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "136":
                    String[] aYear1 = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                    //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                    int nPos1 = Array.IndexOf(aYear1, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPos1 > -1)
                    {
                        string cYear1 = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPos1 + 1).ToString(), 1);
                        //objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear1, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "158":
                case "172":
                case "173":
                    objInnerSetReturn.mfgDate = dMfg;
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    //objInnerSetReturn.expDate = dMfg.AddDays(-1).AddMonths(nExpMonth);
                    break;

                case "169":
                case "183":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "141":
                    String[] aMonth1 = { "A", "B", "C", "D", "E", "H", "J", "K", "L", "N", "P", "S" };
                    int nPos2 = Array.IndexOf(aMonth1, cCustOrderLot.Trim().Substring(4, 1));
                    if (nPos2 > -1)
                    {
                        string cYear = DateTime.Today.ToString("yyyy").Substring(0, 2) + cCustOrderLot.Trim().Substring(2, 2).ToString();
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right("0" + (nPos2 + 1), 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;

                case "150":
                    String[] aMonth2 = { "A", "B", "C", "D", "E", "H", "J", "K", "L", "N", "P", "S" };
                    int nPos3 = Array.IndexOf(aMonth2, cCustOrderLot.Trim().Substring(5, 1));
                    if (nPos3 > -1)
                    {
                        string cYear = DateTime.Today.ToString("yyyy").Substring(0, 2) + cCustOrderLot.Trim().Substring(3, 2).ToString();
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right("0" + (nPos3 + 1), 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                #endregion

                #region new label set 25/07/19 LabelSetNamingProject
                //formerly outer label print 206
                case "LAB-OC-ANSL-0009":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                //formerly outer label print 200
                case "LAB-OC-ANSL-0007":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                //formerly outer label set 193
                case "LAB-OC-ANSL-0006":
                    objInnerSetReturn.mfgDate = DateTime.ParseExact("28" + dMfg.AddMonths(-1).ToString("MMyyyy"), "ddMMyyyy", CultureInfo.InvariantCulture);
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    break;
                //formerly outer label set 96
                case "LAB-OC-HTLG-0065":
                    objInnerSetReturn.expDate = DateTime.ParseExact(cCustOrderLot.Substring(0, 4) + "01", "yyMMdd", CultureInfo.InvariantCulture);
                    objInnerSetReturn.mfgDate = objInnerSetReturn.expDate.Value.AddMonths(-nExpMonth);
                    break;
                //formerly outer label set 85
                case "LAB-OC-HTLG-0056":
                    String[] aYearNewLabelSet = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                    //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                    int nPosNewLabelSet = Array.IndexOf(aYearNewLabelSet, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPosNewLabelSet > -1)
                    {
                        string cYear = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPosNewLabelSet + 1).ToString(), 1);
                        //objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                //formerly outer label set 90
                case "LAB-OC-HTLG-0059":
                //formerly outer label set 152
                case "LAB-OC-HTLG-0095":
                    objInnerSetReturn.mfgDate = dEtd;
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                //formerly outer label set 136
                case "LAB-OC-HTLG-0086":
                    String[] aYear1NewLabelSet = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                    //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                    int nPos1NewLabelSet = Array.IndexOf(aYear1NewLabelSet, Right(cCustOrderLot.Trim(), 6).Substring(0, 1));
                    if (nPos1NewLabelSet > -1)
                    {
                        string cYear1 = DateTime.Today.ToString("yyyy").Substring(0, 3) + Right((nPos1NewLabelSet + 1).ToString(), 1);
                        //objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", CultureInfo.InvariantCulture);
                        objInnerSetReturn.mfgDate = DateTime.ParseExact("01" + Right(cCustOrderLot.Trim(), 6).Substring(1, 2) + cYear1, "ddMMyyyy", CultureInfo.InvariantCulture);
                    }
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth);
                    break;
                //formerly outer label set 172
                case "LAB-OC-ANSL-0004":
                //formerly outer label set 173
                case "LAB-OC-ANSL-0005":
                    objInnerSetReturn.mfgDate = dMfg;
                    objInnerSetReturn.expDate = objInnerSetReturn.mfgDate.Value.AddMonths(nExpMonth).AddDays(-1);
                    //objInnerSetReturn.expDate = dMfg.AddDays(-1).AddMonths(nExpMonth);
                    break;
                    #endregion
            }
            return objInnerSetReturn;
        }
        /// <summary>
        /// To print preshipment sticker
        /// </summary>
        /// <param name="PO"></param>
        /// <param name="PalletId"></param>
        /// <param name="CaseNo"></param>
        public static void PreshipmentSticker(string PO, string PalletId, string CaseNo)
        {
            List<String> newList = new List<string>();

            newList.Add("f300");
            newList.Add("L");
            newList.Add("H07");
            newList.Add("PC");
            newList.Add("191100000750015" + "PRESHIPMENT CTN");
            newList.Add("191100000550015" + "PO : " + PO);
            newList.Add("191100000350015" + "CTN: " + CaseNo);
            newList.Add("191100000150015" + "PLT: " + PalletId);
            newList.Add("142100000350150" + "X");
            newList.Add("E");
            if (WorkStationDataConfiguration.GetInstance().LHardwareIntegration == true)
                LabelPrinterX2000LPT(newList.ToArray());
            else
            {
                # region Test Code
                //string filePath = @"\\192.168.9.47\fs\SIT\preshipmentStickerPrint.txt";
                //using (StreamWriter writer = new StreamWriter(filePath, true))
                //{
                //    writer.WriteLine("PO:" + PO);
                //    writer.WriteLine("Pallet:" + PalletId);
                //    writer.WriteLine("CaseNo:" + CaseNo);
                //}
                #endregion
            }
        }
        /// <summary>
        /// Print GC Inner
        /// </summary>
        /// <param name="Size"></param>
        /// <param name="expDate"></param>
        /// <param name="custOrderLot"></param>
        /// <param name="boxesPacked"></param>
        /// <returns></returns>
        public static Boolean PrintGCInnerLabel(string Size, DateTime expDate, string custOrderLot, int boxesPacked)
        {
            Boolean isGClabelPrnSuccess = false;
            List<String> newList = new List<string>();
            newList.Add("f300");
            newList.Add("L");
            newList.Add("H07");
            newList.Add("PC");
            newList.Add("1e1101099999999C&G" + "                                                            "); // This to avoid print extra digit in GS1-128 barcode.

            switch (Size)
            {
                case "L":
                    newList.Add("1Y1100000150020H_L");
                    newList.Add("1Y1100000150035H_EXP_JP");
                    newList.Add("411100000750048" + expDate.ToString("yyyy.MM"));
                    newList.Add("1Y1000000150050H_LOT_JP");
                    newList.Add("411100000750063" + custOrderLot);
                    newList.Add("400002502100062GS1-128");
                    newList.Add("1X1100002050052B012048001001");
                    newList.Add("4e1101800150085C&G010454816111734317" + expDate.ToString("yyMM") + "00" + "&G10" + custOrderLot);
                    newList.Add("400002500150095(01)04548161117343(17)" + expDate.ToString("yyMM") + "00" + "(10)" + custOrderLot);
                    break;

                case "M":
                    newList.Add("1Y1100000150020H_M");
                    newList.Add("1Y1100000150035H_EXP_JP");
                    newList.Add("411100000750048" + expDate.ToString("yyyy.MM"));
                    newList.Add("1Y1000000150050H_LOT_JP");
                    newList.Add("411100000750063" + custOrderLot);
                    newList.Add("400002502100062GS1-128");
                    newList.Add("1X1100002050052B012048001001");
                    newList.Add("4e1101800150085C&G010454816111733617" + expDate.ToString("yyMM") + "00" + "&G10" + custOrderLot);
                    newList.Add("400002500150095(01)04548161117336(17)" + expDate.ToString("yyMM") + "00" + "(10)" + custOrderLot);
                    break;

                case "S":
                    newList.Add("1Y1100000150020H_S");
                    newList.Add("1Y1100000150035H_EXP_JP");
                    newList.Add("411100000750048" + expDate.ToString("yyyy.MM"));
                    newList.Add("1Y1000000150050H_LOT_JP");
                    newList.Add("411100000750063" + custOrderLot);
                    newList.Add("400002502100062GS1-128");
                    newList.Add("1X1100002050052B012048001001");
                    newList.Add("4e1101800150085C&G010454816111732917" + expDate.ToString("yyMM") + "00" + "&G10" + custOrderLot);
                    newList.Add("400002500150095(01)04548161117329(17)" + expDate.ToString("yyMM") + "00" + "(10)" + custOrderLot);
                    break;

                case "XS":
                    newList.Add("1Y1100000150020H_SS");
                    newList.Add("1Y1100000150035H_EXP_JP");
                    newList.Add("411100000750048" + expDate.ToString("yyyy.MM"));
                    newList.Add("1Y1000000150050H_LOT_JP");
                    newList.Add("411100000750063" + custOrderLot);
                    newList.Add("400002502100062GS1-128");
                    newList.Add("1X1100002050052B012048001001");
                    newList.Add("4e1101800150085C&G010454816111731217" + expDate.ToString("yyMM") + "00" + "&G10" + custOrderLot);
                    newList.Add("400002500150095(01)04548161117312(17)" + expDate.ToString("yyMM") + "00" + "(10)" + custOrderLot);
                    break;
            }
            newList.Add("X");
            newList.Add(Chr(2) + "E" + boxesPacked.ToString("D" + 4));
            newList.Add(Chr(2) + "G");

            if (WorkStationDataConfiguration.GetInstance().LHardwareIntegration == true)
                isGClabelPrnSuccess = LabelPrinterX2000COM(newList.ToArray());
            else
            {
                # region TestCode
                //string filePath = @"\\192.168.9.47\fs\SIT\GCInnerLabel.txt";
                //using (StreamWriter writer = new StreamWriter(filePath, true))
                //{

                //    writer.WriteLine("Size: " + Size);
                //    writer.WriteLine(Environment.NewLine);
                //    writer.WriteLine("expDate: " + expDate);
                //    writer.WriteLine(Environment.NewLine);
                //    writer.WriteLine("boxesPacked: " + boxesPacked);
                //    writer.WriteLine(Environment.NewLine);
                //    writer.WriteLine("custOrderLot: " + custOrderLot);
                //    writer.WriteLine(Environment.NewLine);
                //}
                # endregion
            }
            return isGClabelPrnSuccess = true;
        }
        /// <summary>
        /// Print GC Outer Label
        /// </summary>
        /// <param name="Size"></param>
        /// <param name="expDate"></param>
        /// <param name="custOrderLot"></param>
        /// <param name="boxesPacked"></param>
        /// <returns></returns>
        public static Boolean PrintGCOuterLabel(string Size, DateTime expDate, string custOrderLot, int boxesPacked)
        {
            Boolean isGClabelPrnSuccess = false;
            List<String> newList = new List<string>();
            newList.Add("f300");
            newList.Add("L");
            newList.Add("H07");
            newList.Add("PC");
            newList.Add("1e1101099999999C&G" + "                                                            "); // This to avoid print extra digit in GS1-128 barcode.
            switch (Size)
            {
                case "L":
                    newList.Add("1Y1100000150020H_L");
                    newList.Add("1Y1100000150035H_EXP_JP");
                    newList.Add("411100000750048" + expDate.ToString("yyyy.MM"));
                    newList.Add("1Y1000000150050H_LOT_JP");
                    newList.Add("411100000750063" + custOrderLot);
                    newList.Add("400002502330062GS1-128");
                    newList.Add("1X1100002280052B012048001001");
                    newList.Add("4e1101800150085C&G011454816111734017" + expDate.ToString("yyMM") + "00" + "3010&G10" + custOrderLot);
                    newList.Add("400002500150095(01)14548161117340(17)" + expDate.ToString("yyMM") + "00" + "(30)10(10)" + custOrderLot);
                    break;

                case "M":
                    newList.Add("1Y1100000150020H_M");
                    newList.Add("1Y1100000150035H_EXP_JP");
                    newList.Add("411100000750048" + expDate.ToString("yyyy.MM"));
                    newList.Add("1Y1000000150050H_LOT_JP");
                    newList.Add("411100000750063" + custOrderLot);
                    newList.Add("400002502330062GS1-128");
                    newList.Add("1X1100002280052B012048001001");
                    newList.Add("4e1101800150085C&G011454816111733317" + expDate.ToString("yyMM") + "00" + "3010&G10" + custOrderLot);
                    newList.Add("400002500150095(01)14548161117333(17)" + expDate.ToString("yyMM") + "00" + "(30)10(10)" + custOrderLot);
                    break;

                case "S":
                    newList.Add("1Y1100000150020H_S");
                    newList.Add("1Y1100000150035H_EXP_JP");
                    newList.Add("411100000750048" + expDate.ToString("yyyy.MM"));
                    newList.Add("1Y1000000150050H_LOT_JP");
                    newList.Add("411100000750063" + custOrderLot);
                    newList.Add("400002502330062GS1-128");
                    newList.Add("1X1100002280052B012048001001");
                    newList.Add("4e1101800150085C&G011454816111732617" + expDate.ToString("yyMM") + "00" + "3010&G10" + custOrderLot);
                    newList.Add("400002500150095(01)14548161117326(17)" + expDate.ToString("yyMM") + "00" + "(30)10(10)" + custOrderLot);
                    break;

                case "XS":
                    newList.Add("1Y1100000150020H_SS");
                    newList.Add("1Y1100000150035H_EXP_JP");
                    newList.Add("411100000750048" + expDate.ToString("yyyy.MM"));
                    newList.Add("1Y1000000150050H_LOT_JP");
                    newList.Add("411100000750063" + custOrderLot);
                    newList.Add("400002502330062GS1-128");
                    newList.Add("1X1100002280052B012048001001");
                    newList.Add("4e1101800150085C&G011454816111731917" + expDate.ToString("yyMM") + "00" + "3010&G10" + custOrderLot);
                    newList.Add("400002500150095(01)14548161117319(17)" + expDate.ToString("yyMM") + "00" + "(30)10(10)" + custOrderLot);
                    break;
            }
            newList.Add("X");
            newList.Add(Chr(2) + "E" + boxesPacked.ToString("D" + 4));
            newList.Add(Chr(2) + "G");
            if (WorkStationDataConfiguration.GetInstance().LHardwareIntegration == true)
                isGClabelPrnSuccess = LabelPrinterX2000COM(newList.ToArray());
            else
            {
                # region Test Code
                //string filePath = @"\\192.168.9.47\fs\SIT\GCInnerOuter.txt";
                //using (StreamWriter writer = new StreamWriter(filePath, true))
                //{

                //    writer.WriteLine("Size: " + Size);
                //    writer.WriteLine(Environment.NewLine);
                //    writer.WriteLine("expDate:" + expDate);
                //    writer.WriteLine(Environment.NewLine);
                //    writer.WriteLine("custOrderLot :" + custOrderLot);
                //    writer.WriteLine(Environment.NewLine);
                //    writer.WriteLine("boxesPacked: " + boxesPacked);
                //    writer.WriteLine(Environment.NewLine);
                //}
                # endregion
            }
            return isGClabelPrnSuccess = true;
        }
        /// <summary>
        /// Print surgical outer
        /// </summary>
        /// <param name="internalLotNumber"></param>
        /// <param name="innersetnumber"></param>
        /// <returns></returns>
        public static Boolean PrintsurgicalInner(string internalLotNumber, Boolean innersetnumber, int labelcount = 0)
        {

            OuterLabelPrint(internalLotNumber,surgiclinnerset: innersetnumber, surgicallabelcount: labelcount);
            return true;
        }
        /// <summary>
        /// Common Method to call inner and Outer 
        /// </summary>
        /// <param name="internalLotNumber">Internal Lot Number</param>
        /// <returns>specialInternalLotNumber to Update back to DB</returns>
        public static OuterLabelDTO LabelPrint(string internalLotNumber, Boolean isGCLabel, Boolean isLotVerificationRequired = false, string itemType = null)
        {
            string specialInternalLotNumber = string.Empty;
            OuterLabelDTO objouter = new OuterLabelDTO();
            try
            {
                InnerLabelDTO obj = InnerLabelPrint(internalLotNumber, itemType);
            }
            catch (Exception ex)
            {
                throw new FloorSystemException("Exception Occured while printing inner", Constants.FINALPACKINGPRINTER, ex, true);
            }
            try
            {

                objouter = OuterLabelPrint(internalLotNumber,itemType: itemType);
            }
            catch (Exception ex)
            {
                throw new FloorSystemException("Exception Occured while printing Outer LPT", Constants.FINALPACKINGPRINTER, ex, true);
            }
            if (isGCLabel)
            {
                FinalPackingDTO gcInnerLabel = new FinalPackingDTO();
                gcInnerLabel = FinalPackingBLL.GetGCLabelInner(internalLotNumber);
                try
                {
                    PrintGCInnerLabel(gcInnerLabel.Size, gcInnerLabel.ExpiryDate.Value, gcInnerLabel.customerLotNumber, gcInnerLabel.Boxespacked);
                }
                catch (Exception ex)
                {
                    throw new FloorSystemException("Exception Occured while printing GC Label Inner", Constants.FINALPACKINGPRINTER, ex, true);
                }
                try
                {
                    PrintGCOuterLabel(gcInnerLabel.Size, gcInnerLabel.ExpiryDate.Value, gcInnerLabel.customerLotNumber, gcInnerLabel.Casespacked);
                }
                catch (Exception ex)
                {
                    throw new FloorSystemException("Exception Occured while printing GC Label Outer", Constants.FINALPACKINGPRINTER, ex, true);

                }
            }
            return objouter;
        }
        /// <summary>
        ///  Print InnerBox label From Scan Batchcard for inner 
        /// </summary>
        /// <param name="internalLotNumber">Internal Lot Number</param>
        /// <returns>returns InnerLabel Data object</returns>   
        public static InnerLabelDTO InnerLabelPrint(string internalLotNumber, string itemType = null)
        {
            HSBHWInterface hw = new HSBHWInterface();
            hw.ComPort = WorkStationDataConfiguration.GetInstance().FirstInkjet_Comport;
            hw.BaudRate = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().FirstInkjet_BaudRate);
            switch (WorkStationDataConfiguration.GetInstance().FirstInkjet_Parity)
            {
                case "Even":
                    hw.Parity = System.IO.Ports.Parity.Even;
                    break;
                case "Odd":
                    hw.Parity = System.IO.Ports.Parity.Odd;
                    break;
                default:
                    hw.Parity = System.IO.Ports.Parity.None;
                    break;
            }

            switch (WorkStationDataConfiguration.GetInstance().FirstInkjet_StopBits)
            {
                case "1":
                    hw.StopBits = System.IO.Ports.StopBits.One;
                    break;
                case "1.5":
                    hw.StopBits = System.IO.Ports.StopBits.OnePointFive;
                    break;
                case "2":
                    hw.StopBits = System.IO.Ports.StopBits.Two;
                    break;
                default:
                    hw.StopBits = System.IO.Ports.StopBits.None;
                    break;
            }
            hw.Timeout = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().FirstInkjet_Timeout);
            InnerLabelDTO objInnerLabel = new InnerLabelDTO();
            FinalPackingDTO objFinalPackingDTO = new FinalPackingDTO();

            if (itemType == Convert.ToString(Constants.SIX))
                objFinalPackingDTO = FinalPackingBLL.GetSecondGradeInternalLotNumberDetails(internalLotNumber);
            else
                objFinalPackingDTO = FinalPackingBLL.GetInternalLotNumberDetails(internalLotNumber);

            SOLineDTO objSOLineDTO = FinalPackingBLL.GetSOLineData(objFinalPackingDTO.Ponumber, objFinalPackingDTO.ItemNumber, objFinalPackingDTO.Size);
            List<BatchDTO> objBatchDTO = FinalPackingBLL.BatchCardDetailsbyInternalLotNumber(internalLotNumber);
            string Inkjetprintername = WorkStationDataConfiguration.GetInstance().innerPrinter;
            string cProdRefNo = string.Empty;
            string cPo = string.Empty;
            string cCustSize = string.Empty;
            string cCustOrderLot = string.Empty;
            string cPline = string.Empty;
            string cCustRefNo = string.Empty;
            string cHartaSize = string.Empty;
            string cOrderNum = string.Empty;
            string cOuterGtn14_Code = string.Empty;
            string cInnerGtn14_Code = string.Empty;
            string cDistBy = string.Empty;
            string cDistCountry = string.Empty;
            string cBrand = string.Empty;
            string cBatchTime = string.Empty;
            DateTime? dProd = null;
            string cInkjetMsg = string.Empty;
            string stationNumber = WorkStationDataConfiguration.GetInstance().stationNumber;
            string cItemNumber = objSOLineDTO.ItemNumber;

            int nExpMonth = objSOLineDTO.Expiry;
            if (objBatchDTO.Count > Constants.ZERO)
                dProd = objBatchDTO[0].BatchCarddate;
            DateTime dMfg = Convert.ToDateTime(objFinalPackingDTO.ManufacturingDate);
            DateTime dExp = Convert.ToDateTime(objFinalPackingDTO.ExpiryDate);
            string cGs1 = string.Empty;
            string cReadable = string.Empty;
            string cLot = internalLotNumber.Trim();

            if (!string.IsNullOrEmpty(objSOLineDTO.Reference1))
            {
                cProdRefNo = objSOLineDTO.Reference1.Trim();
            }

            if (!string.IsNullOrEmpty(objSOLineDTO.OrderNumber))
            { cPo = objSOLineDTO.OrderNumber.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.CustomerSizeDesc))
            { cCustSize = objSOLineDTO.CustomerSizeDesc.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.CustomerLotNumber))
            { cCustOrderLot = objSOLineDTO.CustomerLotNumber.Trim(); }

            if (objBatchDTO.Count > Constants.ZERO)
                if (!string.IsNullOrEmpty(objBatchDTO[0].Line))
                { cPline = objBatchDTO[0].Line.Trim(); }

            decimal nGross = objSOLineDTO.GrossWeight;
            decimal nNett = objSOLineDTO.NettWeight;

            if (!string.IsNullOrEmpty(objSOLineDTO.Reference1))
            { cCustRefNo = objSOLineDTO.Reference1.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.ItemSize))
            { cHartaSize = objSOLineDTO.ItemSize.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.CustomerRefernceNumber))
            { cOrderNum = objSOLineDTO.CustomerRefernceNumber.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.OuterProductCode))
            { cOuterGtn14_Code = objSOLineDTO.OuterProductCode.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.InnerProductCode))
            { cInnerGtn14_Code = objSOLineDTO.InnerProductCode.Trim(); } // correction done by srikanth - correcetd the inner productcode reference

            if (!string.IsNullOrEmpty(objSOLineDTO.Reference1))
            { cDistBy = objSOLineDTO.Reference1.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.Reference2))
            { cDistCountry = objSOLineDTO.Reference2.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.ItemName))
            { cBrand = objSOLineDTO.ItemName.Trim(); }

            DateTime dEtd = objSOLineDTO.SHIPPINGDATEREQUESTED;
            int nInnerBox = objSOLineDTO.CaseCapacity;
            if (objBatchDTO.Count > Constants.ZERO)
                if (!string.IsNullOrEmpty(objBatchDTO[0].ShortTime))
                { cBatchTime = objBatchDTO[0].ShortTime; }

            // yiksiu SEP 2017 : Label Set Optimization
            string innerLabelSetDateFormat = FinalPackingBLL.GetLabelSetDateFormat(objSOLineDTO.InnerLabelSetDateFormat);

            if (WorkStationDataConfiguration.GetInstance().LHardwareIntegration == true)
                #region "Inner Set switch case"

                switch (objFinalPackingDTO.Innersetlayout)
                {
                    #region testing inner label

                    #endregion

                    #region Old Inner Label
                    #region Inner Set 356,  LAB-IB-IHCP-0006
                    case "356":
                    case "LAB-IB-IHCP-0006":
                        //cLot = "39"+cLot.Trim();
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Cannot print this set using VIDEOJET printer");
                        }

                        break;
                    #endregion
                    #region Inner Set LAB-IB-DESK-0002, Former 296
                    case "LAB-IB-DESK-0002":
                        String[] cMonthN1 = { "JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ" };
                        dExp = dMfg.AddMonths(nExpMonth);

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cCustOrderLot + "-" + cMonthN1[Convert.ToInt32(dMfg.ToString("MM")) - 1] + "/" + dMfg.ToString("yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Set 354, LAB-IB-VRDT-0003
                    case "LAB-IB-VRDT-0003":
                    case "354":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 353, LAB-IB-IHCP-0005
                    case "353":
                    case "LAB-IB-IHCP-0005":
                        //cLot = "39"+cLot.Trim();
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Cannot print this set using VIDEOJET printer");
                        }
                        break;
                    #endregion
                    #region Inner Set 352, LAB-IB-HTLG-0089
                    case "352":
                    case "LAB-IB-HTLG-0089":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cPo.Trim(), false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Cannot print this set using VIDEOJET printer");
                        }
                        break;
                    #endregion
                    #region Inner Set 351, LAB-IB-MCKU-0007
                    case "LAB-IB-MCKU-0007":
                    case "351":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), "MNF: " + dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "MNF: " + dMfg.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 350, LAB-IB-HTLG-0088
                    case "LAB-IB-HTLG-0088":
                    case "350": // 
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat) };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 346, LAB-IB-HTLG-0086
                    case "LAB-IB-HTLG-0086":
                    case "346":
                        string cText1 = Chr(128) + "," + Chr(129) + "," + Chr(130) + "," + Chr(131) + "," + Chr(132) + "," + Chr(133) + "," + Chr(134) + "," + Chr(135) + "," + Chr(136) + "," + Chr(137);
                        string cText2 = Chr(138) + "," + Chr(139) + "," + Chr(140) + "," + Chr(141) + "," + Chr(142) + "," + Chr(143) + "," + Chr(144) + "," + Chr(145) + "," + Chr(146) + "," + Chr(147);
                        string cText3 = Chr(148) + "," + Chr(149) + "," + Chr(150) + "," + Chr(151) + "," + Chr(152) + "," + Chr(153) + "," + Chr(154) + "," + Chr(155) + "," + Chr(156) + "," + Chr(157);
                        string cText4 = Chr(158) + "," + Chr(159) + "," + Chr(160) + "," + Chr(161) + "," + Chr(162) + "," + Chr(163) + "," + Chr(164) + "," + Chr(165) + "," + Chr(166) + "," + Chr(167);

                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(43) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(43);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString(innerLabelSetDateFormat) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString(innerLabelSetDateFormat) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + cProdRefNo + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Set LAB-IB-HART-0001 - former 344
                    case "LAB-IB-HART-0001":
                    case "344":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "Rs. " + cCustOrderLot.Trim() + " Inclusive of all taxes Per box " + cDistCountry + " Pcs", false, Convert.ToInt32("53"), cPo.Trim() + "-" + cBrand.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat) + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat) + "    " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner LAB-IB-HTLG-0027
                    case "LAB-IB-HTLG-0027": // previous inner set 159
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim() + cCustSize.Trim(), false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {

                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion
                    #region Inner Set 343, LAB-IB-PMEC-0001
                    case "LAB-IB-PMEC-0001":
                    case "343":
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cCustOrderLot.Trim() + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString(innerLabelSetDateFormat) + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString(innerLabelSetDateFormat) + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(83) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(83) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);

                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Set 341, LAB-IB-VRDT-0002
                    case "LAB-IB-VRDT-0002":
                    case "341":

                        cCustOrderLot = dMfg.ToString("yyMMdd") + Right(cOrderNum, 6).Substring(0, 3);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 338/339 ,LAB-IB-HLYD-0015/LAB-IB-HLYD-0016 
                    case "LAB-IB-HLYD-0015"://Halyard (X Batch)
                    case "338": //Halyard (X Batch)
                    case "LAB-IB-HLYD-0016"://Halyard (V Batch)
                    case "339": //Halyard (V Batch)
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(192);
                        cInkjetMsg += "" + Chr(33);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(0) + Chr(75); //Foward Margin
                        cInkjetMsg += "" + Chr(0) + Chr(75); //Return Margin
                        cInkjetMsg += "" + Chr(0) + Chr(3);  //Interval
                        cInkjetMsg += "" + Chr(1) + Chr(44);//Print Speed
                        cInkjetMsg += "" + Chr(0);  //Algo
                        cInkjetMsg += "" + Chr(0);  //Algo
                        cInkjetMsg += "" + Chr(22); //2D Data Matrix
                        cInkjetMsg += "" + Chr(23);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(9);
                        cInkjetMsg += "" + Chr(34);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(43) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(43);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(87) + Chr(30) + Chr(31) + Chr(1) + "~1" + "01" + cInnerGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Trim() + "~1" + "30" + cCustRefNo + Chr(31) + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString(innerLabelSetDateFormat) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString(innerLabelSetDateFormat) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(19) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(122) + Chr(30) + "(01)" + cInnerGtn14_Code + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(19);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(122) + Chr(30) + "(17)" + dExp.ToString("yyMMdd") + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(7) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(122) + Chr(30) + "(10)" + cLot.Trim() + "(30)" + cCustRefNo + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(7);
                        cInkjetMsg += "" + Chr(13);
                        #endregion


                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);

                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Label 335,LAB-IB-MEDL-0018
                    case "LAB-IB-MEDL-0018":
                    case "335":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "               " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 333/334 , LAB-IB-HLYD-0013/LAB-IB-HLYD-0014
                    case "LAB-IB-HLYD-0013"://Halyard (V Batch)
                    case "333": //Halyard (V Batch)
                    case "LAB-IB-HLYD-0014"://Halyard (X Batch)
                    case "334": //Halyard (X Batch)

                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(192);
                        cInkjetMsg += "" + Chr(33);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(0) + Chr(75); //Foward Margin
                        cInkjetMsg += "" + Chr(0) + Chr(75); //Return Margin
                        cInkjetMsg += "" + Chr(0) + Chr(3);  //Interval
                        cInkjetMsg += "" + Chr(1) + Chr(44);//Print Speed
                        cInkjetMsg += "" + Chr(0);  //Algo
                        cInkjetMsg += "" + Chr(0);  //Algo
                        cInkjetMsg += "" + Chr(22); //2D Data Matrix
                        cInkjetMsg += "" + Chr(23);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(9);
                        cInkjetMsg += "" + Chr(34);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(43) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + "      " + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(43);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(87) + Chr(30) + Chr(31) + Chr(1) + "~1" + "01" + cInnerGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Trim() + "30" + cCustRefNo + Chr(31) + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString(innerLabelSetDateFormat) + "      " + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString(innerLabelSetDateFormat) + "      " + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(19) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(122) + Chr(30) + "(01)" + cInnerGtn14_Code + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(19);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(122) + Chr(30) + "(17)" + dExp.ToString("yyMMdd") + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(7) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(122) + Chr(30) + "(10)" + cLot.Trim() + "(30)" + cCustRefNo + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(7);
                        cInkjetMsg += "" + Chr(13);
                        #endregion


                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);

                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Set 325/332 , LAB-IB-HLYD-0011/LAB-IB-HLYD-0012
                    case "LAB-IB-HLYD-0011"://Halyard (V Batch)
                    case "325": //Halyard (V Batch)
                    case "LAB-IB-HLYD-0012"://Halyard (X Batch)
                    case "332": //Halyard (X Batch)

                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(192);
                        cInkjetMsg += "" + Chr(33);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(0) + Chr(75); //Foward Margin
                        cInkjetMsg += "" + Chr(0) + Chr(75); //Return Margin
                        cInkjetMsg += "" + Chr(0) + Chr(3);  //Interval
                        cInkjetMsg += "" + Chr(1) + Chr(44);//Print Speed
                        cInkjetMsg += "" + Chr(0);  //Algo
                        cInkjetMsg += "" + Chr(0);  //Algo
                        cInkjetMsg += "" + Chr(22); //2D Data Matrix
                        cInkjetMsg += "" + Chr(23);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(9);
                        cInkjetMsg += "" + Chr(34);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(43) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(43);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(87) + Chr(30) + Chr(31) + Chr(1) + "~1" + "01" + cInnerGtn14_Code + "11" + dMfg.ToString("yyMMd") + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Trim() + "30" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10) + Chr(31) + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString(innerLabelSetDateFormat) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString(innerLabelSetDateFormat) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(19) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(122) + Chr(30) + "(01)" + cInnerGtn14_Code + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(19);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(122) + Chr(30) + "(11)" + dMfg.ToString("yyMMdd") + "(17)" + dExp.ToString("yyMMdd") + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(7) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(122) + Chr(30) + "(10)" + cLot.Trim() + "(30)" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10) + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(7);
                        cInkjetMsg += "" + Chr(13);
                        #endregion


                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);

                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion 
                    //#region Inner Set 326/327 , LAB-IB-KCGS-0003/LAB-IB-KCGS-0004
                    //case "LAB-IB-KCGS-0003"://KIMBERLY CLARK (X Batch)
                    //case "326": //KIMBERLY CLARK (X Batch)
                    //case "LAB-IB-KCGS-0004"://KIMBERLY CLARK (V Batch)
                    //case "327": //KIMBERLY CLARK (V Batch)

                    //    #region message
                    //    cInkjetMsg = "" + Chr(1);
                    //    cInkjetMsg += "" + Chr(192);
                    //    cInkjetMsg += "" + Chr(33);
                    //    cInkjetMsg += "" + Chr(0);
                    //    cInkjetMsg += "" + Chr(0);
                    //    cInkjetMsg += "" + Chr(1);
                    //    cInkjetMsg += "" + Chr(1);
                    //    cInkjetMsg += "" + Chr(0) + Chr(75); //Foward Margin
                    //    cInkjetMsg += "" + Chr(0) + Chr(75); //Return Margin
                    //    cInkjetMsg += "" + Chr(0) + Chr(3);  //Interval
                    //    cInkjetMsg += "" + Chr(1) + Chr(44);//Print Speed
                    //    cInkjetMsg += "" + Chr(0);  //Algo
                    //    cInkjetMsg += "" + Chr(0);  //Algo
                    //    cInkjetMsg += "" + Chr(22); //2D Data Matrix
                    //    cInkjetMsg += "" + Chr(23);
                    //    cInkjetMsg += "" + Chr(1);
                    //    cInkjetMsg += "" + Chr(9);
                    //    cInkjetMsg += "" + Chr(34);
                    //    cInkjetMsg += "" + Chr(64);
                    //    cInkjetMsg += "" + Chr(0);
                    //    cInkjetMsg += "" + Chr(0);
                    //    cInkjetMsg += "" + Chr(0);
                    //    cInkjetMsg += "" + Chr(0);
                    //    cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString(innerLabelSetDateFormat) + Chr(30) + Chr(70) + Chr(30) + dExp.ToString(innerLabelSetDateFormat) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                    //    cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(30) + Chr(20) + Chr(30) + cCustRefNo + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                    //    cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(210) + Chr(1) + Chr(16) + Chr(31) + Chr(1) + "~1" + "01" + cInnerGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Trim() + Chr(31) + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(1);
                    //    cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(42) + Chr(30) + "(01)" + cInnerGtn14_Code + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(13);
                    //    cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(7) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(42) + Chr(30) + "(17)" + dExp.ToString("yyMMdd") + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(7);
                    //    cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(42) + Chr(30) + "(10)" + cLot.Trim() + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(1);
                    //    cInkjetMsg += "" + Chr(13);
                    //    #endregion

                    //    if (Inkjetprintername == "IMAJE")
                    //    {
                    //        hw.ImajeNew(cInkjetMsg, 87);
                    //    }
                    //    else
                    //    {
                    //        // VideoJet
                    //        objInnerLabel.isPrintSuccess = false;
                    //        //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                    //    }

                    //    break;
                    //#endregion
                    #region Inner Set 324, LAB-IB-CDNL-0003
                    case "LAB-IB-CDNL-0003":
                    case "324":
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(43) + Chr(52) + Chr(1) + Chr(16) + cCustOrderLot.Trim() + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(43);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString(innerLabelSetDateFormat) + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString(innerLabelSetDateFormat) + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(83) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(83) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    //#region Inner Set 330, LAB-IB-MCKU-0004
                    //case "LAB-IB-MCKU-0004":
                    //case "330":

                    //    if (Inkjetprintername == "IMAJE")
                    //    {
                    //        //Jet 1
                    //        if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                    //        {
                    //            //Jet 2
                    //            objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                    //        }
                    //        else
                    //        {
                    //            objInnerLabel.isPrintSuccess = false;
                    //        }
                    //    }
                    //    else
                    //    {
                    //        // VideoJet
                    //        String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), cLot.Trim() };
                    //        hw.LabelString = s;
                    //        if (hw.VideoJet() == true)
                    //        {
                    //            objInnerLabel.isPrintSuccess = true;
                    //        }
                    //        else
                    //        {
                    //            objInnerLabel.isPrintSuccess = false;
                    //        }
                    //    }
                    //    break;
                    //#endregion
                    #region Inner Set 329, LAB-IB-DENC-0001
                    case "LAB-IB-DENC-0001":
                    case "329":
                        dMfg = DateTime.ParseExact(cCustOrderLot.Substring(4, 2) + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                        dExp = dMfg.AddMonths(nExpMonth);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "Lote: " + cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Fab: " + dMfg.ToString("MM/yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { "Lote: " + cCustOrderLot.Trim(), "", "Fab: " + dMfg.ToString("MM/yyyy") + "          " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #endregion
                    #region Inner Set 322, LAB-IB-MEDL-0014
                    case "LAB-IB-MEDL-0014":
                    case "322":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #endregion
                    #region Inner Set 321, LAB-IB-MEDL-0013
                    case "LAB-IB-MEDL-0013":
                    case "321":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat) + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat) + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 320, LAB-IB-MEDL-0012
                    case "LAB-IB-MEDL-0012":
                    case "320":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", true, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot.Trim(), cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 319, LAB-IB-MEDL-0011
                    case "LAB-IB-MEDL-0011":
                    case "319":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "               " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 318, LAB-IB-MEDL-0015
                    case "LAB-IB-MEDL-0015":
                    case "318":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "    " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), "LOT NO: " + cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { "    " + cLot.Trim(), "LOT NO: " + cCustOrderLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #endregion
                    #region Inner Set LAB-IB-HTLG-0070  OLD Inner 249
                    case "LAB-IB-HTLG-0070":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 316, LAB-IB-S2SG-0001
                    case "LAB-IB-S2SG-0001":
                    case "316":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 315, LAB-IB-MEDL-0009
                    case "LAB-IB-MEDL-0009":
                    case "315":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 313, LAB-IB-CDNL-0002
                    case "LAB-IB-CDNL-0002":
                    case "313":
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(40) + Chr(54) + Chr(2) + Chr(16) + cCustOrderLot.Trim() + Chr(30) + Chr(16) + Chr(30) + Chr(16) + Chr(2) + Chr(54) + Chr(128) + Chr(40);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(54) + Chr(2) + Chr(16) + dExp.ToString(innerLabelSetDateFormat) + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(2) + Chr(54) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(83) + Chr(2) + Chr(16) + cLot.Trim() + Chr(16) + Chr(2) + Chr(83) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Set 312, LAB-IB-CDNL-0001
                    case "LAB-IB-CDNL-0001":
                    case "312":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), PadCenter(cCustOrderLot, 11)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "", PadCenter(cCustOrderLot, 11), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 310, 311, LAB-IB-HLYD-0009, LAB-IB-HLYD-0010
                    case "LAB-IB-HLYD-0009":
                    case "310":
                    case "LAB-IB-HLYD-0010":
                    case "311":
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(37) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(37);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString(innerLabelSetDateFormat) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString(innerLabelSetDateFormat) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }
                        break;
                    #endregion
                    #region Inner Set 308, LAB-IB-MCKU-0003
                    case "LAB-IB-MCKU-0003"://Print imaje and sticker
                    case "308"://Print imaje and sticker

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), true, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat) + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat) + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 307, LAB-IB-MCKU-0002
                    case "LAB-IB-MCKU-0002"://Print imaje and sticker
                    case "307"://Print imaje and sticker

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), "MNF: " + dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "MNF: " + dMfg.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 304, LAB-IB-MEDL-0006
                    case "LAB-IB-MEDL-0006":
                    case "304":

                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(36) + Chr(212) + Chr(1) + Chr(16) + "!" + Chr(16) + Chr(1) + Chr(212) + Chr(128) + Chr(36) + Chr(128) + Chr(38) + Chr(212) + Chr(1) + Chr(16) + Chr(30) + Chr(60) + Chr(30) + Chr(34) + Chr(30) + Chr(54) + Chr(30) + "#" + Chr(16) + Chr(1) + Chr(212) + Chr(128) + Chr(38) + Chr(128) + Chr(11) + Chr(54) + Chr(1) + Chr(16) + Chr(30) + Chr(27) + Chr(30) + "   Size:" + cCustSize + Chr(16) + Chr(1) + Chr(54) + Chr(128) + Chr(11);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(11) + Chr(79) + Chr(1) + Chr(16) + cLot + "  " + dMfg.ToString(innerLabelSetDateFormat) + "  " + cProdRefNo + Chr(30) + Chr(128) + Chr(30) + Chr(16) + Chr(1) + Chr(79) + Chr(128) + Chr(11);
                        cInkjetMsg += "" + Chr(13); //Font use MEDL01,SIN09110,SIN11118

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Set 301/303 , LAB-IB-HLYD-0007/LAB-IB-HLYD-0008
                    case "LAB-IB-HLYD-0007"://Halyard
                    case "301": //Halyard
                    case "LAB-IB-HLYD-0008"://Halyard
                    case "303": //Halyard
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(192);
                        cInkjetMsg += "" + Chr(33);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(0) + Chr(75); //Foward Margin
                        cInkjetMsg += "" + Chr(0) + Chr(75); //Return Margin
                        cInkjetMsg += "" + Chr(0) + Chr(3);  //Interval
                        cInkjetMsg += "" + Chr(1) + Chr(44);//Print Speed
                        cInkjetMsg += "" + Chr(0);  //Algo
                        cInkjetMsg += "" + Chr(0);  //Algo
                        cInkjetMsg += "" + Chr(22); //2D Data Matrix
                        cInkjetMsg += "" + Chr(23);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(9);
                        cInkjetMsg += "" + Chr(34);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44) + Chr(128) + Chr(1) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(6) + Chr(30) + Chr(31) + Chr(1) + "~1" + "01" + cInnerGtn14_Code + "17" + dExp.ToString("yyMMdd") + "30" + cCustRefNo + "~1" + "10" + cLot.Trim() + Chr(31) + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(1) + Chr(128) + Chr(19) + Chr(210) + Chr(1) + Chr(16) + "(01)" + cInnerGtn14_Code + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(19);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString(innerLabelSetDateFormat) + "     " + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17) + Chr(128) + Chr(13) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(42) + Chr(30) + "(17)" + dExp.ToString("yyMMdd") + "(30)" + cCustRefNo + Chr(30) + Chr(4) + Chr(30) + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(7) + Chr(210) + Chr(1) + Chr(16) + Chr(30) + Chr(132) + Chr(30) + "(10)" + cLot.Trim() + Chr(16) + Chr(1) + Chr(210) + Chr(128) + Chr(7);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);

                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Set 302, LAB-IB-MCKU-0001
                    case "LAB-IB-MCKU-0001":
                    case "302":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), "MNF: " + dMfg.ToString("MMM yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "MNF: " + dMfg.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 300, LAB-IB-HTLG-0085
                    case "LAB-IB-HTLG-0085":
                    case "300":

                        cCustOrderLot = dMfg.ToString("yyyyMM") + Right(cPline, 2) + cDistCountry;

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat) + "    " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat) + "    " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 298, LAB-IB-ANSL-0012
                    case "LAB-IB-ANSL-0012":
                    case "298":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "      " + dMfg.ToString(innerLabelSetDateFormat) + "             " + dMfg.ToString("yyMM") + "LJ", false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "MFG. REF.: " + cLot.Trim() + "       BATCH NO.: " + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Set 138
                    //formerly Inner Set 138
                    case "138":
                    case "LAB-IB-HTLG-0084":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cPo, false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion
                    #region Inner label 297, LAB-IB-HNCE-0001
                    case "LAB-IB-HNCE-0001":
                    case "297":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Mfg Date: " + dMfg.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Cannot print this set using VIDEOJET printer");
                        }

                        break;
                    #endregion
                    #region Inner Set 296
                    case "296":
                        String[] cMonth = { "JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ" };
                        dExp = dMfg.AddMonths(nExpMonth);

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cCustOrderLot + "-" + cMonth[Convert.ToInt32(dMfg.ToString("MM")) - 1] + "/" + dMfg.ToString("yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Set 295
                    case "295":
                        String[] bMonth = { "JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ" };
                        dExp = dMfg.AddMonths(nExpMonth);

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cCustOrderLot + "-" + bMonth[Convert.ToInt32(dMfg.ToString("MM")) - 1] + "/" + dMfg.ToString("yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion
                    #region Inner Set 240
                    case "240":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot, false, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), cCustOrderLot);
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    case "288":

                        String[] aMonth = { "A", "B", "C", "D", "E", "H", "J", "K", "L", "N", "P", "S" };
                        cCustRefNo = cDistCountry + dMfg.ToString("yy") + aMonth[Convert.ToInt32(dMfg.ToString("MM")) - 1] + cCustOrderLot;

                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(40) + Chr(54) + Chr(2) + Chr(16) + cCustRefNo.Trim() + Chr(30) + Chr(16) + Chr(30) + Chr(16) + Chr(2) + Chr(54) + Chr(128) + Chr(40);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(54) + Chr(2) + Chr(16) + dExp.ToString(innerLabelSetDateFormat) + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(2) + Chr(54) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(83) + Chr(2) + Chr(16) + cLot.Trim() + Chr(16) + Chr(2) + Chr(83) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    case "289":

                        String[] aYear = { "J", "A", "B", "C", "D", "E", "F", "G", "H", "I" };
                        cCustRefNo = cProdRefNo + aYear[Convert.ToInt32(Right(dMfg.ToString("yy"), 1))] + dMfg.ToString("MM") + "-" + cCustOrderLot;

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustRefNo.Trim(), true, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustRefNo.Trim(), dMfg.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "290":

                        String[] aYear1 = { "J", "A", "B", "C", "D", "E", "F", "G", "H", "I" };
                        cCustRefNo = cProdRefNo + aYear1[Convert.ToInt32(Right(dMfg.ToString("yy"), 1))] + dMfg.ToString("MM") + "-" + cCustOrderLot;

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustRefNo.Trim(), true, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustRefNo.Trim(), "", cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    case "287":

                        cCustOrderLot = cPo.Substring(2, 3) + cProdRefNo;

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Mfg: " + dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), "Exp: " + dExp.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), "Mfg: " + dMfg.ToString(innerLabelSetDateFormat), "Exp: " + dExp.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    case "286":

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dMfg.ToString("yyMM") + "LJ", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat) + "   " + "REF: " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Cannot print this set using VIDEOJET printer");
                        }
                        break;
                    case "285":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Mfg: " + dMfg.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "Lot: " + cCustOrderLot.Trim(), "Mfg: " + dMfg.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    case "283":
                    case "284":
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(37) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(37);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }
                        break;
                    case "282"://BBRaun

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 6).Replace("/", "") + "1";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot, false, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot, dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat) + "   " + cLot };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    case "280"://Ansell/Microflex

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM-dd"), false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("yyyy-MM-dd"), cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    case "278"://Ansell/Microflex

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dMfg.ToString("yyMM") + "LJ") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cCustOrderLot, false, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM-dd") + "     " + "REF:" + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("yyMM") + "LJ", cCustOrderLot, dMfg.ToString("yyyy-MM-dd") + "     " + "REF:" + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #region Inner Set 279
                    case "279"://Ansell/Microflex

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dMfg.ToString("yyMM") + "LJ" + "   " + "BATCH: " + cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "MFG: " + dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "EXP: " + dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("yyMM") + "LJ" + "   " + "BATCH: " + cCustOrderLot.Trim(), "MFG: " + dMfg.ToString("yyyy-MM"), "EXP: " + dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 276
                    case "276"://Ansell/Microflex

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dMfg.ToString("yyMM") + "LJ" + "   " + "BATCH: " + cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("yyMM") + "LJ" + "   " + "BATCH: " + cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #endregion
                    #region Inner Set 275
                    case "275"://Ansell/Microflex

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dMfg.ToString("yyMM") + "LJ", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "MFG: " + dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "EXP: " + dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("yyMM") + "LJ", cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 274
                    case "274":

                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(37) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(37);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion


                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }
                        break;
                    #endregion
                    #region Inner Set 273
                    case "273":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dMfg.ToString("yyMM") + "LJ" + "   " + "BATCH: " + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM-dd") + "   " + "REF: " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "", (dMfg.ToString("yyMM") + "LJ") + "   " + "BATCH: " + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ", dMfg.ToString("yyyy-MM-dd") + "   " + "REF: " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    case "271":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "M" + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "M" + cLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    case "272":

                        cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //This is for BB Code

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #region Inner Set 270
                    case "270":
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(37) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(37);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }
                        break;
                    #endregion
                    case "265":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;


                    case "266":

                        cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "    " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), "LOT NO: " + cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { "    " + cLot.Trim(), "LOT NO: " + cCustOrderLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;


                    case "267":

                        cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                            {
                                //jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "               " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;


                    case "268":

                        cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", true, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot.Trim(), cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;


                    case "269":

                        cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    case "264":

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dMfg.ToString("yyMM") + "LJ", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("yyyy-MM-dd"), false, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM-dd") + "   " + "REF: " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Cannot print this set using VIDEOJET printer");
                        }
                        break;
                    /* Code for Inner Set 263 IMAJE printing*/

                    case "263":

                        cCustOrderLot = cPo + "-" + cBrand;

                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cCustOrderLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(36) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(36);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(57) + Chr(1) + Chr(16) + Chr(30) + Chr(147) + Chr(30) + " " + cCustSize.Trim() + Chr(30) + Chr(3) + Chr(30) + Chr(16) + Chr(1) + Chr(57) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString("yyyy/MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString("yyyy/MM") + Chr(30) + Chr(97) + Chr(30) + "     " + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    case "261":

                        cCustOrderLot = cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), "Mfr :" + dMfg.ToString("yyyy-MM"), true, Convert.ToInt32("53"), "Exp :" + dExp.ToString("yyyy-MM") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "Mfr :" + dMfg.ToString("yyyy-MM"), "Exp :" + dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;

                    case "262":

                        cCustOrderLot = cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), true, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    #region Inner Set 260
                    case "260":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "    Exp Date: " + dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "    Mfg Date: " + dMfg.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot.Trim(), "    Exp Date: " + dExp.ToString("yyyy-MM"), "    Mfg Date: " + dMfg.ToString("yyyy-MM") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    #endregion

                    #region Label Set Optimzation - Custom Date

                    /* yiksiu Sep 2017 : Label Set Optimzation
                     *  121 --> 248
                     *  128 --> 249
                     *  126 --> 250
                     *  205 --> 251
                     *  148 --> 252
                     *  234 --> 253
                     */

                    #region Inner Set 248 (121)
                    case "248":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cLot.Trim(), dExp.ToString(innerLabelSetDateFormat), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 249 (128)
                    case "249":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 250 (126)
                    case "250":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat) };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 251 (205)
                    case "251":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dExp.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 252 (148)
                    case "252":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 253 (234)
                    case "253":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #endregion

                    #endregion

                    /************************************** HSB Floor System Code Start **************************************/
                    #region Inner Set 226 & 227
                    case "226":
                    case "227":
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(37) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(37);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }
                        break;
                    #endregion

                    #region Inner Set 110
                    case "110":
                        cCustOrderLot = Right(stationNumber, 2) + "00" + Right(cLot, 4) + "HL1" + Right(cPline, 2) + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MMdd");
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot, false, Convert.ToInt32("53"), "Mfg Date: " + dMfg.ToString("MMM yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    #region Inner Set 123
                    case "123":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cOrderNum.Trim(), false, Convert.ToInt32("53"), "");// Cust Order Number
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    #region Inner Set 135
                    case "135":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cPo.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("dd/MM/yyyy"), false, Convert.ToInt32("53"), dExp.ToString("dd/MM/yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    #region Inner Set 140
                    case "140":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cPo.Trim(), false, Convert.ToInt32("53"), dMfg.ToString("MM-yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    #region Inner Set 150
                    case "150":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cPo.Trim(), false, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    #region Inner Set 157
                    case "157":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cInnerGtn14_Code + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) /*Prod code+3 digit mfg MMY*/
                                , false, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")/*Fixed to 3 digit Prod Date MMY*/) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    #region Inner Set 159
                    case "159":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim() + cCustSize.Trim(), false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {

                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    #region Inner Set 177
                    case "177":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim() + " " + cCustSize.Trim()) == true) //
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    #region Inner Set 239
                    case "239":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {

                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    #region Inner Set 242
                    case "242":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim() + "                      " + dMfg.ToString("yyyy-MM")) == true) //check space condition: 22
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim() + "                    " + dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "");//check space condition: 20
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    /************************************** HSB Floor System Code End **************************************/

                    #region Inner Set 103
                    case "103":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "Lot: " + cCustOrderLot.Trim(), cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #endregion

                    #region Inner Set 237 
                    case "237":
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(40) + Chr(54) + Chr(2) + Chr(16) + cCustOrderLot.Trim() + Chr(30) + Chr(16) + Chr(30) + Chr(16) + Chr(2) + Chr(54) + Chr(128) + Chr(40);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(54) + Chr(2) + Chr(16) + dExp.ToString("yyyy-MM-dd") + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(2) + Chr(54) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(83) + Chr(2) + Chr(16) + cLot.Trim() + Chr(16) + Chr(2) + Chr(83) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion

                    #region Inner Set 225 & 233
                    case "225":
                    case "233":
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(40) + Chr(54) + Chr(2) + Chr(16) + cCustOrderLot.Trim() + Chr(30) + Chr(16) + Chr(30) + Chr(16) + Chr(2) + Chr(54) + Chr(128) + Chr(40);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(54) + Chr(2) + Chr(16) + dMfg.ToString("yyyy-MM") + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(2) + Chr(54) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(83) + Chr(2) + Chr(16) + cLot.Trim() + Chr(16) + Chr(2) + Chr(83) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);

                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion

                    #region Inner Set 149
                    case "149":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                            {
                                //Jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dExp.ToString("MMM yyyy"), dMfg.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 258
                    case "258":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cPo, false, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), cLot);
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }

                        break;
                    #endregion

                    #region Inner Set 245
                    case "245":
                        cCustOrderLot = cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM-dd"), false, Convert.ToInt32("53"), "                         Ref : " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM-dd").ToUpper(), "Ref : " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 246
                    case "246":
                        cCustOrderLot = cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM-dd"), true, Convert.ToInt32("53"), dExp.ToString("yyyy-MM-dd") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM-dd"), dExp.ToString("yyyy-MM-dd") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 247
                    case "247":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #endregion

                    #region Inner Set 243 - 26/07/2017
                    case "243":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 143 - 14/04/2017
                    case "143":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cPo.Trim() + "     " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cPo.Trim() + "     " + cLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    #endregion

                    #region Inner Set 241
                    case "241":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 238
                    case "238":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "MFG REF: " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "MFG REF: " + cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 236
                    case "236":
                        dExp = dMfg.AddDays(-1).AddMonths(nExpMonth);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("dd-MMM-yyyy"), false, Convert.ToInt32("53"), dExp.ToString("dd-MMM-yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("dd-MMM-yyyy"), dExp.ToString("dd-MMM-yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    #endregion

                    #region Inner Set 219
                    case "219":
                        cCustOrderLot = cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), "Exp :" + dExp.ToString("MMM yyyy"), true, Convert.ToInt32("53"), "Mfr :" + dMfg.ToString("MMM yyyy") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "Exp :" + dExp.ToString("MMM yyyy"), "Mfr :" + dMfg.ToString("MMM yyyy") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #endregion

                    #region Inner Set 235
                    case "235":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "", cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    #endregion

                    case "998": //Second grade inner set
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot, false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM-yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM-yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot, dMfg.ToString("MMM-yyyy"), dExp.ToString("MMM-yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "230":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot, dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "232":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot) == true)
                            {
                                //jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot, dExp.ToString("yyyy-MM") + "     " + cLot, "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "231":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dMfg.ToString("MMM-yyyy") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), " ", dMfg.ToString("MMM-yyyy") + "          " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "222":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "229":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot No: " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Mfg Date: " + dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "Exp Date: " + dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { "Lot No: " + cLot.Trim(), "Mfg Date: " + dMfg.ToString("MMM yyyy"), "Exp Date: " + dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }


                        break;

                    case "217":
                        //cCustOrderLot = dEtd.ToString("ddMMyyyy") + cProdRefNo;
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("MMM yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot.Trim(), "", dExp.ToString("ddMMyyyy") + "          " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }


                        break;

                    case "198":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dEtd.ToString("MMM-yyyy"), false, Convert.ToInt32("53"), dMfg.ToString("MMM-yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("MMM-yyyy"), false, Convert.ToInt32("53"), cLot);
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;


                    case "228":
                        dMfg = DateTime.ParseExact(cCustOrderLot.Substring(4, 2) + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                        dExp = dMfg.AddMonths(nExpMonth);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MM/yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot.Trim(), "", dMfg.ToString("MM/yyyy") + "          " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }


                        break;

                    case "125":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "224":
                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 5).Replace("/", "");
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;


                    case "130":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "133":
                        //cLot = dMfg.ToString("yyMMdd") + cPline.Trim() + Right(cLot, 6);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim() + "     " + cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cCustOrderLot + "     " + cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "146":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }

                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cLot.Trim(), dExp.ToString("MMM yyyy"), dMfg.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "180":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim() + "-" + cProdRefNo.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cCustOrderLot.Trim() + "-" + cProdRefNo.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") + "   " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "181":
                        //dMfg = DateTime.ParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                        //dExp = dMfg.AddMonths(nExpMonth);

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM-yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM-yyyy") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM-yyyy"), dExp.ToString("MMM-yyyy") + "   " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "182":
                        //String[] aYear = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                        //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                        //if (nPos > -1)
                        //{
                        //    string cYear = DateTime.Today.ToString("yyyy").Substring(0, 3) + (nPos + 1).ToString();
                        //    DateTime.TryParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", null, DateTimeStyles.None, out dMfg);
                        //}
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "185":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "EXP " + dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), "EXP " + dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "187":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "202":
                        cCustOrderLot = dMfg.ToString("yyMM") + "01" + cPline;
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MM/yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), " ", dMfg.ToString("MM/yyyy") + "        " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "204":
                        cCustOrderLot = dMfg.ToString("ddMMyyyy") + cProdRefNo.Trim();
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cProdRefNo.Trim() + "     " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dExp.ToString("dd MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cProdRefNo.Trim() + "     " + cLot.Trim(), cCustOrderLot.Trim(), dExp.ToString("dd MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "183":
                        cGs1 = "01" + cInnerGtn14_Code.Trim() + "10" + cLot.Trim();
                        cReadable = "(01)" + cInnerGtn14_Code.Trim() + "(10)" + cLot.Trim();

                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(192);
                        cInkjetMsg += "" + Chr(33);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(0) + Chr(150);
                        cInkjetMsg += "" + Chr(0) + Chr(30);
                        cInkjetMsg += "" + Chr(0) + Chr(3);
                        cInkjetMsg += "" + Chr(1) + Chr(44);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(24);
                        cInkjetMsg += "" + Chr(14);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(9);
                        cInkjetMsg += "" + Chr(34);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + Chr(31) + Chr(1) + Chr(137) + Chr(134) + cGs1 + Chr(56) + Chr(31) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "   " + cReadable + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;

                    case "124":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("dd MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("dd MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "126":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "128":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "170":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy")) == true)
                            {
                                //Jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "172":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", true, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), cLot.Trim(), true, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("MMM yyyy"), cLot.Trim(), dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "178":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), "", dMfg.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "197":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Mfg: " + dMfg.ToString("MMM yyyy") + "   " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "Lot: " + cCustOrderLot.Trim(), "Mfg: " + dMfg.ToString("MMM yyyy") + "   " + cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "199":
                        //dMfg = DateTime.ParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                        //dExp = dMfg.AddMonths(nExpMonth);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "    " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "201":
                        cCustOrderLot = cPo.Trim() + "-" + cBrand.Trim();
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "    " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "108":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Batch No: " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Exp Date: " + dExp.ToString("dd/MM/yy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { "Batch No: " + cLot.Trim(), "Exp Date: " + dExp.ToString("dd/MM/yy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "112":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "    " + "Mfg Date: " + dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cLot.Trim(), "   " + "Mfg Date: " + dMfg.ToString("MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "121":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cLot.Trim(), dExp.ToString("MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "148":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                            {
                                //jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "               " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "154":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "155":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cPo.Trim(), false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Cannot print this set using VIDEOJET printer");
                        }
                        break;

                    case "164":
                        cCustOrderLot = cPo.Trim() + "-" + cCustRefNo.Trim();
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "167":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "Lot: " + cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Mfg:" + dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "Exp:" + dExp.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cLot.Trim(), "Mfg:" + dMfg.ToString("yyyy-MM"), "Exp:" + dExp.ToString("yyyy-MM") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "168":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), true, Convert.ToInt32("53"), dExp.ToString("MMM yyyy") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "194":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), " ") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), true, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("128")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "    " + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        //PrintInnerSticker(cSet);

                        break;

                    case "195":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), " ", false, Convert.ToInt32("53"), "Batch No: " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Exp Date: " + dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { "Batch No: " + cLot.Trim(), "Exp Date: " + dExp.ToString("MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "196":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Mfg: " + dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "Exp: " + dExp.ToString("MMM yyyy") + "   " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), "Mfg: " + dMfg.ToString("MMM yyyy"), "Exp: " + dExp.ToString("MMM yyyy") + "   " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;

                    case "211":
                        DateTime.TryParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", null, DateTimeStyles.None, out dMfg);
                        dExp = dMfg.AddMonths(nExpMonth);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("yyyy-MM-dd") + "    " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dExp.ToString("yyyy-MM-dd") + "    " + cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "212":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Exp: " + dExp.ToString("MMM yyyy") + "   " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { "Lot: " + cCustOrderLot.Trim(), "Exp: " + dExp.ToString("MMM yyyy") + "   " + cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;

                    case "213":
                        //DateTime.TryParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", null, DateTimeStyles.None, out dMfg);
                        //dExp = dMfg.AddMonths(nExpMonth);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MM/yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), "", dMfg.ToString("MM/yyyy") + "          " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "215": //SAFEMED (Poland)
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "    Lot: " + cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "    Exp: " + dExp.ToString("MM-yyyy") + "   " + cLot.Trim()) == true)
                            {
                                //jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Viral Test (ASTM F-1671)");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { "Lot: " + cCustOrderLot.Trim(), "Exp: " + dExp.ToString("MM-yyyy") + "   " + cLot.Trim(), "Viral Test (ASTM F-1671)" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    case "210":
                        //dMfg = DateTime.ParseExact("01" + "/" + cCustOrderLot.Substring(2, 2) + "/" + cCustOrderLot.Substring(0, 2), "dd/MM/yy", CultureInfo.InvariantCulture);
                        //dExp = dMfg.AddMonths(nExpMonth);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MM/yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "", dMfg.ToString("MM/yyyy") + "          " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;

                    case "LAB-IB-HTLG-0090":
                    case "355":
                    case "LAB-IB-HLYD-0017"://Halyard (X Batch)
                    case "345": //Halyard (X Batch)
                    case "LAB-IB-IHCP-0004": 
                    case "348":
                    case "LAB-IB-HART-0002":
                    case "347":
                    case "LAB-IB-MEDL-0021":
                    case "342":
                    case "LAB-IB-MEDL-0020":
                    case "340":
                    case "LAB-IB-MCKU-0006":
                    case "337":
                    case "LAB-IB-MEDL-0019":
                    case "336":
                    case "LAB-IB-MEDL-0017":
                    case "328":
                    case "LAB-IB-MEDL-0016":
                    case "323":
                    case "LAB-IB-MEDL-0010":
                    case "317":
                    case "LAB-IB-MEDL-0008":
                    case "314":
                    case "LAB-IB-MEDL-0007":
                    case "306":
                    case "LAB-IB-IHCP-0003":
                    case "305":
                    case "LAB-IB-IHCP-0002":
                    case "299":
                    case "209":
                    case "203":
                    case "162":
                    case "161":
                    case "218":
                    case "117":
                    case "153":
                    case "107":
                    case "244":
                        OuterLabelPrint(internalLotNumber,cset: objFinalPackingDTO.Innersetlayout);
                        break;


                    case "208":
                        cCustOrderLot = cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy").ToUpper()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy").ToUpper(), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "207":
                        cCustOrderLot = cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), true, Convert.ToInt32("53"), dExp.ToString("MMM yyyy") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;

                    case "206":
                        cCustOrderLot = cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "", cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "205":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "Exp Date: " + dExp.ToString("MMM-yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "Exp Date: " + dExp.ToString("MMM-yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "193":
                        //cLot = "39"+cLot.Trim();
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;

                    case "192":
                        //dMfg = DateTime.ParseExact(cCustOrderLot.Substring(4, 2) + "/" + cCustOrderLot.Substring(2, 2) + "/" + cCustOrderLot.Substring(0, 2), "dd/MM/yy", CultureInfo.InvariantCulture);
                        //dExp = dMfg.AddMonths(nExpMonth);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MM/yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        else
                        {
                            //VideoJet
                            String[] s = { cCustOrderLot.Trim(), "", dMfg.ToString("MM/yyyy") + "          " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;

                    case "190":
                        cGs1 = "01" + cOuterGtn14_Code.Trim() + "17" + dExp.ToString("yyMM00") + "10" + cLot.Trim();
                        cReadable = "(01)" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMM00") + "(10)" + cLot.Trim();

                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(192);
                        cInkjetMsg += "" + Chr(33);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(0) + Chr(150);
                        cInkjetMsg += "" + Chr(0) + Chr(30);
                        cInkjetMsg += "" + Chr(0) + Chr(3);
                        cInkjetMsg += "" + Chr(1) + Chr(44);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(24);
                        cInkjetMsg += "" + Chr(14);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(9);
                        cInkjetMsg += "" + Chr(34);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + Chr(31) + Chr(1) + Chr(137) + Chr(134) + cGs1 + Chr(56) + Chr(31) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "   " + cReadable + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + "   " + cLot.Trim() + "/" + dExp.ToString("yyyy.MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                            //Jet 1
                            //if (hw.ImajeBarcode(1, true, Convert.ToInt32("100"), cGs1) == true)
                            //{
                            //    //Jet 2
                            //    objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cReadable, false, Convert.ToInt32("53"), cLot.Trim() + "/" + dExp.ToString("yyyy.MM"));
                            //}
                            //else
                            //{
                            //    objInnerLabel.isPrintSuccess = false;
                            //}
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;

                    case "160":
                        if (dProd != null)
                            cCustOrderLot = dProd.Value.ToString("yyMMdd") + cPline;
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MM/yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot.Trim(), "", dMfg.ToString("MM/yyyy") + "          " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }


                        break;

                    case "158":
                        cCustOrderLot = cProdRefNo + dProd.Value.ToString("MM") + dProd.Value.ToString("yy").Substring(1, 1);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot, false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), true, Convert.ToInt32("53"), dExp.ToString("MMM yyyy") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot, dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "156":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", true, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot.Trim(), cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "106":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot No: " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Exp Date: " + dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "Mfg Date: " + dMfg.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { "Lot No: " + cLot.Trim(), "Exp Date: " + dExp.ToString("MMM yyyy"), "Mfg Date: " + dMfg.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "104":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "    Exp Date: " + dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "    Mfg Date: " + dMfg.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot.Trim(), "    Exp Date: " + dExp.ToString("MMM yyyy"), "    Mfg Date: " + dMfg.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    case "102":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "    " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), "LOT NO: " + cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { "    " + cLot.Trim(), "LOT NO: " + cCustOrderLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;

                    case "101":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion old label set

                    #region new label set 25/07/19 LabelSetNamingProject
                    
                    //formerly Inner Set 240
                    case "LAB-IB-HTLG-0064":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot, false, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), cCustOrderLot);
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    //formerly Inner Set 135
                    case "LAB-IB-HTLG-0016":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cPo.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("dd/MM/yyyy"), false, Convert.ToInt32("53"), dExp.ToString("dd/MM/yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    //formerly Inner Set 232
                    case "LAB-IB-HTLG-0058":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot) == true)
                            {
                                //jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot, dExp.ToString("yyyy-MM") + "     " + cLot, "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;                                         
                    //formerly Inner Set 287
                    case "LAB-IB-HTLG-0083":

                        cCustOrderLot = cPo.Substring(2, 3) + cProdRefNo;

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Mfg: " + dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), "Exp: " + dExp.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), "Mfg: " + dMfg.ToString(innerLabelSetDateFormat), "Exp: " + dExp.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    //formerly inner label set 286
                    case "LAB-IB-ANSL-0011":

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dMfg.ToString("yyMM") + "LJ", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat) + "   " + "REF: " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Cannot print this set using VIDEOJET printer");
                        }
                        break;
                    //formerly inner label set 285
                    case "LAB-IB-HTLG-0082":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Mfg: " + dMfg.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "Lot: " + cCustOrderLot.Trim(), "Mfg: " + dMfg.ToString(innerLabelSetDateFormat) + "   " + cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 283
                    case "LAB-IB-KCGS-0001":
                    //formerly inner label set 284
                    case "LAB-IB-KCGS-0002":
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(37) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(37);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }
                        break;
                    //formerly inner label set 280
                    case "LAB-IB-HTLG-0081"://Ansell/Microflex

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM-dd"), false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("yyyy-MM-dd"), cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 278
                    case "LAB-IB-ANSL-0009"://Ansell/Microflex

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dMfg.ToString("yyMM") + "LJ") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cCustOrderLot, false, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM-dd") + "     " + "REF:" + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("yyMM") + "LJ", cCustOrderLot, dMfg.ToString("yyyy-MM-dd") + "     " + "REF:" + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #region Inner Set 279
                    //formerly inner label set 279
                    case "LAB-IB-ANSL-0010"://Ansell/Microflex

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dMfg.ToString("yyMM") + "LJ" + "   " + "BATCH: " + cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "MFG: " + dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "EXP: " + dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("yyMM") + "LJ" + "   " + "BATCH: " + cCustOrderLot.Trim(), "MFG: " + dMfg.ToString("yyyy-MM"), "EXP: " + dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set 276
                    //formerly inner label set 276
                    case "LAB-IB-ANSL-0008"://Ansell/Microflex

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dMfg.ToString("yyMM") + "LJ" + "   " + "BATCH: " + cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("yyMM") + "LJ" + "   " + "BATCH: " + cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #endregion
                    #region Inner Set 275
                    //formerly inner label set 275
                    case "LAB-IB-ANSL-0007"://Ansell/Microflex

                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ";

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dMfg.ToString("yyMM") + "LJ", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "MFG: " + dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "EXP: " + dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("yyMM") + "LJ", cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    #region Inner Set LAB-IB-HLYD-0006
                    //formerly inner label set 274
                    case "LAB-IB-HLYD-0006":

                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(37) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(37);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion


                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }
                        break;
                    #endregion
                    #region Inner Set 273
                    //formerly inner label set 273
                    case "LAB-IB-ANSL-0006":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), dMfg.ToString("yyMM") + "LJ" + "   " + "BATCH: " + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM-dd") + "   " + "REF: " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "", (dMfg.ToString("yyMM") + "LJ") + "   " + "BATCH: " + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ", dMfg.ToString("yyyy-MM-dd") + "   " + "REF: " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion
                    //formerly inner label set 271
                    case "LAB-IB-HTLG-0080":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "M" + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "M" + cLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 272
                    case "LAB-IB-MEDL-0005":

                        cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //This is for BB Code

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    //formerly inner label set 270
                    #region Inner Set LAB-IB-HLYD-0005
                    case "LAB-IB-HLYD-0005":
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(37) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(37);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }
                        break;
                    #endregion
                    //floor inner label set 265
                    case "LAB-IB-VRDT-0001":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    //formerly inner label set 266
                    case "LAB-IB-MEDL-0001":

                        cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "    " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), "LOT NO: " + cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { "    " + cLot.Trim(), "LOT NO: " + cCustOrderLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;

                    //formerly inner label set 267
                    case "LAB-IB-MEDL-0002":

                        cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                            {
                                //jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "               " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    //formerly inner label set 268
                    case "LAB-IB-MEDL-0003":

                        cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", true, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot.Trim(), cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    //formerly inner label set 269
                    case "LAB-IB-MEDL-0004":

                        cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 263
                    case "LAB-IB-HTLG-0079":

                        cCustOrderLot = cPo + "-" + cBrand;

                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cCustOrderLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(36) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(36);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(57) + Chr(1) + Chr(16) + Chr(30) + Chr(147) + Chr(30) + " " + cCustSize.Trim() + Chr(30) + Chr(3) + Chr(30) + Chr(16) + Chr(1) + Chr(57) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString("yyyy/MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString("yyyy/MM") + Chr(30) + Chr(97) + Chr(30) + "     " + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;

                    #region Inner Set 260
                    //formerly inner label set 260
                    case "LAB-IB-HTLG-0076":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "    Exp Date: " + dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "    Mfg Date: " + dMfg.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot.Trim(), "    Exp Date: " + dExp.ToString("yyyy-MM"), "    Mfg Date: " + dMfg.ToString("yyyy-MM") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    #endregion

                    #region Label Set Optimzation - Custom Date

                    /* yiksiu Sep 2017 : Label Set Optimzation
                        *  121 --> 248
                        *  128 --> 249
                        *  126 --> 250
                        *  205 --> 251
                        *  148 --> 252
                        *  234 --> 253
                        */

                    #region Inner Set 248 (121)
                    //formerly inner label set 248
                    case "LAB-IB-HTLG-0069":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cLot.Trim(), dExp.ToString(innerLabelSetDateFormat), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion


                    #region Inner Set 250 (126)
                    //formerly inner label set 250
                    case "LAB-IB-HTLG-0071":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat) };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 251 (205)
                    //formerly inner label set 251
                    case "LAB-IB-HTLG-0072":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dExp.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dExp.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 252 (148)
                    //formerly inner label set 252
                    case "LAB-IB-HTLG-0073":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 253 (234)
                    //formerly inner label set 253
                    case "LAB-IB-HTLG-0074":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dMfg.ToString(innerLabelSetDateFormat)) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString(innerLabelSetDateFormat), false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString(innerLabelSetDateFormat), dExp.ToString(innerLabelSetDateFormat), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    #endregion

                    #endregion

                    /************************************** HSB Floor System Code Start **************************************/
                    #region Inner Set 226 & 227
                    //formerly inner label set 226
                    case "LAB-IB-HLYD-0003":
                    //formerly inner label set 227
                    case "LAB-IB-HLYD-0004":
                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(44) + Chr(52) + Chr(1) + Chr(16) + cLot.Trim() + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(44);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(37) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(37);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(17) + Chr(52) + Chr(1) + Chr(16) + dMfg.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(17);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "" + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + dExp.ToString("yyyy-MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }
                        break;
                    #endregion

                    #region Inner Set 177
                    //formerly inner label set 177
                    case "LAB-IB-HTLG-0035":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim() + " " + cCustSize.Trim()) == true) //
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion


                    #region Inner Set 242
                    //formerly inner label set 242
                    case "LAB-IB-HTLG-0065":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim() + "                      " + dMfg.ToString("yyyy-MM")) == true) //check space condition: 22
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim() + "                    " + dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), "");//check space condition: 20
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //video jet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    #endregion

                    /************************************** HSB Floor System Code End **************************************/

                    #region Inner Set 237 
                    //formerly inner label set 237
                    case "LAB-IB-HTLG-0062":
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(32);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(40) + Chr(54) + Chr(2) + Chr(16) + cCustOrderLot.Trim() + Chr(30) + Chr(16) + Chr(30) + Chr(16) + Chr(2) + Chr(54) + Chr(128) + Chr(40);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(13) + Chr(54) + Chr(2) + Chr(16) + dExp.ToString("yyyy-MM-dd") + Chr(30) + Chr(32) + Chr(30) + Chr(16) + Chr(2) + Chr(54) + Chr(128) + Chr(13);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(83) + Chr(2) + Chr(16) + cLot.Trim() + Chr(16) + Chr(2) + Chr(83) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    #endregion

                    #region Inner Set 149
                    //formerly inner label set 149
                    case "LAB-IB-HTLG-0021":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                            {
                                //Jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dExp.ToString("MMM yyyy"), dMfg.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 258
                    //formerly inner label set 258
                    case "LAB-IB-HTLG-0075":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cPo, false, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), cLot);
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }

                        break;
                    #endregion


                    #region Inner Set 243 - 26/07/2017
                    //formerly inner label set 243
                    case "LAB-IB-HTLG-0066":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("yyyy-MM"), false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 143 - 14/04/2017
                    //formerly inner label set 143
                    case "LAB-IB-HTLG-0018":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cPo.Trim() + "     " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cPo.Trim() + "     " + cLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    #endregion

                    #region Inner Set 241
                    //formerly inner label set 241
                    case "LAB-IB-GPTH-0001":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 238
                    //formerly inner label set 238
                    case "LAB-IB-HTLG-0063":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "MFG REF: " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { "MFG REF: " + cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    #endregion

                    #region Inner Set 235
                    //formerly inner label set 235
                    case "LAB-IB-HTLG-0060":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "", cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    #endregion

                    //formerly inner label set 230
                    case "LAB-IB-KCLG-0002":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot, dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 222
                    case "LAB-IB-HTLG-0055":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString("yyyy-MM")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 217
                    case "LAB-IB-CMTS-0002":
                        //cCustOrderLot = dEtd.ToString("ddMMyyyy") + cProdRefNo;
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("MMM yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot.Trim(), "", dExp.ToString("ddMMyyyy") + "          " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }


                        break;
                    //formerly inner label set 198
                    case "LAB-IB-HTLG-0045":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dEtd.ToString("MMM-yyyy"), false, Convert.ToInt32("53"), dMfg.ToString("MMM-yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("MMM-yyyy"), false, Convert.ToInt32("53"), cLot);
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;

                    //formerly inner label set 228
                    case "LAB-IB-HTLG-0057":
                        dMfg = DateTime.ParseExact(cCustOrderLot.Substring(4, 2) + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                        dExp = dMfg.AddMonths(nExpMonth);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MM/yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot.Trim(), "", dMfg.ToString("MM/yyyy") + "          " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }


                        break;
                    //formerly inner label set 125
                    case "LAB-IB-HTLG-0012":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 224
                    case "LAB-IB-HTLG-0056":
                        cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 5).Replace("/", "");
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    //formerly inner label set 130
                    case "LAB-IB-HTLG-0015":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 133
                    case "LAB-IB-BNZL-0001":
                        //cLot = dMfg.ToString("yyMMdd") + cPline.Trim() + Right(cLot, 6);
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim() + "     " + cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cCustOrderLot + "     " + cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 146
                    case "LAB-IB-HTLG-0019":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }

                        }
                        else
                        {
                            //VideoJet
                            String[] s = { cLot.Trim(), dExp.ToString("MMM yyyy"), dMfg.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 182
                    case "LAB-IB-HTLG-0037":
                        //String[] aYear = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                        //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                        //if (nPos > -1)
                        //{
                        //    string cYear = DateTime.Today.ToString("yyyy").Substring(0, 3) + (nPos + 1).ToString();
                        //    DateTime.TryParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", null, DateTimeStyles.None, out dMfg);
                        //}
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 187
                    case "LAB-IB-HTLG-0039":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 202
                    case "LAB-IB-HTLG-0048":
                        cCustOrderLot = dMfg.ToString("yyMM") + "01" + cPline;
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MM/yyyy") + "          " + cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), " ", dMfg.ToString("MM/yyyy") + "        " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 183
                    case "LAB-IB-HTLG-0038":
                        cGs1 = "01" + cInnerGtn14_Code.Trim() + "10" + cLot.Trim();
                        cReadable = "(01)" + cInnerGtn14_Code.Trim() + "(10)" + cLot.Trim();

                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(192);
                        cInkjetMsg += "" + Chr(33);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(0) + Chr(150);
                        cInkjetMsg += "" + Chr(0) + Chr(30);
                        cInkjetMsg += "" + Chr(0) + Chr(3);
                        cInkjetMsg += "" + Chr(1) + Chr(44);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(24);
                        cInkjetMsg += "" + Chr(14);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(9);
                        cInkjetMsg += "" + Chr(34);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + Chr(31) + Chr(1) + Chr(137) + Chr(134) + cGs1 + Chr(56) + Chr(31) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "   " + cReadable + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                        }
                        break;
                    //formerly inner label set 124
                    case "LAB-IB-HTLG-0011":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("dd MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("dd MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 126
                    case "LAB-IB-HTLG-0013":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 128
                    case "LAB-IB-HTLG-0014":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 170
                    case "LAB-IB-HTLG-0033":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy")) == true)
                            {
                                //Jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 172
                    case "LAB-IB-HTLG-0034":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", true, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), cLot.Trim(), true, Convert.ToInt32("53"), dExp.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        else
                        {
                            // VideoJet
                            String[] s = { dMfg.ToString("MMM yyyy"), cLot.Trim(), dExp.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 178
                    case "LAB-IB-HTLG-0036":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), "", dMfg.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 201
                    case "LAB-IB-HTLG-0047":
                        cCustOrderLot = cPo.Trim() + "-" + cBrand.Trim();
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + "     " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "    " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 108
                    case "LAB-IB-HTLG-0006":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Batch No: " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Exp Date: " + dExp.ToString("dd/MM/yy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { "Batch No: " + cLot.Trim(), "Exp Date: " + dExp.ToString("dd/MM/yy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 121
                    case "LAB-IB-HTLG-0009":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cLot.Trim(), dExp.ToString("MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 148
                    case "LAB-IB-HTLG-0020":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), true, Convert.ToInt32("53"), dMfg.ToString("MMM yyyy")) == true)
                            {
                                //jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "               " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 155
                    case "LAB-IB-HTLG-0024":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cPo.Trim(), false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), false, Convert.ToInt32("53"), dExp.ToString("yyyy-MM"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Cannot print this set using VIDEOJET printer");
                        }
                        break;
                    //formerly inner label set 164
                    case "LAB-IB-HTLG-0031":
                        cCustOrderLot = cPo.Trim() + "-" + cCustRefNo.Trim();
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), dExp.ToString("MMM yyyy") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 168
                    case "LAB-IB-HTLG-0032":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), true, Convert.ToInt32("53"), dExp.ToString("MMM yyyy") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("104")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("MMM yyyy"), dExp.ToString("MMM yyyy") + "     " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 194
                    case "LAB-IB-HTLG-0041":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), " ") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), dMfg.ToString("yyyy-MM"), true, Convert.ToInt32("53"), dExp.ToString("yyyy-MM") + Chr(Convert.ToInt32("30")) + Chr(Convert.ToInt32("128")) + Chr(Convert.ToInt32("30")) + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), dMfg.ToString("yyyy-MM"), dExp.ToString("yyyy-MM") + "    " + Chr(1) + Chr(Convert.ToInt32("53")) + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        //PrintInnerSticker(cSet);

                        break;
                    //formerly inner label set 195
                    case "LAB-IB-HTLG-0042":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), " ", false, Convert.ToInt32("53"), "Batch No: " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Exp Date: " + dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { "Batch No: " + cLot.Trim(), "Exp Date: " + dExp.ToString("MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 196
                    case "LAB-IB-HTLG-0043":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Mfg: " + dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "Exp: " + dExp.ToString("MMM yyyy") + "   " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { cCustOrderLot.Trim(), "Mfg: " + dMfg.ToString("MMM yyyy"), "Exp: " + dExp.ToString("MMM yyyy") + "   " + cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    //formerly inner label set 212
                    case "LAB-IB-HTLG-0053":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot: " + cCustOrderLot.Trim()) == true)
                            {
                                //jet2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Exp: " + dExp.ToString("MMM yyyy") + "   " + cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            //videojet
                            String[] s = { "Lot: " + cCustOrderLot.Trim(), "Exp: " + dExp.ToString("MMM yyyy") + "   " + cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    //formerly inner label set 203
                    case "LAB-IB-HTLG-0049":
                    //formerly inner label set 162
                    case "LAB-IB-HTLG-0030":
                    //formerly inner label set 161
                    case "LAB-IB-HTLG-0029":
                    //formerly inner label set 218
                    case "LAB-IB-KCLG-0001":
                    //formerly inner label set 244
                    case "LAB-IB-KCLG-0003":
                        OuterLabelPrint(internalLotNumber, cset: objFinalPackingDTO.Innersetlayout);
                        break;
                    //formerly inner label set 206
                    case "LAB-IB-ANSL-0001":
                        cCustOrderLot = cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "", cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 205
                    case "LAB-IB-HTLG-0050":

                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "Exp Date: " + dExp.ToString("MMM-yyyy")) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cCustOrderLot.Trim(), "Exp Date: " + dExp.ToString("MMM-yyyy"), cLot.Trim() };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 193
                    case "LAB-IB-IHCP-0001":
                        //cLot = "39"+cLot.Trim();
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), dMfg.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        else
                        {
                            // VideoJet
                            String[] s = { cLot.Trim(), dMfg.ToString("MMM yyyy"), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    //formerly inner label set 190
                    case "LAB-IB-HTLG-0040":
                        cGs1 = "01" + cOuterGtn14_Code.Trim() + "17" + dExp.ToString("yyMM00") + "10" + cLot.Trim();
                        cReadable = "(01)" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMM00") + "(10)" + cLot.Trim();

                        #region message
                        cInkjetMsg = "" + Chr(1);
                        cInkjetMsg += "" + Chr(192);
                        cInkjetMsg += "" + Chr(33);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(0) + Chr(150);
                        cInkjetMsg += "" + Chr(0) + Chr(30);
                        cInkjetMsg += "" + Chr(0) + Chr(3);
                        cInkjetMsg += "" + Chr(1) + Chr(44);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(24);
                        cInkjetMsg += "" + Chr(14);
                        cInkjetMsg += "" + Chr(1);
                        cInkjetMsg += "" + Chr(9);
                        cInkjetMsg += "" + Chr(34);
                        cInkjetMsg += "" + Chr(64);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(0);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(28) + Chr(52) + Chr(1) + Chr(16) + Chr(31) + Chr(1) + Chr(137) + Chr(134) + cGs1 + Chr(56) + Chr(31) + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(28);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(9) + Chr(52) + Chr(1) + Chr(16) + "   " + cReadable + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(9);
                        cInkjetMsg += "" + Chr(10) + Chr(128) + Chr(1) + Chr(52) + Chr(1) + Chr(16) + "   " + cLot.Trim() + "/" + dExp.ToString("yyyy.MM") + Chr(16) + Chr(1) + Chr(52) + Chr(128) + Chr(1);
                        cInkjetMsg += "" + Chr(13);
                        #endregion

                        if (Inkjetprintername == "IMAJE")
                        {
                            hw.ImajeNew(cInkjetMsg, 87);
                            //Jet 1
                            //if (hw.ImajeBarcode(1, true, Convert.ToInt32("100"), cGs1) == true)
                            //{
                            //    //Jet 2
                            //    objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), cReadable, false, Convert.ToInt32("53"), cLot.Trim() + "/" + dExp.ToString("yyyy.MM"));
                            //}
                            //else
                            //{
                            //    objInnerLabel.isPrintSuccess = false;
                            //}
                        }
                        else
                        {
                            // VideoJet
                            objInnerLabel.isPrintSuccess = false;
                            //MessageBox.Show("Unable to print barcode in VideoJet printer!");
                        }

                        break;
                    //formerly inner label set 156
                    case "LAB-IB-HTLG-0025":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", true, Convert.ToInt32("53"), cCustOrderLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim());
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cCustOrderLot.Trim(), cLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 106
                    case "LAB-IB-HTLG-0004":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "Lot No: " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "Exp Date: " + dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "Mfg Date: " + dMfg.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { "Lot No: " + cLot.Trim(), "Exp Date: " + dExp.ToString("MMM yyyy"), "Mfg Date: " + dMfg.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 104            
                    case "LAB-IB-HTLG-0003":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "    Exp Date: " + dExp.ToString("MMM yyyy"), false, Convert.ToInt32("53"), "    Mfg Date: " + dMfg.ToString("MMM yyyy"));
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot.Trim(), "    Exp Date: " + dExp.ToString("MMM yyyy"), "    Mfg Date: " + dMfg.ToString("MMM yyyy") };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;
                    //formerly inner label set 102
                    case "LAB-IB-HTLG-0002":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "    " + cLot.Trim()) == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, true, Convert.ToInt32("52"), "LOT NO: " + cCustOrderLot.Trim(), false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { "    " + cLot.Trim(), "LOT NO: " + cCustOrderLot.Trim(), "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }

                        break;
                    //formerly inner label set 101
                    case "LAB-IB-HTLG-0001":
                        if (Inkjetprintername == "IMAJE")
                        {
                            //Jet 1
                            if (hw.ImajeString(1, true, Convert.ToInt32("52"), cLot.Trim(), false, Convert.ToInt32("53"), "") == true)
                            {
                                //Jet 2
                                objInnerLabel.isPrintSuccess = hw.ImajeString(2, false, Convert.ToInt32("52"), "", false, Convert.ToInt32("53"), "");
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        // VideoJet
                        else
                        {
                            String[] s = { cLot.Trim(), "", "" };
                            hw.LabelString = s;
                            if (hw.VideoJet() == true)
                            {
                                objInnerLabel.isPrintSuccess = true;
                            }
                            else
                            {
                                objInnerLabel.isPrintSuccess = false;
                            }
                        }
                        break;

                    #endregion new label set
                    default:
                        objInnerLabel.isLabelSetDoesnotExists = false;
                        break;
                }
            #endregion
            else
            {
                # region Test Code
                //string filePath = @"\\192.168.9.47\fs\SIT\InnerLabelPrint.txt";
                //using (StreamWriter writer = new StreamWriter(filePath, true))
                //{
                //    writer.WriteLine("dprod: " + dProd.ToString());
                //    writer.WriteLine("dMfg :" + dMfg.ToString());
                //    writer.WriteLine("dExp:" + dExp.ToString());
                //    writer.WriteLine("cGs1 :" + cGs1);
                //    writer.WriteLine("cReadable :" + cReadable);
                //    writer.WriteLine("cProdRefNo :" + cProdRefNo);
                //    writer.WriteLine("cPO :" + cPo);
                //    writer.WriteLine("cCustSize :" + cCustSize);
                //    writer.WriteLine("cCustomerLot :" + cCustOrderLot);
                //    writer.WriteLine("CPline :" + cPline);
                //    writer.WriteLine("nGross :" + nGross.ToString());
                //    writer.WriteLine("nNett" + nNett.ToString());
                //    writer.WriteLine("cCustRefNo : " + cCustRefNo);
                //    writer.WriteLine("cHartaSize :" + cHartaSize);
                //    writer.WriteLine("cOrderNum: " + cOrderNum);
                //    writer.WriteLine("cOuterGtn14_code:" + cOuterGtn14_Code);
                //    writer.WriteLine("cInnerGtn14_Code" + cInnerGtn14_Code);
                //    writer.WriteLine("cDistBy:" + cDistBy);
                //    writer.WriteLine("cDistCountry :" + cDistCountry);
                //    writer.WriteLine("cBrand :" + cBrand);
                //    writer.WriteLine("Clot:" + cLot);
                //    writer.WriteLine(Environment.NewLine);
                //}
                #endregion
            }
            objInnerLabel.isPrintSuccess = true;
            return objInnerLabel;
        }

        /// <summary>
        /// Print OuterCase Label From Scan Bathcard for Outer
        /// </summary>
        /// <param name="internalLotNumber">Internal Lot Number</param>
        /// <returns>returns OuterLabel Data object</returns>     
        public static OuterLabelDTO OuterLabelPrint(string internalLotNumber, string cset = null, Boolean surgiclinnerset = false, int surgicallabelcount = 0, string itemType = null)
        {
                OuterLabelDTO objOuterLabelDTO = new OuterLabelDTO();
                FinalPackingDTO objFinalPackingDTO = new FinalPackingDTO();
                List<PurchaseOrderItemDTO> lstPurchaseOrderItemDTO = new List<PurchaseOrderItemDTO>();

                if (itemType == Convert.ToString(Constants.SIX))
                    objFinalPackingDTO = FinalPackingBLL.GetSecondGradeInternalLotNumberDetails(internalLotNumber);
                else
                    objFinalPackingDTO = FinalPackingBLL.GetInternalLotNumberDetails(internalLotNumber);
                SOLineDTO objSOLineDTO = FinalPackingBLL.GetSOLineData(objFinalPackingDTO.Ponumber, objFinalPackingDTO.ItemNumber, objFinalPackingDTO.Size);
                List<BatchDTO> objBatchDTO = FinalPackingBLL.BatchCardDetailsbyInternalLotNumber(internalLotNumber);
                string labelprintername = WorkStationDataConfiguration.GetInstance().OuterPrinter;
                string stationNumber = WorkStationDataConfiguration.GetInstance().stationNumber;
                //get nooflabel by item number myadamas 18/3
                int nooflabelprint = CommonBLL.GetNoOfLabelPrintByItemNumber(objSOLineDTO.ItemNumber);
                lstPurchaseOrderItemDTO = FinalPackingBLL.GetPurchaseOrderItemCases(internalLotNumber, objFinalPackingDTO.Ponumber);

                string cProdRefNo = string.Empty;
                string cPo = string.Empty;
                string cCustSize = string.Empty;
                string cCustOrderLot = string.Empty;
                string cPline = string.Empty;
                string cCustRefNo = string.Empty;
                string cHartaSize = string.Empty;
                string cOrderNum = string.Empty;
                string cInnerGtn14_Code = string.Empty;
                string cOuterGtn14_Code = string.Empty;
                string cDistBy = string.Empty;
                string cDistCountry = string.Empty;
                string cBrand = string.Empty;
                string cBatchTime = string.Empty;
                string c2ndLocation = string.Empty;
                string cCustSizeFull = string.Empty;
                string cPackSize = string.Empty;
                string cCustIntrnlPrd = string.Empty;
                string cTotalCarton = objSOLineDTO.ItemCases.ToString();
                string cSerial = objFinalPackingDTO.Serialnumber.ToString("#0");
                string cItemNumber = objSOLineDTO.ItemNumber;
                string cHartaRfCode = string.Empty;
                string cPzn = string.Empty;
                string cPackDate = string.Empty;
                string cExpYear = string.Empty;
                int lettercount = 0;
                string cSubBrand2 = string.Empty;
                string[] separators = new string[1];
                string[] words = null;

                int nExpMonth = objSOLineDTO.Expiry;
                DateTime dMfg = Convert.ToDateTime(objFinalPackingDTO.ManufacturingDate);
                DateTime dExp = Convert.ToDateTime(objFinalPackingDTO.ExpiryDate);
                string cGs1 = string.Empty;
                string cReadable = string.Empty;
                string cLot = internalLotNumber.Trim();

                if (!string.IsNullOrEmpty(objFinalPackingDTO.locationId.ToString()))
                {
                    c2ndLocation = objFinalPackingDTO.locationId.ToString("D" + 2);
                }

                if (!string.IsNullOrEmpty(objSOLineDTO.Reference1))
                {
                    cProdRefNo = objSOLineDTO.Reference1.Trim();
                }
                if (!string.IsNullOrEmpty(objSOLineDTO.OrderNumber))
                { cPo = objSOLineDTO.OrderNumber.Trim(); }

                if (!string.IsNullOrEmpty(objSOLineDTO.CustomerSizeDesc))
                { cCustSize = objSOLineDTO.CustomerSizeDesc.Trim(); }

                if (!string.IsNullOrEmpty(objSOLineDTO.CustomerLotNumber))
                { cCustOrderLot = objSOLineDTO.CustomerLotNumber.Trim(); }

                if (objBatchDTO.Count > Constants.ZERO)
                    if (!string.IsNullOrEmpty(objBatchDTO[0].Line))
                    { cPline = objBatchDTO[0].Line.Trim(); }

                decimal nGross = objSOLineDTO.GrossWeight;
                decimal nNett = objSOLineDTO.NettWeight;

                if (!string.IsNullOrEmpty(objSOLineDTO.Reference1))
                { cCustRefNo = objSOLineDTO.Reference1.Trim(); }

                if (!string.IsNullOrEmpty(objSOLineDTO.ItemSize))
                { cHartaSize = objSOLineDTO.ItemSize.Trim(); }

                if (!string.IsNullOrEmpty(objSOLineDTO.InnerProductCode))
                { cInnerGtn14_Code = objSOLineDTO.InnerProductCode.Trim(); }

                if (!string.IsNullOrEmpty(objSOLineDTO.CustomerRefernceNumber))
                { cOrderNum = objSOLineDTO.CustomerRefernceNumber.Trim(); }

                if (!string.IsNullOrEmpty(objSOLineDTO.OuterProductCode))
                { cOuterGtn14_Code = objSOLineDTO.OuterProductCode.Trim(); }

                if (!string.IsNullOrEmpty(objSOLineDTO.Reference1))
                { cDistBy = objSOLineDTO.Reference1.Trim(); }

                if (!string.IsNullOrEmpty(objSOLineDTO.Reference2))
                { cDistCountry = objSOLineDTO.Reference2.Trim(); }

                if (!string.IsNullOrEmpty(objSOLineDTO.ItemName))
                { cBrand = objSOLineDTO.ItemName.Trim(); }

                DateTime dEtd = objSOLineDTO.SHIPPINGDATEREQUESTED;
                int nInnerBox = objSOLineDTO.CaseCapacity;

                // yiksiu SEP 2017 : Label Set Optimization
                string outerLabelSetDateFormat = FinalPackingBLL.GetLabelSetDateFormat(objSOLineDTO.OuterLabelSetDateFormat);
                string innerLabelSetDateFormat = FinalPackingBLL.GetLabelSetDateFormat(objSOLineDTO.InnerLabelSetDateFormat);

                if (objBatchDTO.Count > Constants.ZERO)
                    if (!string.IsNullOrEmpty(objBatchDTO[0].ShortTime))
                    { cBatchTime = objBatchDTO[0].ShortTime; }

                if (surgiclinnerset)
                {
                    int boxespacked = Constants.ZERO;
                    if (surgicallabelcount == Constants.ZERO)
                    {
                        boxespacked = objFinalPackingDTO.Boxespacked;
                    }
                    else
                    {
                        boxespacked = surgicallabelcount;
                    }
                    List<String> newList = new List<string>();
                    newList.Add("f300");
                    newList.Add("L");
                    newList.Add("H07");
                    newList.Add("PC");
                    newList.Add("1e1101099999999C&G" + "                                                            "); // This to avoid print extra digit in GS1-128 barcode.
                    switch (objFinalPackingDTO.Innersetlayout)
                    {
                        #region old label set 25/07/19 LabelSetNamingProject                         
                        case "LAB-IB-CDNL-0001": //this inner set 312 also print on sticker
                        case "312":
                            newList.Add("190000101600025" + PadCenter(cCustOrderLot, 11));
                            newList.Add("190000101000025" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("190000100400025" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("D11");
                            newList.Add("190000200100040" + cLot);
                        break;
                        case "LAB-IB-MCKU-0003"://Print imaje and sticker
                        case "308"://Print imaje and sticker                   
                            newList.Add("190000100630040" + cCustOrderLot);
                            newList.Add("190000100430040" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("190000100230040" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("111100000100150" + cLot);
                            break;
                        case "LAB-IB-MCKU-0002"://Print imaje and sticker
                        case "307"://Print imaje and sticker	
                            newList.Add("190000100600040" + cCustOrderLot);
                            newList.Add("190000100400040" + "MNF: " + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("111100000100040" + cLot);
                            break;
                        case "LAB-IB-MEDL-0006":
                        case "304":
                            newList.Add("191000000500070" + cCustOrderLot);
                            newList.Add("191000000300070" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("101100000200160" + cLot);
                            break;
                        case "LAB-IB-HTLG-0085":
                        case "300":
                            cCustOrderLot = dMfg.ToString("yyyyMM") + Right(cPline, 2) + cDistCountry;
                            newList.Add("1D5202500550040" + cCustOrderLot);
                            newList.Add("111100000400040" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("111100000150040" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("101100000150200" + cLot);
                            break;
                        case "271":

                            newList.Add("1D5202500550040" + cLot);
                            newList.Add("111100000400040" + dMfg.ToString("MMM yyyy"));
                            newList.Add("111100000150040" + dExp.ToString("MMM yyyy"));

                            break;
                        /* Code for Inner Set 263 print on label sticker*/
                        case "263": // 
                            cCustOrderLot = cPo + "-" + cBrand;
                            newList.Add("411100000200030" + cCustOrderLot);
                            newList.Add("411100000200060" + dMfg.ToString("yyyy/MM"));
                            newList.Add("411100000200090" + dExp.ToString("yyyy/MM") + "    " + cLot);
                            break;
                        case "148":
                            newList.Add("111100000850020" + cCustOrderLot);
                            newList.Add("111100000700020" + dMfg.ToString("MMM yyyy"));
                            newList.Add("1D5202500200020" + cLot);
                            break;

                        case "126":
                            newList.Add("1D5202500550040" + cLot);
                            newList.Add("111100000400040" + dMfg.ToString("MMM yyyy"));
                            newList.Add("111100000150040" + dExp.ToString("MMM yyyy"));
                            break;

                        case "194":
                            newList.Add("121100000400080" + cLot);
                            break;

                        case "235":
                            newList.Add("421100000700055" + cCustOrderLot);
                            newList.Add("411100000700075" + cLot);
                            break;

                        case "243":
                            newList.Add("111100000700030" + cCustOrderLot);
                            newList.Add("111100000500030" + dMfg.ToString("yyyy-MM"));
                            newList.Add("111100000300030" + dExp.ToString("yyyy-MM"));
                            newList.Add("111100000100030" + cLot);
                            break;

                        case "218": //KCL
                            newList.Add("211100004400205" + cLot);
                            newList.Add("221100004400177" + dExp.ToString("yyyy-MM"));
                            break;
                        #endregion old label set

                        #region new label set 25/07/19 LabelSetNamingProject
                        //formerly inner label set 271
                        case "LAB-IB-HTLG-0080":

                            newList.Add("1D5202500550040" + cLot);
                            newList.Add("111100000400040" + dMfg.ToString("MMM yyyy"));
                            newList.Add("111100000150040" + dExp.ToString("MMM yyyy"));

                            break;
                        /* Code for Inner Set 263 print on label sticker*/
                        //formerly inner label set 263
                        case "LAB-IB-HTLG-0079": // 
                            cCustOrderLot = cPo + "-" + cBrand;
                            newList.Add("411100000200030" + cCustOrderLot);
                            newList.Add("411100000200060" + dMfg.ToString("yyyy/MM"));
                            newList.Add("411100000200090" + dExp.ToString("yyyy/MM") + "    " + cLot);
                            break;
                        //formerly inner label set 148
                        case "LAB-IB-HTLG-0020":
                            newList.Add("111100000850020" + cCustOrderLot);
                            newList.Add("111100000700020" + dMfg.ToString("MMM yyyy"));
                            newList.Add("1D5202500200020" + cLot);
                            break;
                        //formerly inner label set 126
                        case "LAB-IB-HTLG-0013":
                            newList.Add("1D5202500550040" + cLot);
                            newList.Add("111100000400040" + dMfg.ToString("MMM yyyy"));
                            newList.Add("111100000150040" + dExp.ToString("MMM yyyy"));
                            break;
                        //formerly inner label set 194
                        case "LAB-IB-HTLG-0041":
                            newList.Add("121100000400080" + cLot);
                            break;
                        //formerly inner label set 235
                        case "LAB-IB-HTLG-0060":
                            newList.Add("421100000700055" + cCustOrderLot);
                            newList.Add("411100000700075" + cLot);
                            break;
                        //formerly inner label set 243
                        case "LAB-IB-HTLG-0066":
                            newList.Add("111100000700030" + cCustOrderLot);
                            newList.Add("111100000500030" + dMfg.ToString("yyyy-MM"));
                            newList.Add("111100000300030" + dExp.ToString("yyyy-MM"));
                            newList.Add("111100000100030" + cLot);
                            break;
                        //formerly inner label set 218
                        case "LAB-IB-KCLG-0001": //KCL
                            newList.Add("211100004400205" + cLot);
                            newList.Add("221100004400177" + dExp.ToString("yyyy-MM"));
                            break;
                            #endregion new label set
                    }
                    newList.Add("X");
                    newList.Add(Chr(2) + "E" + boxespacked.ToString("D" + 4));
                    newList.Add(Chr(2) + "G");
                    if (WorkStationDataConfiguration.GetInstance().LHardwareIntegration == true)
                        objOuterLabelDTO.isPrintSuccess = LabelPrinterX2000COM(newList.ToArray());
                    else
                    {
                        # region Test Code
                        //string filePath = @"\\192.168.9.47\fs\SIT\FinalPackingSurgicalInner.txt";
                        //using (StreamWriter writer = new StreamWriter(filePath, true))
                        //{
                        //    writer.WriteLine("cCustOrderLot:" + cCustOrderLot);
                        //    writer.WriteLine(Environment.NewLine);
                        //    writer.WriteLine("mfgDate: " + dMfg.ToString("MMM yyyy"));
                        //    writer.WriteLine(Environment.NewLine);
                        //    writer.WriteLine("cLot: " + cLot);
                        //    writer.WriteLine(Environment.NewLine);
                        //    writer.WriteLine("boxespacked: " + boxespacked);
                        //    writer.WriteLine(Environment.NewLine);
                        //}
                        # endregion
                    }
                }
                //For Print inner set at label printer
                else if (!string.IsNullOrEmpty(cset))
                {
                    int boxespacked = objFinalPackingDTO.Boxespacked;
                    List<String> newList = new List<string>();

                    newList.Add("f300");
                    newList.Add("L");
                    newList.Add("H07");
                    newList.Add("PC");
                    newList.Add("1e1101099999999C&G" + "                                                            "); // This to avoid print extra digit in GS1-128 barcode.
                    switch (cset)
                    {
                        #region old label set 25/07/19 LabelSetNamingProject
                        case "LAB-IB-HTLG-0090": //Print on sticker 
                        case "355":
                            newList.Add("D11");
                            newList.Add("130000000200015" + cLot);
                            break;
                        case "LAB-IB-HLYD-0017"://Halyard (X Batch) Print on sticker 
                        case "345": //Halyard (X Batch) Print on sticker 

                            cGs1 = "01" + cInnerGtn14_Code + "10" + cLot.Trim() + "&G17" + dExp.ToString("yyMMdd");
                            cReadable = "(01)" + cInnerGtn14_Code + "(10)" + cLot.Trim() + "(17)" + dExp.ToString("yyMMdd");

                            newList.Add("4e1103000130058" + "C&G" + cGs1);
                            newList.Add("1Y1100000150067LOT");
                            newList.Add("1Y1100001850063MFG");
                            newList.Add("1Y1100003050063EXP");
                            newList.Add("D00");
                            newList.Add("490000300530087" + cLot.Trim());
                            newList.Add("490000302230087" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("490000303350087" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("490000300450025" + cReadable);
                            break;
                        case "LAB-IB-IHCP-0004": //Print on sticker 
                        case "348":
                            newList.Add("211100004500148" + cCustOrderLot);
                            newList.Add("211100004500100" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("211100004500053" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("201100004500022" + "BN: " + cLot);
                            break;
                        case "LAB-IB-HART-0002": //Print on sticker 
                        case "347": // 
                            newList.Add("101100000800012" + "Rs." + cCustOrderLot + " Inclusive of all taxes Per box " + cDistCountry);
                            newList.Add("101100000600012" + cPo + "-" + cBrand);
                            newList.Add("101100000400012" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("101100000200012" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("101100000200112" + cLot);
                            break;
                        case "LAB-IB-MEDL-0021":
                        case "342":
                            cGs1 = "01" + cInnerGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(dMfg.ToString("yyMM"), 3) + cCustOrderLot;
                            cReadable = "(01)" + cInnerGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(dMfg.ToString("yyMM"), 3) + cCustOrderLot;

                            newList.Add("D11");
                            newList.Add("490000001080130" + cReadable);
                            newList.Add("490000202440032" + Right(dMfg.ToString("yyMM"), 3) + cCustOrderLot);
                            newList.Add("490000202380052" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202380072" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000203100052" + cLot);
                            newList.Add("D22");
                            newList.Add("4e1104000600120" + "C&G" + cGs1);
                            break;
                        case "LAB-IB-MEDL-0020": // Print on Label Printer (Sticker) HTL for HSB & HTK for HNGC
                        case "340":
                            cGs1 = "01" + cInnerGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + "HTL" + dMfg.ToString("yyMM") + cCustOrderLot;
                            cReadable = "(01)" + cInnerGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + "HTL" + dMfg.ToString("yyMM") + cCustOrderLot;

                            newList.Add("D11");
                            newList.Add("490000001080130" + cReadable);
                            newList.Add("490000202440032" + "HTL" + dMfg.ToString("yyMM") + cCustOrderLot);
                            newList.Add("490000202380052" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202380072" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000203100052" + cLot);
                            newList.Add("D22");
                            newList.Add("4e1104000130120" + "C&G" + cGs1);
                            break;
                        case "LAB-IB-MCKU-0006"://Print on sticker only
                        case "337"://Print on sticker only
                            newList.Add("291000002440030" + cCustOrderLot);
                            newList.Add("291000001070030" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("291000002440009" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("291000001300009" + cLot);
                            break;
                        case "LAB-IB-MEDL-0019": // Print on Label Printer (Sticker) HTL for HSB & HTK for HNGC
                        case "336":
                            cGs1 = "01" + cInnerGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + "HTL" + dMfg.ToString("yyMM") + cCustOrderLot;
                            cReadable = "(01)" + cInnerGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + "HTL" + dMfg.ToString("yyMM") + cCustOrderLot;

                            newList.Add("D11");
                            newList.Add("490000001080072" + cReadable);
                            newList.Add("490000201900092" + "HTL" + dMfg.ToString("yyMM") + cCustOrderLot);
                            newList.Add("490000201900110" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000201900130" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000103100135" + cLot);
                            newList.Add("D22");
                            newList.Add("4e1104000350060" + "C&G" + cGs1);
                            break;
                        case "LAB-IB-MEDL-0017": // Print on Label Printer (Sticker)
                        case "328":
                            cGs1 = "01" + cInnerGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cInnerGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("D11");
                            newList.Add("490000001080072" + cReadable);
                            newList.Add("490000201900092" + cCustOrderLot);
                            newList.Add("490000201900110" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000201900130" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000103100135" + cLot);
                            newList.Add("D22");
                            newList.Add("4e1104000350060" + "C&G" + cGs1);
                            break;
                        case "LAB-IB-MEDL-0016": // Print on Label Printer (Sticker)
                        case "323":
                            newList.Add("D11");
                            newList.Add("490000301800037" + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MM") + cCustOrderLot);
                            newList.Add("490000301800062" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("490000301800083" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("490000202200137" + cLot);
                            break;
                        case "LAB-IB-MEDL-0010"://Print on sticker
                        case "317"://Print on sticker
                            cCustRefNo = "HTL" + dMfg.ToString("yyMM") + cCustOrderLot + "J";

                            cGs1 = "01" + cInnerGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                            cReadable = "(01)" + cInnerGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                            newList.Add("D11");
                            newList.Add("490000001080072" + cReadable);
                            newList.Add("490000201900092" + cCustRefNo);
                            newList.Add("490000201900110" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000201900130" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000103100135" + cLot);
                            newList.Add("D22");
                            newList.Add("4e1104000350060" + "C&G" + cGs1);
                            break;
                        case "LAB-IB-MEDL-0008"://Print on sticker
                        case "314"://Print on sticker
                            newList.Add("D11");
                            newList.Add("490000301800037" + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MM") + cCustOrderLot);
                            newList.Add("490000301800062" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("490000301800083" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("490000202200137" + cLot);
                            break;
                        case "LAB-IB-MEDL-0007"://Print on sticker only
                        case "306"://Print on sticker only
                            newList.Add("D11");
                            newList.Add("490000301800047" + cCustOrderLot);
                            newList.Add("490000301800068" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("490000301800089" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("490000202600152" + cLot);
                            break;
                        case "LAB-IB-IHCP-0003":
                        case "305":
                            newList.Add("4e3105500150070" + "C&G" + "01" + cInnerGtn14_Code);
                            newList.Add("400005000230080" + "(01)" + cInnerGtn14_Code);
                            newList.Add("442200001900145" + cHartaSize);
                            newList.Add("1X1100001840155" + "L005090");
                            newList.Add("1Y1100000150095" + "LOT");
                            newList.Add("491100000530116" + cCustOrderLot);
                            newList.Add("1Y1100000150121" + "MFG");
                            newList.Add("491100000530148" + dMfg.ToString(innerLabelSetDateFormat));
                            newList.Add("1Y1100000180157" + "EXP");
                            newList.Add("491100000530180" + dExp.ToString(innerLabelSetDateFormat));
                            newList.Add("491100001930030" + "Reorder");
                            newList.Add("491100401650070" + cCustRefNo);
                            newList.Add("400005001900180" + "BN: " + cLot);
                            break;
                        case "LAB-IB-IHCP-0002":
                        case "299":
                            newList.Add("4e3105500150070" + "C&G" + "01" + cInnerGtn14_Code);
                            newList.Add("400005000230080" + "(10)" + cInnerGtn14_Code);
                            newList.Add("442200001900155" + cHartaSize);
                            newList.Add("1X1100001840165" + "L005090");
                            newList.Add("1Y1100000150095" + "LOT");
                            newList.Add("491100000530116" + cLot);
                            newList.Add("1Y1100000150121" + "MFG");
                            newList.Add("491100000530148" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000180157" + "EXP");
                            newList.Add("491100000530180" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("491100001930040" + "Reorder");
                            newList.Add("491100401650080" + cCustRefNo);
                            break;

                        case "194":
                            newList.Add("121100000400080" + cLot);
                            break;
                        case "162":
                            newList.Add("111100000700040" + "Size :" + cCustSize);
                            newList.Add("111100000400040" + "Lot :" + cLot);
                            newList.Add("111100000100150" + "Model: " + cBrand);
                            break;
                        case "161":
                            newList.Add("111100000700040Size :" + cCustSize);
                            newList.Add("111100000400040Lot :" + cLot);
                            break;
                        case "203":
                            cCustOrderLot = cPo + "-" + cBrand;
                            newList.Add("311100003310310" + cCustOrderLot);
                            newList.Add("311100003570310" + dMfg.ToString("yyyy-MM"));
                            newList.Add("311100003840310" + dExp.ToString("yyyy-MM") + "    " + cLot);
                            break;
                        case "209":
                            cCustOrderLot = cPo + "-" + cBrand;
                            newList.Add("311100002780310" + cCustOrderLot);
                            newList.Add("311100003030310" + dMfg.ToString("yyyy-MM"));
                            newList.Add("311100003280310" + dExp.ToString("yyyy-MM") + "    " + cLot);
                            break;
                        case "218": // HSB Floor Upgrade code : Design for KCL
                            newList.Add("211100004400205" + cLot);
                            newList.Add("221100004400177" + dExp.ToString("yyyy-MM"));
                            break;
                        case "117": // HSB Floor Upgrade code - Print using label printer - offline
                            newList.Add("111100000850040" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1D5202500300040" + cLot);
                            newList.Add("111100000150040" + dMfg.AddMonths(nExpMonth).ToString("MMM-yyyy"));
                            break;
                        case "153": // HSB Floor Upgrade code - Print using label printer - offline
                            newList.Add("2d4104002300035" + cLot);
                            newList.Add("210105002180020" + cLot);
                            break;
                        case "107": // HSB Floor Upgrade code - Print using label printer - offline
                            newList.Add("1e1105000400050" + "C&G" + "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4));
                            newList.Add("101100000300050" + "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4));
                            newList.Add("101100000150050" + "Batch No:  " + Right(cLot, 4));
                            newList.Add("101100000050050" + "Exp. Date: " + dExp.ToString("yyMMdd"));
                            break;

                        case "244": //KCL
                            newList.Add("221100005300170" + dExp.ToString("yyyy-MM"));
                            break;
                        #endregion old label set

                        #region new label set 25/07/19 LabelSetNamingProject
                        //formerly inner label set 203
                        case "LAB-IB-HTLG-0049":
                            cCustOrderLot = cPo + "-" + cBrand;
                            newList.Add("311100003310310" + cCustOrderLot);
                            newList.Add("311100003570310" + dMfg.ToString("yyyy-MM"));
                            newList.Add("311100003840310" + dExp.ToString("yyyy-MM") + "    " + cLot);
                            break;
                        //formerly inner label set 194
                        case "LAB-IB-HTLG-0041":
                            newList.Add("121100000400080" + cLot);
                            break;
                        //formerly inner label set 162
                        case "LAB-IB-HTLG-0030":
                            newList.Add("111100000700040" + "Size :" + cCustSize);
                            newList.Add("111100000400040" + "Lot :" + cLot);
                            newList.Add("111100000100150" + "Model: " + cBrand);
                            break;
                        //formerly inner label set 161
                        case "LAB-IB-HTLG-0029":
                            newList.Add("111100000700040Size :" + cCustSize);
                            newList.Add("111100000400040Lot :" + cLot);
                            break;
                        //formerly inner label set 218
                        case "LAB-IB-KCLG-0001": // HSB Floor Upgrade code : Design for KCL
                            newList.Add("211100004400205" + cLot);
                            newList.Add("221100004400177" + dExp.ToString("yyyy-MM"));
                            break;
                        //formerly inner label set 244
                        case "LAB-IB-KCLG-0003": //KCL
                            newList.Add("221100005300170" + dExp.ToString("yyyy-MM"));
                            break;
                            #endregion new label set
                    }
                    newList.Add("X");
                    newList.Add(Chr(2) + "E" + boxespacked.ToString("D" + 4));
                    newList.Add(Chr(2) + "G");
                    if (WorkStationDataConfiguration.GetInstance().LHardwareIntegration == true)
                        objOuterLabelDTO.isPrintSuccess = LabelPrinterX2000COM(newList.ToArray());
                    else
                    {
                        # region Test Code
                        //string filePath = @"\\192.168.9.47\fs\SIT\FinalPackingOuterLabelforInner.txt";
                        //using (StreamWriter writer = new StreamWriter(filePath, true))
                        //{
                        //    writer.WriteLine("cLot:" + cLot);
                        //    writer.WriteLine(Environment.NewLine);
                        //    writer.WriteLine("cCustSize:" + cCustSize);
                        //    writer.WriteLine(Environment.NewLine);
                        //    writer.WriteLine("brand:" + cBrand);
                        //    writer.WriteLine(Environment.NewLine);
                        //    writer.WriteLine("cLot:" + cLot);
                        //    writer.WriteLine(Environment.NewLine);
                        //    writer.WriteLine("dMfg:" + dMfg.ToString("yyyy-MM"));
                        //    writer.WriteLine(Environment.NewLine);
                        //    writer.WriteLine("dExp:" + dExp.ToString("yyyy-MM"));
                        //    writer.WriteLine(Environment.NewLine);
                        //}
                        # endregion
                    }
                }
                else
                {
                    StringBuilder caseList = new StringBuilder();

                    //  foreach (PurchaseOrderItemDTO objPurchaseOrderItemDTO in lstPurchaseOrderItemDTO)
                    for (int i = 0; i < lstPurchaseOrderItemDTO.Count; i++)
                    {
                        PurchaseOrderItemDTO objPurchaseOrderItemDTO = lstPurchaseOrderItemDTO.ToArray()[i];
                        List<String> newList = new List<string>();
                        newList.Add("f300");
                        newList.Add("L");
                        newList.Add("H07");
                        newList.Add("PC");
                        newList.Add("1e1101099999999C&G" + "                                                            "); // This to avoid print extra digit in GS1-128 barcode.
                        string cCtn = objPurchaseOrderItemDTO.CaseNumber.ToString("D" + 5);
                        if (objPurchaseOrderItemDTO.isPreshipment)
                        {
                            PreshipmentSticker(cPo, objFinalPackingDTO.PreshipmentPLTId, cCtn);
                        }

                        if (i > 0 && !lstPurchaseOrderItemDTO.ToArray()[i - 1].isPreshipment)
                        {
                            caseList.Append(lstPurchaseOrderItemDTO.ToArray()[i - 1].CaseNumber + ",");
                            if (!objPurchaseOrderItemDTO.isPreshipment &&
                                 string.Compare(objPurchaseOrderItemDTO.PalletId, lstPurchaseOrderItemDTO.ToArray()[i - 1].PalletId) != 0)
                            {
                                GlobalMessageBox.Show(string.Format(Messages.CASE_LIST_FOR_PALLET, caseList.ToString().Trim(','),
                                    lstPurchaseOrderItemDTO.ToArray()[i - 1].PalletId), Constants.AlertType.Information, Messages.INFORMATION, GlobalMessageBoxButtons.OK);
                                caseList.Clear();
                            }
                        }

                        #region Outer Set

                        switch (objFinalPackingDTO.Outersetlayout)
                        {
                            #region testing outer Label set                            
                            #region Outer Label 292, LAB-OC-HTLG-0151
                            case "LAB-OC-HTLG-0151":
                            case "292":
                                newList.Add("411100000150043Ctn. No.: " + cCtn);
                                newList.Add("411100000150058Gross Weight: " + nGross.ToString("0.0 Kg"));
                                newList.Add("411100000150075Net Weight: " + nNett.ToString("0.0 Kg"));
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150080MFG");
                                newList.Add("421100000850108" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150116EXP");
                                newList.Add("421100000850141" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150156LOT");
                                newList.Add("4d3103000850178" + cLot);
                                newList.Add("410005000850193" + cLot);
                                break;
                        #endregion
                        #endregion


                            #region Old Outer Label
                            #region Outer Label 300, LAB-OC-IHCP-0005
                            case "300":
                            case "LAB-OC-IHCP-0005":
                                newList.Add("491000000400035Ctn.No.");
                                newList.Add("491000001300035" + cCtn);
                                newList.Add("491000000400055Mfg. Date.");
                                newList.Add("491100001300055" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491000000400075Lot No.");
                                newList.Add("4d3102501300080" + cLot);
                                newList.Add("400002501300090" + cLot);
                                newList.Add("401100000400095" + cPo);
                                break;
                            #endregion
                            #region Outer Label LAB-OC-DESK-0002, Former 231
                            case "LAB-OC-DESK-0002":

                                String[] cMonthN1 = { "JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ" };
                                dExp = dMfg.AddMonths(nExpMonth);

                                cGs1 = "01" + cOuterGtn14_Code + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cCustOrderLot;

                                newList.Add("422200000150057" + PadCenter(cCustSize, 11));
                                newList.Add("490000000150090" + "Caixa No /");
                                newList.Add("491100000150110" + "Carton No :");
                                newList.Add("491100002000110" + cCtn);
                                newList.Add("491100000150140" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                                newList.Add("491100000150160" + "Manufacturing Date:");
                                newList.Add("491100000800180" + cMonthN1[Convert.ToInt32(dMfg.ToString("MM")) - 1] + "/" + dMfg.ToString("yyyy"));
                                newList.Add("491100000150210" + "Validade/Expiry Date:");
                                newList.Add("491100000800230" + cMonthN1[Convert.ToInt32(dExp.ToString("MM")) - 1] + "/" + dExp.ToString("yyyy"));
                                newList.Add("491100000150260" + "Lote:");
                                newList.Add("491100000800260" + cCustOrderLot);
                                newList.Add("401100000150275" + cPo + "  " + cLot);
                                newList.Add("4e2105000150340" + "C&G" + cGs1);
                                newList.Add("400000000150350" + cReadable.ToString());

                                break;
                            #endregion
                            #region Outer Label 299, LAB-OC-IHCP-0004
                            case "299":
                            case "LAB-OC-IHCP-0004":
                                newList.Add("491000000400050Ctn.No.");
                                newList.Add("491000001300050" + cCtn);
                                newList.Add("491000000400080Mfg. Date.");
                                newList.Add("491100001300080" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491000000400110Exp. Date.");
                                newList.Add("491100001300110" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("491000000400145Lot No.");
                                newList.Add("4d3103501300155" + cLot);
                                newList.Add("400002501300170" + cLot);
                                newList.Add("401100000400190" + cPo);
                                break;
                            #endregion
                            #region Outer Label 298, LAB-OC-HTLG-0157
                            case "298":
                            case "LAB-OC-HTLG-0157":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + cCustOrderLot.Substring(0, 6) + "(10)" + Right(cCustOrderLot, 10);

                                newList.Add("410005000600030" + cPo);
                                newList.Add("411200000600055Ctn. No.");
                                newList.Add("421100001600055" + cCtn);
                                newList.Add("422300002900080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000650060MFG");
                                newList.Add("421100001600085" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000650100EXP");
                                newList.Add("421100001600120" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000650140LOT");
                                newList.Add("421105001600158" + Right(cCustOrderLot, 10));
                                newList.Add("410005000650180" + "GS1 code:");
                                newList.Add("4e1106000650240C&G" + cGs1);
                                newList.Add("400000000650250" + cReadable);
                                break;
                            #endregion
                            #region Outer Label  LAB-OC-HTLG-0035, Former 50
                            case "LAB-OC-HTLG-0035":
                                newList.Add("191100000800015" + PadCenter(cPo, 15));
                                newList.Add("191000000500020" + "Lot No.");
                                newList.Add("1E3102500100020" + "C&G" + Right(cCustOrderLot, 12));
                                newList.Add("191000000600135" + "Ctn.No.");
                                newList.Add("191000000600229" + cCtn);
                                newList.Add("191000000400135" + "Mfg. Date.  " + dMfg.ToString("MMM-yyyy"));
                                newList.Add("191000000200135" + "Exp. Date.  " + dExp.ToString("MMM-yyyy"));
                                break;
                            #endregion
                            #region Outer Label 295, LAB-OC-HTLG-0155
                            case "295":
                            case "LAB-OC-HTLG-0155":
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100001000051" + cLot);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100001000095" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("421100001000141" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100001000179" + cCtn);
                                break;
                            #endregion
                            #region Outer Label 296, LAB-OC-HTLG-0156
                            case "LAB-OC-HTLG-0156":
                            case "296":
                                cGs1 = "01" + cOuterGtn14_Code;
                                cReadable = "(01)" + cOuterGtn14_Code;
                                newList.Add("411100000150030" + "Batch No. ");
                                newList.Add("411100000950030" + cLot);
                                newList.Add("4e1107000800130" + "C&G" + cGs1);
                                newList.Add("411100000700150" + cReadable);
                                newList.Add("411100002500190" + cCtn);
                                break;
                            #endregion
                            #region Outer Label 297, LAB-OC-HTLG-0154
                            case "297":
                            case "LAB-OC-HTLG-0154":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "30" + cCustRefNo + "&G" + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(30)" + cCustRefNo + "(10)" + cCustOrderLot;

                                newList.Add("410005000200035" + cPo);
                                newList.Add("410005003000035" + "CTN: " + cCtn);
                                newList.Add("423400002300140" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000250050" + "MFG");
                                newList.Add("421100000700075" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000250095" + "EXP");
                                newList.Add("421100000700120" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000250145" + "LOT");
                                newList.Add("421105000700165" + cCustOrderLot);
                                newList.Add("400000000600280" + cReadable);
                                newList.Add("4e1108000600270" + "C&G" + cGs1);

                                break;
                            #endregion
                            #region Outer Label 294, LAB-OC-HTLG-0153
                            case "294":
                            case "LAB-OC-HTLG-0153":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200055" + "Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060" + "EXP");
                                newList.Add("421100001000085" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150100" + "LOT");
                                newList.Add("421105001000115" + cCustOrderLot);
                                newList.Add("410005000150140" + "GS1 code:");
                                newList.Add("4e1103000150180" + "C&G" + cGs1);
                                newList.Add("400000000150190" + cReadable);

                                objOuterLabelDTO.barcodeToValidate = dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                objOuterLabelDTO.countToValidate = cGs1.Length;
                                break;
                            #endregion
                            #region Outer label 293, LAB-OC-HTLG-0152
                            case "LAB-OC-HTLG-0152":
                            case "293":

                                newList.Add("400000000150115" + "Size: " + cCustSize + "   " + cLot);
                                newList.Add("4e3102500150165" + cCustOrderLot);
                                newList.Add("400000000150175" + cCustOrderLot);

                                newList.Add("D11");
                                newList.Add("430000000150035" + cPo);
                                newList.Add("430000000150055" + "Ctn.: " + cCtn);
                                newList.Add("430000000150075" + "Mfg.: " + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("430000000150095" + "Exp.: " + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("430000000150135" + "Lot No.");

                                break;
                            #endregion
                            #region Outer Label 291, LAB-OC-HLYD-0012
                            case "LAB-OC-HLYD-0012":
                                case "291":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9);
                                cReadable = "(01)" + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                              + " " + cOuterGtn14_Code.Substring(13, 1) + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cLot.Substring(0, 9);

                                newList.Add("211100003800076" + cLot.Substring(0, 9));  //Check substr;
                                newList.Add("211100002300076" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("211100001160076" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100003700063" + cReadable);   //Readable barcode - check paramater
                                newList.Add("2e1105003790011" + "C&G" + cGs1);     //GS1 barcode - check paramater
                                newList.Add("201100000400010" + cCtn);     //GS1 barcode - check paramater
                                break;
                            #endregion
                            #region Outer Label 290, LAB-OC-HLYD-0011
                            case "LAB-OC-HLYD-0011":
                            case "290":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9);
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + " " + "(17)" + dExp.ToString("yyMMdd") + " " + "(10)" + cLot.Substring(0, 9);

                                newList.Add("211100003790076" + cLot.Substring(0, 9));  //Check substr;
                                newList.Add("211100002290076" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("211100001120076" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100003790063" + cReadable);   //Readable barcode - check paramater
                                newList.Add("2e1105003790011" + "C&G" + cGs1);     //GS1 barcode - check paramater
                                newList.Add("201100000400010" + cCtn);     //GS1 barcode - check paramater
                                break;
                            #endregion
                            #region Outer Label 289, LAB-OC-HLYD-0010
                            case "LAB-OC-HLYD-0010"://Halyard
                            case "289"://Halyard

                                cGs1 = "~1" + "01" + cOuterGtn14_Code + "20" + cDistCountry + "11" + dMfg.ToString("yyMMdd") + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9) + "~1" + "30" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10);


                                newList.Add("D11");
                                newList.Add("290000101420074" + "(01)" + cOuterGtn14_Code + "(20)" + cDistCountry);
                                newList.Add("290000101420060" + "(11)" + dMfg.ToString("yyMMdd") + "(17)" + dExp.ToString("yyMMdd"));
                                newList.Add("290000101420046" + "(10)" + cLot.Substring(0, 9) + "(30)" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10));
                                newList.Add("D22");
                                newList.Add("2W1c44000019800402000000000" + cGs1);
                                newList.Add("211100003490082" + cLot.Substring(0, 9));
                                newList.Add("211100003490060" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("211100003490038" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("211100000680024" + cCtn);
                                break;
                            #endregion
                            #region Outer Label 288, LAB-OC-VRDT-0001
                            case "LAB-OC-VRDT-0001":
                            case "288":

                                cCustOrderLot = dMfg.ToString("yyMMdd") + Right(cOrderNum, 6).Substring(0, 3);

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot;

                                newList.Add("410005000200030" + cLot);
                                newList.Add("411200000200055" + "Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060" + "EXP");
                                newList.Add("421100001000085" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150100" + "LOT");
                                newList.Add("421105001000115" + cCustOrderLot);
                                newList.Add("410005000150140" + "GS1 code:");
                                newList.Add("4e1103000150180" + "C&G" + cGs1);
                                newList.Add("400000000150190" + cReadable);

                                objOuterLabelDTO.barcodeToValidate = dExp.ToString("yyMMdd") + "00" + "10" + cCustOrderLot;
                                objOuterLabelDTO.countToValidate = cGs1.Length;

                                break;
                            #endregion
                            #region Outer label 286, LAB-OC-HTLG-0150
                            case "LAB-OC-HTLG-0150":
                            case "286":

                                newList.Add("191000000700015" + "Mfg.: " + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("191000000500015" + "Exp.: " + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("191000000300015" + "Ctn.: " + cCtn);
                                newList.Add("1e3104000400142" + "B" + cCustOrderLot);
                                newList.Add("101100000300162" + "LOT# " + cCustOrderLot);
                                newList.Add("101100000130015" + "Size: " + cCustSize + "   " + cLot);

                                break;
                            #endregion
                            #region Outer Label 283, LAB-OC-HTLG-0149
                            case "LAB-OC-HTLG-0149":
                            case "283":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 12);
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 12);

                                newList.Add("201100010350185" + "DO NOT COVER THIS LABEL");
                                newList.Add("2e1107010350105C&G" + cGs1);
                                newList.Add("201100010350090" + cReadable);
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400007000125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100007000125" + PadCenter(cCustSize, 5));

                                newList.Add("201100007500107" + "LOT NO.");
                                newList.Add("2e1101807050107" + cLot);
                                newList.Add("201100007050097" + cLot);
                                newList.Add("201100007500083" + "Reorder No.");
                                newList.Add("201100006800083" + cProdRefNo);
                                newList.Add("2X1110005350078L001500");
                                newList.Add("201100010350068Gross Wt");
                                newList.Add("221100009850052" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100009050068Mfg Date");
                                newList.Add("221100008350052" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("201100007200068PO No");
                                newList.Add("291100006700052" + cPo);
                                newList.Add("2X1110005350048L001500");
                                newList.Add("201100010350038Nett Wt");
                                newList.Add("221100009850022" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100009050038Exp Date");
                                newList.Add("221100008350022" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100007200038Ctn No");
                                newList.Add("221100006700022" + cCtn);
                                newList.Add("2X1110005250010L200001");
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400004500125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100004500125" + PadCenter(cCustSize, 5));

                                newList.Add("201100005100107" + "LOT NO.");
                                newList.Add("2e1101804650107" + cLot);
                                newList.Add("201100004650097" + cLot);
                                newList.Add("201100005100083" + "Reorder No.");
                                newList.Add("201100004400083" + cProdRefNo);
                                newList.Add("201100002750185" + "DO NOT COVER THIS LABEL");
                                newList.Add("2e1107002750105C&G" + cGs1);
                                newList.Add("201100002750090" + cReadable);
                                newList.Add("2X1110000100078L001500");
                                newList.Add("201100005100068Gross Wt");
                                newList.Add("221100004600052" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100003800068Mfg Date");
                                newList.Add("221100003100052" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("201100001950068PO No");
                                newList.Add("291100001450052" + cPo);
                                newList.Add("2X1110000100048L001500");
                                newList.Add("201100005100038Nett Wt");
                                newList.Add("221100004600022" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100003800038Exp Date");
                                newList.Add("221100003100022" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100001950038Ctn No");
                                newList.Add("221100001450022" + cCtn);

                                break;
                            #endregion
                            #region Outer Label 287, LAB-OC-MEDL-0024
                            case "LAB-OC-MEDL-0024":
                            case "287":

                                cCustRefNo = "HTL" + dMfg.ToString("yyMM") + cCustOrderLot;
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                                newList.Add("D11");
                                newList.Add("490000202700108" + cCustRefNo);
                                newList.Add("490000202700126" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202700145" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202700160" + cPo);
                                newList.Add("490000202700172" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000202700184" + cCtn);
                                newList.Add("490000102700200" + cLot);
                                newList.Add("490000206700108" + cCustRefNo);
                                newList.Add("490000206700126" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206700145" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206700160" + cPo);
                                newList.Add("490000206700172" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000206700184" + cCtn);
                                newList.Add("490000106700200" + cLot);
                                newList.Add("D22");
                                newList.Add("4e1106000300340" + "C&G" + cGs1);
                                newList.Add("400000000570350" + cReadable);
                                newList.Add("4e1106004300340" + "C&G" + cGs1);
                                newList.Add("400000004570350" + cReadable);

                                break;
                        #endregion
                            #region Outer Label 285, LAB-OC-MEDL-0023
                            case "LAB-OC-MEDL-0023":
                            case "285":

                                cCustRefNo = Right(dMfg.ToString("yyMM"), 3) + cCustOrderLot;
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                                newList.Add("D11");
                                newList.Add("490000202100147" + cCustRefNo);
                                newList.Add("490000202100170" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202100192" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202100208" + cPo);
                                newList.Add("490000202100220" + nNett.ToString("0.0 Kg"));
                                newList.Add("490000202100231" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000202100244" + cCtn);
                                newList.Add("490000102100260" + cLot);
                                newList.Add("490000206100147" + cCustRefNo);
                                newList.Add("490000206100170" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206100192" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206100208" + cPo);
                                newList.Add("490000206100220" + nNett.ToString("0.0 Kg"));
                                newList.Add("490000206100231" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000206100244" + cCtn);
                                newList.Add("490000106100260" + cLot);
                                newList.Add("D22");
                                newList.Add("4e1106000600340" + "C&G" + cGs1);
                                newList.Add("400000000740350" + cReadable);
                                newList.Add("4e1106004400340" + "C&G" + cGs1);
                                newList.Add("400000004540350" + cReadable);

                                break;
                            #endregion
                            #region Outer Label 284, LAB-OC-HTLG-0148
                            case "LAB-OC-HTLG-0148":
                            case "284":

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075" + "Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                if (cCustSize.Contains("½"))
                                    newList.Add("422300001950145" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("422300001950145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150082" + "MFG");
                                newList.Add("421100000950112" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150119" + "EXP");
                                newList.Add("421100000950145" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150157" + "LOT");
                                newList.Add("4d3103000950184" + cLot);
                                newList.Add("410005000950199" + cLot);
                                newList.Add("D11");
                                newList.Add("4e4102001750070" + cLot + cCtn);
                                newList.Add("410005001900080" + cLot + cCtn);
                                newList.Add("D22");
                                break;
                            #endregion
                            #region Outer Label 282, LAB-OC-MEDL-0022
                            case "LAB-OC-MEDL-0022":
                            case "282":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("2e2105013550105" + "C&G" + cGs1);
                                newList.Add("200000013550090" + cReadable);
                                newList.Add("242200009900100" + PadCenter(cCustSize, 3));
                                newList.Add("2X1110007180080" + "L001665");
                                newList.Add("201100013830070" + "PO No");
                                newList.Add("221100013360054" + cPo);
                                newList.Add("201100011750070" + "Mfg Date");
                                newList.Add("221100011200054" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("201100009900070" + "Gross Wt.");
                                newList.Add("221100009300054" + nGross.ToString("0.0 Kgs"));
                                newList.Add("201100008250070" + "Ctn No");
                                newList.Add("291100007800054" + cCtn);
                                newList.Add("200000008250020" + cLot);
                                newList.Add("2X1110007180050" + "L001665");
                                newList.Add("201100013830040" + "Lot No");
                                newList.Add("221100013360024" + cCustOrderLot);
                                newList.Add("201100011750040" + "Exp Date");
                                newList.Add("221100011200024" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100009900040" + "Nett Wt.");
                                newList.Add("221100009300024" + nNett.ToString("0.0 Kgs"));
                                newList.Add("2X1110007030010" + "L200001");
                                newList.Add("242200002700100" + PadCenter(cCustSize, 3));
                                newList.Add("2e2105006550105" + "C&G" + cGs1);
                                newList.Add("200000006550090" + cReadable);
                                newList.Add("2X1110000180080" + "L001665");
                                newList.Add("201100006830070" + "PO No");
                                newList.Add("221100006360054" + cPo);
                                newList.Add("201100004750070" + "Mfg Date");
                                newList.Add("221100004200054" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("201100002900070" + "Gross Wt.");
                                newList.Add("221100002300054" + nGross.ToString("0.0 Kgs"));
                                newList.Add("201100001250070" + "Ctn No");
                                newList.Add("291100000800054" + cCtn);
                                newList.Add("200000001250020" + cLot);
                                newList.Add("2X1110000180050" + "L001665");
                                newList.Add("201100006830040" + "Lot No");
                                newList.Add("221100006360024" + cCustOrderLot);
                                newList.Add("201100004750040" + "Exp Date");
                                newList.Add("221100004200024" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100002900040" + "Nett Wt.");
                                newList.Add("221100002300024" + nNett.ToString("0.0 Kgs"));

                                break;
                            #endregion
                            #region Outer Label 276, LAB-OC-MCKU-0002 
                            case "LAB-OC-MCKU-0002":
                                case "276":
                                    newList.Add("D11");
                                    newList.Add("490000302760108" + cCustOrderLot);
                                    newList.Add("421100202760116" + cLot);
                                    newList.Add("421100202760126" + cCtn);
                                    newList.Add("490000302760150" + dMfg.ToString(outerLabelSetDateFormat));
                                    newList.Add("490000302760191" + dExp.ToString(outerLabelSetDateFormat));
                                    break;
                                #endregion
                            #region Outer Label 281, LAB-OC-SHWA-0001
                            case "LAB-OC-SHWA-0001":
                                case "281":

                                    cCustOrderLot = dMfg.ToString("yyMMdd") + stationNumber;
                                    newList.Add("410005000200040" + cPo);
                                    newList.Add("411200000200075Ctn. No.");
                                    newList.Add("421100000950070" + cCtn);
                                    newList.Add("422300001960136" + PadCenter(cCustSize, 5));
                                    newList.Add("1Y1100000200120LOT");
                                    newList.Add("4d3103000950150" + cCustOrderLot);
                                    newList.Add("410005000950165" + cLot);
                                    break;
                                #endregion
                            #region Outer Label LAB-OC-HTLG-0036, Former 55
                            case "LAB-OC-HTLG-0036":
                                newList.Add("411205000200040" + "Lot No.");
                                newList.Add("421105001500040" + cPo);
                                newList.Add("411205000200080" + "Batch No.");
                                newList.Add("421105001500080" + cLot);
                                newList.Add("1Y1100000200100MFG");
                                newList.Add("400000000600105Manufacturing");
                                newList.Add("400000000600113date:");
                                newList.Add("400000000600123Date");
                                newList.Add("400000000600131de fabrication:");
                                newList.Add("421105001500130" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000200150EXP");
                                newList.Add("400000000600157Expiration");
                                newList.Add("400000000600165date:");
                                newList.Add("400000000600175Date");
                                newList.Add("400000000600183d' expiration:");
                                newList.Add("421105001500182" + dExp.ToString("yyyy-MM"));
                                newList.Add("400005002600190" + cCtn);
                                break;
                            #endregion
                            #region Outer label LAB-OC-CLIN-0001, Former 237
                            case "LAB-OC-CLIN-0001":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("410005000200025" + cPo);
                                newList.Add("410005001900025" + "CTN: " + cCtn);
                                newList.Add("400005001900035" + cLot);
                                newList.Add("422300002180100" + PadCenter(cCustSize, 3));
                                newList.Add("1Y1100000150030" + "MFG");
                                newList.Add("421100000700060" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150065" + "EXP");
                                newList.Add("421100000700090" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150100" + "LOT");
                                newList.Add("421105000700120" + cCustOrderLot);
                                newList.Add("4e1106000150185" + "C&G" + cGs1);
                                newList.Add("400000000150195" + cReadable);

                                break;
                            #endregion
                            #region Outer Label LAB-OC-HTLG-0135, Former 232
                            case "LAB-OC-HTLG-0135":

                                cGs1 = "01" + cOuterGtn14_Code + "10" + cCustOrderLot; // Outer Product Code + Customer Lot
                                cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cCustOrderLot; // Outer Product Code + Customer Lot 

                                newList.Add("410005000200040" + cPo); // Customer PO Number
                                newList.Add("411200000200070" + "Ctn. No.");
                                newList.Add("421100001000070" + cCtn); // Carton Number
                                newList.Add("422300001900070" + PadCenter(cCustSize, 5)); // Printing Size
                                newList.Add("1Y1100000150086" + "LOT");
                                newList.Add("421105001000105" + cCustOrderLot);//Customer Lot
                                newList.Add("410005000150130" + "GS1 code:");
                                newList.Add("4e1103000150165" + "C&G" + cGs1); // Outer Product Code + Customer Lot
                                newList.Add("400000000150175" + cReadable); // Outer Product Code + Customer Lot

                                break;
                            #endregion
                            #region Outer Label 280, LAB-OC-MEDL-0021
                            case "LAB-OC-MEDL-0021":
                            case "280":

                                cCustRefNo = "HTL" + dMfg.ToString("yyMM") + cCustOrderLot;
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                                newList.Add("D11");
                                newList.Add("490000202700112" + cCustRefNo);
                                newList.Add("490000202700131" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202700150" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202700166" + cPo);
                                newList.Add("490000202700180" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000202700193" + cCtn);
                                newList.Add("490000102700205" + cLot);
                                newList.Add("490000206700112" + cCustRefNo);
                                newList.Add("490000206700131" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206700150" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206700166" + cPo);
                                newList.Add("490000206700180" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000206700193" + cCtn);
                                newList.Add("490000106700205" + cLot);
                                newList.Add("D22");
                                newList.Add("4e1106000300340" + "C&G" + cGs1);
                                newList.Add("400000000570350" + cReadable);
                                newList.Add("4e1106004300340" + "C&G" + cGs1);
                                newList.Add("400000004570350" + cReadable);

                                break;
                            #endregion
                            #region Outer Label 279, LAB-OC-HLYD-0009
                            case "LAB-OC-HLYD-0009"://Halyard
                            case "279"://Halyard

                                cGs1 = "~1" + "01" + cOuterGtn14_Code + "20" + cDistCountry + "11" + dMfg.ToString("yyMMdd") + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9) + "~1" + "30" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10);

                                newList.Add("D11");
                                newList.Add("290000101420070" + "(01)" + cOuterGtn14_Code + "(20)" + cDistCountry);
                                newList.Add("290000101420056" + "(11)" + dMfg.ToString("yyMMdd") + "(17)" + dExp.ToString("yyMMdd"));
                                newList.Add("290000101420042" + "(10)" + cLot.Substring(0, 9) + "(30)" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10));
                                newList.Add("D22");
                                newList.Add("2W1c44000019700292000000000" + cGs1);
                                newList.Add("211100003470067" + cLot.Substring(0, 9));
                                newList.Add("211100003470045" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("211100003470023" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("211100000680020" + cCtn);
                                break;
                            #endregion
                            #region Outer Label 278,LAB-OC-MEDL-0020
                            case "LAB-OC-MEDL-0020":
                            case "278":

                                newList.Add("1Y1100000200015LOT");
                                newList.Add("421100001100035" + cCustOrderLot);
                                newList.Add("411200000200065Gross Wt.");
                                newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200090Net Wt.");
                                newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200115PO.");
                                newList.Add("421100001100115" + cPo);
                                newList.Add("411200000200140Case No.");
                                newList.Add("421100001100140" + cCtn);
                                newList.Add("1Y1100000200145MFG");
                                newList.Add("421100001100170" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("401105002000190" + cLot);
                                break;
                            #endregion
                            #region Outer Label 272, LAB-OC-HLYD-0008
                            case "LAB-OC-HLYD-0008"://Halyard
                            case "272"://Halyard

                                cGs1 = "~1" + "01" + cOuterGtn14_Code + "20" + cDistCountry + "11" + dMfg.ToString("yyMMdd") + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9) + "~1" + "30" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10);

                                newList.Add("D11");
                                newList.Add("290000101420074" + "(01)" + cOuterGtn14_Code + "(20)" + cDistCountry);
                                newList.Add("290000101420060" + "(11)" + dMfg.ToString("yyMMdd") + "(17)" + dExp.ToString("yyMMdd"));
                                newList.Add("290000101420046" + "(10)" + cLot.Substring(0, 9) + "(30)" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10));
                                newList.Add("D22");
                                newList.Add("2W1c44000018800502000000000" + cGs1);
                                newList.Add("211100003470089" + cLot.Substring(0, 9));
                                newList.Add("211100003470067" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("211100003470045" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("211100000680024" + cCtn);
                                newList.Add("Q0002");

                                break;
                            #endregion
                            #region Outer Label 271, LAB-OC-HTLG-0147
                            case "LAB-OC-HTLG-0147":
                                case "271":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 12);
                                    cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 12);

                                    newList.Add("201100010350185" + "DO NOT COVER THIS LABEL");
                                    newList.Add("2e1107010350105C&G" + cGs1);
                                    newList.Add("201100010350090" + cReadable);
                                    if (cCustSize.Contains("½"))
                                        newList.Add("223400007000125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                    else
                                        newList.Add("261100007000125" + PadCenter(cCustSize, 5));

                                    newList.Add("20110000750095" + "LOT NO.");
                                    newList.Add("2e1101807100095" + cLot);
                                    newList.Add("201100007100085" + cLot);
                                    newList.Add("2X1110005350080L001500");
                                    newList.Add("201100010350070Gross Wt");
                                    newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                                    newList.Add("201100009050070Exp Date");
                                    newList.Add("221100008350054" + dExp.ToString("MMM-yyyy"));
                                    newList.Add("201100007200070PO No");
                                    newList.Add("291100006700054" + cPo);

                                    newList.Add("2X1110005350050L001500");
                                    newList.Add("201100010350040Nett Wt");
                                    newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                                    newList.Add("201100009050040Reorder No");
                                    newList.Add("221100008350024" + cProdRefNo);
                                    newList.Add("201100007200040Ctn No");
                                    newList.Add("221100006700024" + cCtn);

                                    newList.Add("2X1110005250010L200001");
                                    if (cCustSize.Contains("½"))
                                        newList.Add("223400004500125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                    else
                                        newList.Add("261100004500125" + PadCenter(cCustSize, 5));


                                    newList.Add("201100005100095" + "LOT NO.");
                                    newList.Add("2e1101804700095" + cLot);
                                    newList.Add("201100004700085" + cLot);

                                    newList.Add("201100002750185" + "DO NOT COVER THIS LABEL");
                                    newList.Add("2e1107002750105C&G" + cGs1);
                                    newList.Add("201100002750090" + cReadable);

                                    newList.Add("2X1110000100080L001500");
                                    newList.Add("201100005100070Gross Wt");
                                    newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                                    newList.Add("201100003800070Exp Date");
                                    newList.Add("221100003100054" + dExp.ToString("MMM-yyyy"));
                                    newList.Add("201100001950070PO No");
                                    newList.Add("291100001450054" + cPo);

                                    newList.Add("2X1110000100050L001500");
                                    newList.Add("201100005100040Nett Wt");
                                    newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                                    newList.Add("201100003800040Reorder No");
                                    newList.Add("221100003100024" + cProdRefNo);
                                    newList.Add("201100001950040Ctn No");
                                    newList.Add("221100001450024" + cCtn);
                                    break;
                                #endregion
                            #region Outer Label 273, LAB-OC-MEDL-0019
                            case "LAB-OC-MEDL-0019":
                            case "273":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("D11");
                                newList.Add("490000202700112" + cCustOrderLot);
                                newList.Add("490000202700131" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202700150" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202700166" + cPo);
                                newList.Add("490000202700180" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000202700193" + cCtn);
                                newList.Add("490000102700205" + cLot);
                                newList.Add("490000206700112" + cCustOrderLot);
                                newList.Add("490000206700131" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206700150" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206700166" + cPo);
                                newList.Add("490000206700180" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000206700193" + cCtn);
                                newList.Add("490000106700205" + cLot);
                                newList.Add("D22");
                                newList.Add("4e1106000300340" + "C&G" + cGs1);
                                newList.Add("400000000570350" + cReadable);
                                newList.Add("4e1106004300340" + "C&G" + cGs1);
                                newList.Add("400000004570350" + cReadable);

                                break;
                            #endregion
                            #region Outer Label 274, LAB-OC-FAST-0002
                            case "LAB-OC-FAST-0002":
                                case "274":

                                    newList.Add("D11");
                                    newList.Add("4o0000000150060" + cProdRefNo);
                                    newList.Add("490000200150075" + cProdRefNo);
                                    newList.Add("490000300150100" + cCustSize + " 4.0mil DispGlv");
                                    newList.Add("490000300150120" + "GUANTES DE NITIRLO DESECHABLES");
                                    newList.Add("4o0000001600170" + "1000");
                                    newList.Add("490000300150150" + "Qty/Cantidad: " + "1000");
                                    newList.Add("490000300150165" + "pieces/piezas");
                                    newList.Add("4o0000000150225" + cPo);
                                    newList.Add("490000200150240" + cPo);
                                    newList.Add("490000301050260" + "Made in Malaysia");
                                    newList.Add("490000301050280" + "Hecho en Malasia");
                                    newList.Add("1Y1100000150310" + "LOT");
                                    newList.Add("1Y1100000150333" + "MFG");
                                    newList.Add("1Y1100000150360" + "EXP");
                                    newList.Add("490000300500322" + cLot);
                                    newList.Add("490000300500348" + dMfg.ToString(outerLabelSetDateFormat));
                                    newList.Add("490000300500375" + dExp.ToString(outerLabelSetDateFormat));
                                    newList.Add("490000302000375" + "Ctn.: " + cCtn);

                                    break;
                                #endregion
                            #region Outer Label 269, LAB-OC-KCGS-0003
                        case "LAB-OC-KCGS-0003":
                            case "269":

                                cGs1 = "~1" + "01" + cOuterGtn14_Code + "17" + cCustOrderLot.Substring(2, 6) + "~1" + "10" + cCustOrderLot.Substring(8, 9);

                                newList.Add("211100003900137" + cCustOrderLot.Substring(8, 9));
                                newList.Add("211100002550137" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("211100001330137" + cCustOrderLot.Substring(0, 4) + "-" + cCustOrderLot.Substring(4, 2) + "-" + cCustOrderLot.Substring(6, 2));
                                newList.Add("211100003900123" + cCtn);
                                newList.Add("201100003900103" + "(01)" + cOuterGtn14_Code);
                                newList.Add("201100003900093" + "(17)" + cCustOrderLot.Substring(2, 6));
                                newList.Add("201100003900083" + "(10)" + cCustOrderLot.Substring(8, 9));
                                newList.Add("2W1c44000039000212000000000" + cGs1);

                                break;
                            #endregion
                            #region Outer Label 270, LAB-OC-MEDL-0018
                            case "LAB-OC-MEDL-0018":
                            case "270":

                                newList.Add("D11");
                                newList.Add("490000202200208" + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MM") + cCustOrderLot);
                                newList.Add("490000202200228" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202200250" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202200270" + cPo);
                                newList.Add("490000202200282" + nNett.ToString("0.00 Kgs"));
                                newList.Add("490000202200294" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000202200306" + cCtn);
                                newList.Add("490000202800366" + cLot);
                                newList.Add("490000206200208" + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MM") + cCustOrderLot);
                                newList.Add("490000206200228" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206200250" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206200270" + cPo);
                                newList.Add("490000206200282" + nNett.ToString("0.00 Kgs"));
                                newList.Add("490000206200294" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000206200306" + cCtn);
                                newList.Add("490000206800366" + cLot);

                                break;
                            #endregion
                            #region Outer Label 267, LAB-OC-MEDL-0017
                            case "LAB-OC-MEDL-0017":
                            case "267":

                                newList.Add("1Y1100000200015LOT");
                                newList.Add("421100001100035" + cCustOrderLot);
                                newList.Add("411200000200065Gross Wt.");
                                newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200090Net Wt.");
                                newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200115PO.");
                                newList.Add("421100001100115" + cPo);
                                newList.Add("411200000200140Case No.");
                                newList.Add("421100001100140" + cCtn);
                                newList.Add("1Y1100000200145MFG");
                                newList.Add("421100001100170" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("401105002000190" + cLot);
                                break;
                            #endregion
                            #region Outer Label 266, LAB-OC-MEDL-0016
                            case "LAB-OC-MEDL-0016":
                            case "266":


                                newList.Add("1Y1100000200025LOT");
                                newList.Add("421100001100045" + cCustOrderLot);
                                newList.Add("411200000200080Gross Wt.");
                                newList.Add("421100001100080" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200110Net Wt.");
                                newList.Add("421100001100110" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200140PO");
                                newList.Add("421100001100140" + cPo);
                                newList.Add("411200000200170Case No.");
                                newList.Add("421100001100170" + cCtn);
                                newList.Add("401105002000190" + cLot);
                                break;
                            #endregion
                            #region Outer Label 265, LAB-OC-MEDL-0015
                            case "LAB-OC-MEDL-0015":
                            case "265":

                                newList.Add("D11");
                                newList.Add("421100000150020" + "Date of Manufacture/");
                                newList.Add("421100000150030" + "Date de Fabrication:");
                                newList.Add("421100000150053" + "Exp. Date:");
                                newList.Add("421100000150075" + "Gross Weight/");
                                newList.Add("421100000150085" + "Poids brut:");
                                newList.Add("421100000150125" + "Net Weight/");
                                newList.Add("421100000150135" + "Poids net:");
                                newList.Add("421100000150185" + "Case #/Caisse #:"); // change from 'Caisse no.' into 'Caisse #'
                                newList.Add("D22");
                                newList.Add("421100001350030" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("421100001350057" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("421100001350085" + nGross.ToString("0.0 Kg"));
                                newList.Add("1Y1100000150090" + "LOT");
                                newList.Add("421100001350110" + cCustOrderLot);
                                newList.Add("421100001350135" + nNett.ToString("0.0 Kg"));
                                newList.Add("411100000150158" + "P.O.:");
                                newList.Add("421100001350160" + cPo);
                                newList.Add("421100001350190" + cCtn);
                                newList.Add("401105002100190" + cLot);

                                break;
                            #endregion
                            #region Outer Label 264, LAB-OC-MEDL-0014
                            case "LAB-OC-MEDL-0014":
                            case "264":

                                newList.Add("D11");
                                newList.Add("421100000150050" + "Gross Weight/Poids");
                                newList.Add("421100000150060" + "brut/Peso bruto:");
                                newList.Add("421100000150078" + "Net Weight/Poids");
                                newList.Add("421100000150088" + "net/Peso neto:");
                                newList.Add("421100000150187" + "Case #/N de caisse:");
                                newList.Add("491100100150155" + "Date of Manufacture");
                                newList.Add("491100100150163" + "Date de Fabrication");
                                newList.Add("491100100150171" + "Fecha de Fabricaci" + Chr(162) + "n");
                                newList.Add("491100100620187" + Chr(167));
                                newList.Add("D22");
                                newList.Add("1Y1100000150015" + "LOT");
                                newList.Add("421100001350035" + cCustOrderLot);
                                newList.Add("421100001350060" + nGross.ToString("0.0 Kgs"));
                                newList.Add("421100001350085" + nNett.ToString("0.0 Kgs"));
                                newList.Add("411100000150108" + "P.O.:" + Chr(224));
                                newList.Add("421100001350110" + cPo);
                                newList.Add("1Y1100000150113" + "MFG");
                                newList.Add("421100001350150" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("421100001350190" + cCtn);
                                newList.Add("401105002200190" + cLot);

                                break;
                            #endregion
                            #region Outer Label 263, LAB-OC-MEDL-0013
                            case "LAB-OC-MEDL-0013":
                            case "263":

                                newList.Add("D11");
                                newList.Add("421100000150030" + "Date of Manufacture/");
                                newList.Add("421100000150040" + "Date de Fabrication:");
                                newList.Add("421100000150055" + "Gross Weight/");
                                newList.Add("421100000150065" + "Poids brut:");
                                newList.Add("421100000150105" + "Net Weight/");
                                newList.Add("421100000150115" + "Poids net:");
                                newList.Add("421100000150165" + "Case #/Caisse no.:");
                                newList.Add("D22");
                                newList.Add("421100001350040" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("421100001350065" + nGross.ToString("0.0 Kg"));
                                newList.Add("1Y1100000150070LOT");
                                newList.Add("421100001350090" + cCustOrderLot);
                                newList.Add("421100001350115" + nNett.ToString("0.0 Kg"));
                                newList.Add("411100000150138" + "P.O.:");
                                newList.Add("421100001350140" + cPo);
                                newList.Add("421100001350170" + cCtn);
                                newList.Add("401105002000190" + cLot);

                                break;
                            #endregion
                            #region Outer Label 268, LAB-OC-DASH-0002
                            case "268":
                                case "LAB-OC-DASH-0002":

                                    cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "10" + cPo;
                                    cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(10)" + cPo;

                                    newList.Add("410005000150030" + cPo);
                                    newList.Add("411200000150055" + "Ctn. No.");
                                    newList.Add("421100001000055" + cCtn);
                                    newList.Add("422200002250060" + PadCenter(cCustSize, 3));
                                    newList.Add("1Y1100000100060" + "MFG");
                                    newList.Add("421100001000085" + dMfg.ToString(outerLabelSetDateFormat));
                                    newList.Add("1Y1100000100100" + "LOT");
                                    newList.Add("421105001000120" + cPo);
                                    newList.Add("4e1105000100180" + "C&G" + cGs1);
                                    newList.Add("400000000100190" + cReadable);

                                    break;
                                #endregion
                            #region Outer Label 261, LAB-OC-MEDL-0012
                            case "LAB-OC-MEDL-0012":
                            case "261":

                                cCustRefNo = "HTL" + dMfg.ToString("yyMM") + cCustOrderLot + "J";

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                                newList.Add("D11");
                                newList.Add("490000202700112" + cCustRefNo);
                                newList.Add("490000202700131" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202700150" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202700166" + cPo);
                                newList.Add("490000202700180" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000202700193" + cCtn);
                                newList.Add("490000102700205" + cLot);
                                newList.Add("490000206700112" + cCustRefNo);
                                newList.Add("490000206700131" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206700150" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206700166" + cPo);
                                newList.Add("490000206700180" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000206700193" + cCtn);
                                newList.Add("490000106700205" + cLot);
                                newList.Add("D22");
                                newList.Add("4e1106000300340" + "C&G" + cGs1);
                                newList.Add("400000000570350" + cReadable);
                                newList.Add("4e1106004300340" + "C&G" + cGs1);
                                newList.Add("400000004570350" + cReadable);

                                break;
                                #endregion
                            #region Outer Label 262, LAB-OC-FAST-0001
                            case "LAB-OC-FAST-0001":
                            case "262":

                                newList.Add("D11");
                                newList.Add("4o0000000150060" + cProdRefNo);
                                newList.Add("490000200150075" + cProdRefNo);
                                newList.Add("490000300150100" + cCustSize + " 3.5mil DispGlv");
                                newList.Add("490000300150120" + "GUANTES DE NITIRLO DESECHABLES");
                                newList.Add("4o0000001600170" + "1000");
                                newList.Add("490000300150150" + "Qty/Cantidad: " + "1000");
                                newList.Add("490000300150165" + "pieces/piezas");
                                newList.Add("4o0000000150225" + cPo);
                                newList.Add("490000200150240" + cPo);
                                newList.Add("490000301050260" + "Made in Malaysia");
                                newList.Add("490000301050280" + "Hecho en Malasia");
                                newList.Add("1Y1100000150310" + "LOT");
                                newList.Add("1Y1100000150333" + "MFG");
                                newList.Add("1Y1100000150360" + "EXP");
                                newList.Add("490000300500322" + cLot);
                                newList.Add("490000300500348" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000300500375" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000302000375" + "Ctn.: " + cCtn);

                                break;
                            #endregion
                            #region Outer Label 260, LAB-OC-S2SG-0001
                            case "LAB-OC-S2SG-0001":
                            case "260":

                                newList.Add("1Y1100000650020LOT_H");
                                newList.Add("191000000650100" + cCustOrderLot);
                                newList.Add("1Y1100000250020MFG_H");
                                newList.Add("191000000350100" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("101100000150100" + cCtn + "   " + cLot);

                                break;
                            #endregion
                            #region Outer Label 259, LAB-OC-MEDL-0011
                            case "LAB-OC-MEDL-0011":
                            case "259":

                                newList.Add("411100100150025Lot No.");
                                newList.Add("411100001400025" + cCustOrderLot);
                                newList.Add("411100000150045Gross Weight");
                                newList.Add("411100001400045" + nGross.ToString("0.0 Kgs"));
                                newList.Add("411100000150070Nett Weight");
                                newList.Add("411100001400070" + nNett.ToString("0.0 Kgs"));
                                newList.Add("411100000150095PO. No.");
                                newList.Add("411100001400095" + cPo);
                                newList.Add("411100000150120Ctn. No.");
                                newList.Add("411100001400120" + cCtn);
                                newList.Add("411100000150145Mfg. Date");
                                newList.Add("411100001400145" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("411100000150170Exp. Date");
                                newList.Add("411100001400170" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("410000001800187" + cLot);

                                break;
                            #endregion
                            #region Outer Label 257, LAB-OC-ANSL-0016
                            case "LAB-OC-ANSL-0016":
                                case "257":

                                    cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot.Substring(0, 4) + Right(cCustOrderLot, 2) + "&G" + "92" + cDistCountry;
                                    cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot.Substring(0, 4) + Right(cCustOrderLot, 2) + "(92)" + cDistCountry;

                                    newList.Add("491100100150045" + "MICRO-TOUCH" + Chr(169) + " BLUE NITRILE (EMEA/APAC)");
                                    newList.Add("491100000150095" + "SHIPPER BOX OF 2000");
                                    newList.Add("491100000150120" + "SIZE:");
                                    newList.Add("491100000700120" + cCustSize);
                                    newList.Add("491100000150145" + "REF:");
                                    newList.Add("491100000700145" + cCustRefNo);
                                    newList.Add("491100000150170" + "INT:");
                                    newList.Add("491100000700170" + cDistCountry);
                                    newList.Add("490000102380095" + "LOT");
                                    newList.Add("1X1100002330075" + "B020040002002");
                                    newList.Add("1X1100002270100" + "B020048002002");
                                    newList.Add("490000102880095" + cCustOrderLot.Substring(0, 4) + Right(cCustOrderLot, 2));
                                    newList.Add("490000102880120" + cCustOrderLot);
                                    newList.Add("491100002880145" + dMfg.ToString(outerLabelSetDateFormat));
                                    newList.Add("491100002880170" + dExp.ToString(outerLabelSetDateFormat));
                                    newList.Add("401100000150260" + cReadable);
                                    newList.Add("4e1107000150250" + "C&G" + cGs1);
                                    newList.Add("401100000150290" + "CTN#: " + cCtn + "                    MFG REF: " + cLot);
                                    newList.Add("D11");
                                    newList.Add("1Y1200002370128" + "MFG");
                                    newList.Add("1Y1200002450153" + "EXP");
                                    newList.Add("490000202330116" + "BATCH");
                                    break;
                                #endregion
                            #region Outer Label 258, LAB-OC-MEDL-0010
                            case "LAB-OC-MEDL-0010":
                            case "258":

                                newList.Add("D11");
                                newList.Add("490000202200208" + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MM") + cCustOrderLot);
                                newList.Add("490000202200228" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202200250" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202200270" + cPo);
                                newList.Add("490000202200282" + nNett.ToString("0.00 Kgs"));
                                newList.Add("490000202200294" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000202200306" + cCtn);
                                newList.Add("490000202800366" + cLot);
                                newList.Add("490000206200208" + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MM") + cCustOrderLot);
                                newList.Add("490000206200228" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206200250" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206200270" + cPo);
                                newList.Add("490000206200282" + nNett.ToString("0.00 Kgs"));
                                newList.Add("490000206200294" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000206200306" + cCtn);
                                newList.Add("490000206800366" + cLot);

                                break;
                                #endregion
                            #region Outer Label 254, LAB-OC-HTLG-0146
                        case "LAB-OC-HTLG-0146":
                        case "254":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4);


                            newList.Add("2e1109009140105" + "C&G" + cGs1);
                            newList.Add("201100009140090" + cReadable);

                            newList.Add("261100006650125" + PadCenter(cCustSize, 3));   // Change Pad from 5 to 3
                            newList.Add("D11");
                            newList.Add("2e4102006500095" + "C&G" + cLot + cCtn);
                            newList.Add("210005006500085" + cLot + cCtn);
                            newList.Add("D22");
                            newList.Add("2X1110005350080" + "L001250");
                            newList.Add("201100007750070" + "Exp Date");
                            newList.Add("221100007750049" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100006200070" + "Gross Wt");
                            newList.Add("221100006200049" + nGross.ToString("0.0 Kg"));

                            newList.Add("2X1110005350045" + "L001250");
                            newList.Add("D11");
                            newList.Add("231100010350070" + "PO NO.:");
                            newList.Add("261100010350030" + PadCenter(cPo, 13));
                            newList.Add("231100010350150" + "CTN. NO.:");
                            newList.Add("260000010350110" + cCtn);
                            newList.Add("D22");
                            newList.Add("201100007750035" + "Reorder No");
                            newList.Add("221100007750014" + cProdRefNo);
                            newList.Add("201100006200035" + "Nett Wt");
                            newList.Add("221100006200014" + nNett.ToString("0.0 Kg"));

                            newList.Add("2X1110005220010" + "L200001");

                            newList.Add("261100004900125" + PadCenter(cCustSize, 3)); // Change Pad from 5 to 3, previously got space in code newList.Add("26110000 4900125"

                            newList.Add("2e1109003450105" + "C&G" + cGs1);
                            newList.Add("201100003450090" + cReadable);

                            newList.Add("D11");
                            newList.Add("2e4102004750095" + "C&G" + cLot + cCtn);
                            newList.Add("210005004750085" + cLot + cCtn);
                            newList.Add("D22");
                            newList.Add("2X1110002800080" + "L001230");
                            newList.Add("201100005100070" + "Gross Wt");
                            newList.Add("221100005100049" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100003800070" + "Exp Date");
                            newList.Add("221100003800049" + dExp.ToString("MMM-yyyy"));

                            newList.Add("D11");
                            newList.Add("231100000900070" + "PO NO.:");
                            newList.Add("261100002450030" + PadCenter(cPo, 13));//Add PadRight
                            newList.Add("231100000900150" + "CTN. NO.:");
                            newList.Add("261100001050110" + cCtn);
                            newList.Add("D22");

                            newList.Add("2X1110002800045" + "L001230");
                            newList.Add("201100005100035" + "Nett Wt");
                            newList.Add("221100005100014" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100003800035" + "Reorder No");
                            newList.Add("221100003800014" + cProdRefNo);

                            break;
                        #endregion
                            #region Outer Label 255, LAB-OC-HLYD-0007
                        case "LAB-OC-HLYD-0007":
                        case "255":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "&G" + "30" + cProdRefNo; // Included &G code
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                            newList.Add("211100003790076" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100002290076" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("211100001120076" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100003790063" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1105003790011" + "C&G" + cGs1);     //GS1 barcode - check paramater
                            newList.Add("201100000400010" + cCtn);     //GS1 barcode - check paramater
                            break;
                        #endregion
                            #region Outer Label 251, LAB-OC-MEDL-0008
                        case "LAB-OC-MEDL-0008":
                        case "251":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("2e2105013550105" + "C&G" + cGs1);
                                newList.Add("200000013550090" + cReadable);
                                newList.Add("242200009900100" + PadCenter(cCustSize, 3));
                                newList.Add("2X1110007100080" + "L001665");
                                newList.Add("201100013750070" + "PO No");
                                newList.Add("221100013250054" + cPo);
                                newList.Add("201100011550070" + "Mfg Date");
                                newList.Add("221100010950054" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("201100009900070" + "Gross Wt.");
                                newList.Add("221100009300054" + nGross.ToString("0.0 Kgs"));
                                newList.Add("201100008250070" + "Ctn No");
                                newList.Add("291100007800054" + cCtn);
                                newList.Add("200000008250020" + cLot);
                                newList.Add("2X1110007100050" + "L001665");
                                newList.Add("201100013750040" + "Lot No");
                                newList.Add("221100013250024" + cCustOrderLot);
                                newList.Add("201100011550040" + "Exp Date");
                                newList.Add("221100010950024" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100009900040" + "Nett Wt.");
                                newList.Add("221100009300024" + nNett.ToString("0.0 Kgs"));
                                newList.Add("2X1110006950010" + "L200001");
                                newList.Add("242200002700100" + PadCenter(cCustSize, 3));
                                newList.Add("2e2105006550105" + "C&G" + cGs1);
                                newList.Add("200000006550090" + cReadable);
                                newList.Add("2X1110000100080" + "L001665");
                                newList.Add("201100006750070" + "PO No");
                                newList.Add("221100006250054" + cPo);
                                newList.Add("201100004550070" + "Mfg Date");
                                newList.Add("221100003950054" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("201100002900070" + "Gross Wt.");
                                newList.Add("221100002300054" + nGross.ToString("0.0 Kgs"));
                                newList.Add("201100001250070" + "Ctn No");
                                newList.Add("291100000800054" + cCtn);
                                newList.Add("200000001250020" + cLot);
                                newList.Add("2X1110000100050" + "L001665");
                                newList.Add("201100006750040" + "Lot No");
                                newList.Add("221100006250024" + cCustOrderLot);
                                newList.Add("201100004550040" + "Exp Date");
                                newList.Add("221100003950024" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100002900040" + "Nett Wt.");
                                newList.Add("221100002300024" + nNett.ToString("0.0 Kgs"));

                                break;
                            #endregion
                            #region Outer Label 252, LAB-OC-MEDL-0009
                            case "LAB-OC-MEDL-0009":
                            case "252":

                                newList.Add("D11");
                                newList.Add("490000202200208" + cCustOrderLot);
                                newList.Add("490000202200228" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202200250" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000202200270" + cPo);
                                newList.Add("490000202200282" + nNett.ToString("0.00 Kgs"));
                                newList.Add("490000202200294" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000202200306" + cCtn);
                                newList.Add("490000202800366" + cLot);
                                newList.Add("490000206200208" + cCustOrderLot);
                                newList.Add("490000206200228" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206200250" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000206200270" + cPo);
                                newList.Add("490000206200282" + nNett.ToString("0.00 Kgs"));
                                newList.Add("490000206200294" + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000206200306" + cCtn);
                                newList.Add("490000206800366" + cLot);

                                break;
                            #endregion
                            #region Outer Label 253, LAB-OC-MCKU-0001
                            case "LAB-OC-MCKU-0001":
                            case "253":

                                newList.Add("191000000650020" + "Lot No.");
                                newList.Add("191000000650100" + cCustOrderLot);
                                newList.Add("1Y1100000250020" + "MFG_H");
                                newList.Add("191000000350100" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("101100000150100" + cCtn + "   " + cLot);

                                break;
                            #endregion
                            #region Outer Label 250, LAB-OC-IHCP-0003
                            case "LAB-OC-IHCP-0003":
                            case "250":

                                newList.Add("491100000700038" + "SIZE:");
                                newList.Add("1X1100001200020" + "L100150");
                                newList.Add("491100001660085" + "Reorder");
                                newList.Add("491100401400120" + cCustRefNo);
                                newList.Add("491100000800155" + cCustOrderLot);
                                newList.Add("491100000800192" + cLot);
                                newList.Add("491100002780155" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491100002780192" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1X1100000350172" + "B020032002002");
                                newList.Add("490000100410192" + "BN");
                                newList.Add("1Y1100000350135" + "LOT");
                                newList.Add("1Y1100002270128" + "MFG");
                                newList.Add("1Y1100002350165" + "EXP");
                                newList.Add("4e1107001250275" + "C&G" + "01" + cOuterGtn14_Code);
                                newList.Add("401100001350285" + "(01)" + cOuterGtn14_Code);
                                newList.Add("401100000200285" + "CTN#: " + cCtn);
                                newList.Add("D11");
                                newList.Add("460000001330060" + cCustSize);

                                break;
                            #endregion
                            #region Outer Label 249, LAB-OC-ANSL-0015
                            case "LAB-OC-ANSL-0015":
                            case "249":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "&G" + "92" + cDistCountry;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cDistCountry;

                                newList.Add("491100100150035" + "MICRO-TOUCH" + Chr(169) + " MICRO-THIN WHITE NITRILE");
                                newList.Add("491100100150055" + "GLOVES - INDIA");
                                newList.Add("491100000150095" + "OUTER CARTON OF 2000");  //Fixed qty
                                newList.Add("491100000150120" + "SIZE:");
                                newList.Add("491100000700120" + cCustSize);
                                newList.Add("491100000150145" + "REF:");
                                newList.Add("491100000700145" + cCustRefNo);
                                newList.Add("491100000150170" + "INT:");
                                newList.Add("491100000700170" + cDistCountry);
                                newList.Add("490000102380095" + "LOT");
                                newList.Add("1X1100002330075" + "B020040002002");
                                newList.Add("490000102880095" + cCustOrderLot);
                                newList.Add("491100002880120" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491100002880145" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("401100000150260" + cReadable);
                                newList.Add("4e1107000150250" + "C&G" + cGs1);
                                newList.Add("401100000150290" + "PO: " + cOrderNum + "    CTN#: " + cCtn + "    MFG REF: " + cLot);
                                newList.Add("D11");
                                newList.Add("1Y1200002370103" + "MFG");
                                newList.Add("1Y1200002450129" + "EXP");
                                break;
                            #endregion
                            #region Outer Label 247, LAB-OC-HTLG-0144
                            case "247":
                            case "LAB-OC-HTLG-0144":

                                newList.Add("442200000500095" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200130" + "Batch No.");
                                newList.Add("421100001100125" + cLot);
                                newList.Add("411200000200160" + "Lot No.");
                                newList.Add("421100001100155" + cCustOrderLot);
                                newList.Add("411100002200180" + cCtn);

                                break;
                            #endregion
                            #region Outer Label 248, LAB-OC-HTLG-0145
                            case "248":
                            case "LAB-OC-HTLG-0145":

                                newList.Add("421100000200045" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("421100000200085" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("421100000200125" + cCustOrderLot);
                                newList.Add("421100000200165" + cLot);
                                newList.Add("411100001900185" + "CTN: " + cCtn);

                                break;
                            #endregion
                            #region Outer Label 245, LAB-OC-HTLG-0142
                            case "LAB-OC-HTLG-0142":
                            case "245":

                                cGs1 = cOuterGtn14_Code + "$" + cCustOrderLot + "$" + dMfg.ToString("yyyyMMdd") + "$" + cProdRefNo + "$" + dExp.ToString("yyyyMMdd") + "$" + cDistCountry;

                                newList.Add("4W1DHH000003502912,L3M,A" + cGs1);
                                newList.Add("490000103050130" + cOrderNum);
                                newList.Add("492200503850110" + cCustSize);
                                newList.Add("FA+");
                                newList.Add("FB+");
                                newList.Add("490000203050180" + "Ctn. No.");
                                newList.Add("FB-U-I-");
                                newList.Add("490000204100180" + cCtn);
                                newList.Add("490000204100220" + dMfg.ToString("yyyyMMdd"));
                                newList.Add("490000204100255" + dExp.ToString("yyyyMMdd"));
                                newList.Add("490000204100295" + cCustOrderLot);
                                newList.Add("1Y1100003050190" + "MFG");
                                newList.Add("1Y1100003050230" + "EXP");
                                newList.Add("1Y1100003050270" + "LOT");
                                newList.Add("D11");
                                newList.Add("490000204600335" + cLot);
                                newList.Add("FA+");
                                newList.Add("FB+");
                                newList.Add("490000100200320" + cGs1);
                                newList.Add("FB-U-I-");

                                break;
                            #endregion
                            #region Outer Label 246, LAB-OC-HTLG-0143
                            case "LAB-OC-HTLG-0143":
                            case "246":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("421100000300030" + "Lot No.  :");
                                newList.Add("421100001700030" + cCustOrderLot);
                                newList.Add("421100000300060" + "Mfg. Date:");
                                newList.Add("421100001700060" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("421100000300090" + "Use By   :");
                                newList.Add("421100001700090" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("421100000300120" + "Case No. :");
                                newList.Add("421100001700120" + Right(cCtn, 4));
                                newList.Add("421100000300150" + cCustSize);
                                newList.Add("1Y1100001700130" + "REF");
                                newList.Add("421100002200150" + cProdRefNo);
                                newList.Add("110000003700020" + cLot);
                                newList.Add("4e1106000350220" + "C&G" + cGs1);
                                newList.Add("400000000500230" + cReadable);
                                break;
                            #endregion
                            #region Outer Label 242, LAB-OC-ANSL-0013
                            case "LAB-OC-ANSL-0013":
                            case "242":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "&G" + "92" + cDistCountry;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cDistCountry;

                                newList.Add("D11");
                                newList.Add("490000300550068" + cCustSize);
                                newList.Add("490000300550085" + cCustRefNo);
                                newList.Add("490000300550103" + cDistCountry);
                                newList.Add("490000302900049" + cCustOrderLot);
                                newList.Add("490000302900071" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("490000302900094" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("490000000900158" + "CTN#: " + cCtn + "                                                       " + "MFG REF: " + cLot);
                                newList.Add("D22");
                                newList.Add("4e1103000400134" + "C&G" + cGs1);
                                newList.Add("400000000600144" + cReadable);

                                break;
                            #endregion
                            #region Outer Label 243, LAB-OC-HLYD-0006
                            case "LAB-OC-HLYD-0006"://Halyard
                            case "243"://Halyard

                                cGs1 = "~1" + "01" + cOuterGtn14_Code + "20" + cDistCountry + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9) + "~1" + "30" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10);

                                newList.Add("D11");
                                newList.Add("290000102940063" + "(01)" + cOuterGtn14_Code + "(20)" + cDistCountry);
                                newList.Add("290000102940049" + "(17)" + dExp.ToString("yyMMdd"));
                                newList.Add("290000102940035" + "(10)" + cLot.Substring(0, 9) + "(30)" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10));
                                newList.Add("D22");
                                newList.Add("2W1c44000034700312000000000" + cGs1);
                                newList.Add("211100003470084" + cLot.Substring(0, 9));
                                newList.Add("211100001750084" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("211100000650020" + cCtn);
                                //newList.Add("Q0002"); // This code only apply at NGC

                                break;
                            #endregion
                            #region Outer Label 244, LAB-OC-JUBA-0001
                            case "LAB-OC-JUBA-0001":
                            case "244":
                                newList.Add("490000200200040" + "Ref. : " + cBrand);
                                newList.Add("490000100200055" + "Description:");
                                newList.Add("490000200200115" + "Size : " + cCustSize);
                                newList.Add("490000100200135" + "QUANTITY : " + cProdRefNo + " pcs");
                                newList.Add("490000100200155" + "CARTON N" + Chr(167) + ": " + cCtn);
                                newList.Add("490000100200175" + "P.O. NUMBER: " + cPo);
                                newList.Add("490000100200195" + "Measures: " + cInnerGtn14_Code);
                                newList.Add("490000100200215" + "Gross weight: " + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000100200235" + "Net weight: " + nNett.ToString("0.00 Kgs"));
                                newList.Add("4e1105000400295" + cOuterGtn14_Code);
                                newList.Add("401100000950305" + cOuterGtn14_Code);
                                newList.Add("4e1105000800365" + cPo.Substring(8) + dMfg.ToString("yy").Substring(1, 1) + "/" + cCustOrderLot);
                                newList.Add("401100001200375" + cPo.Substring(8) + dMfg.ToString("yy").Substring(1, 1) + "/" + cCustOrderLot);
                                newList.Add("111100002700280" + cLot);
                                newList.Add("D11");
                                newList.Add("490000200200070" + "GUANTES DESECHABLES DE NITRILO");
                                newList.Add("490000200200083" + "SIN POLVO, " + cDistCountry);
                                //newList.Add("Q0002"); // This code only apply at NGC

                                break;
                            #endregion
                            #region Outer Label 241, LAB-OC-HTLG-0136
                            case "LAB-OC-HTLG-0136":
                            case "241":

                                cCustOrderLot = dMfg.ToString("yyyyMM") + Right(cPline, 2) + cDistCountry;

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("2e1109009850105C&G" + cGs1);
                                newList.Add("201100009850090" + cReadable);
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400007000125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100007000125" + PadCenter(cCustSize, 5));

                                newList.Add("D11");
                                newList.Add("2e4102007050095" + cLot + cCtn);
                                newList.Add("210005006900085" + cLot + cCtn);
                                newList.Add("D22");

                                newList.Add("2X1110005350080L001500");
                                newList.Add("201100010350070Gross Wt");
                                newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100009050070Exp Date");
                                newList.Add("221100008350054" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100007200070PO No");
                                newList.Add("291100006700054" + cPo);

                                newList.Add("2X1110005350050L001500");
                                newList.Add("201100010350040Nett Wt");
                                newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100009050040Reorder No");
                                newList.Add("221100008350024" + cProdRefNo);
                                newList.Add("201100007200040Ctn No");
                                newList.Add("221100006700024" + cCtn);

                                newList.Add("2X1110005250010L200001");
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400004500125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100004500125" + PadCenter(cCustSize, 5));

                                newList.Add("2e1109002750105C&G" + cGs1);
                                newList.Add("201100002750090" + cReadable);

                                newList.Add("D11");
                                newList.Add("2e4102004550095" + cLot + cCtn);
                                newList.Add("210005004400085" + cLot + cCtn);
                                newList.Add("D22");

                                newList.Add("2X1110000100080L001500");
                                newList.Add("201100005100070Gross Wt");
                                newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100003800070Exp Date");
                                newList.Add("221100003100054" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100001950070PO No");
                                newList.Add("291100001450054" + cPo);

                                newList.Add("2X1110000100050L001500");
                                newList.Add("201100005100040Nett Wt");
                                newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100003800040Reorder No");
                                newList.Add("221100003100024" + cProdRefNo);
                                newList.Add("201100001950040Ctn No");
                                newList.Add("221100001450024" + cCtn);
                                break;
                            #endregion
                            #region Outer Label 239, LAB-OC-IHCP-0002
                            case "LAB-OC-IHCP-0002":
                            case "239":

                                newList.Add("491100000700038" + "SIZE:");
                                newList.Add("1X1100001200020" + "L100150");
                                newList.Add("491100001660085" + "Reorder");
                                newList.Add("491100401400120" + cCustRefNo);
                                newList.Add("491100000800155" + cLot);
                                newList.Add("491100002780155" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491100002780192" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000350135" + "LOT");
                                newList.Add("1Y1100002270128" + "MFG");
                                newList.Add("1Y1100002350165" + "EXP");
                                newList.Add("4e1107001250275" + "C&G" + "01" + cOuterGtn14_Code);
                                newList.Add("401100001350285" + "(10)" + cOuterGtn14_Code);
                                newList.Add("401100000200285" + "CTN#: " + cCtn);
                                newList.Add("D11");
                                newList.Add("460000001330060" + cCustSize);

                                break;
                            #endregion
                            #region Outer Label 240, LAB-OC-ANSL-0012
                            case "LAB-OC-ANSL-0012":
                            case "240":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "&G" + "92" + cDistCountry;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cDistCountry;

                                newList.Add("421100100150035" + "PRODUCT:MICRO-TOUCH BLUE NITRILE");
                                newList.Add("421100000150075" + "SIZE:");
                                newList.Add("421100000800075" + cCustSize);
                                newList.Add("421100001850075" + "SHIPPER");
                                newList.Add("421100002720075" + "BOX");
                                newList.Add("421100003120075" + "OF");
                                newList.Add("421100003400075" + "2000");
                                newList.Add("421100000150115" + "REF");
                                newList.Add("421100000800115" + cCustRefNo);
                                newList.Add("1Y1100002200090" + "MFG");
                                newList.Add("421100002700115" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150135" + "LOT");
                                newList.Add("421100000800155" + cCustOrderLot);
                                newList.Add("1Y1100002200130" + "EXP");
                                newList.Add("421100002700155" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("411100000150178" + "INTERNAL PRODUCT ID:" + cDistCountry);
                                newList.Add("401100000150260" + cReadable);
                                newList.Add("4e1107000150250" + "C&G" + cGs1);
                                newList.Add("411100000150290" + "CTN#: " + cCtn);
                                newList.Add("411100001800290" + "MFG REF: " + cLot);

                                break;
                            #endregion
                            #region Outer label 238, LAB-OC-ANSL-0011
                            case "LAB-OC-ANSL-0011":
                            case "238":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + dMfg.ToString("yyMM") + "LJ" + "&G" + "92" + cDistCountry;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + dMfg.ToString("yyMM") + "LJ" + "(92)" + cDistCountry;

                                newList.Add("4e1107001200360" + "C&G" + cGs1);
                                newList.Add("401100001400370" + cReadable);
                                newList.Add("401100000400390" + "CTN#: " + cCtn);
                                newList.Add("401100004700390" + "REF: " + cLot);
                                newList.Add("D11");
                                newList.Add("440000004000075" + dMfg.ToString("yyMM") + "LJ");
                                newList.Add("440000004000105" + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                                newList.Add("440000004400148" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("440000004400180" + dMfg.ToString(outerLabelSetDateFormat));

                                break;
                            #endregion
                            #region Outer label 237
                            case "237":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("410005000200025" + cPo);
                                newList.Add("410005001900025" + "CTN: " + cCtn);
                                newList.Add("400005001900035" + cLot);
                                newList.Add("422300002180100" + PadCenter(cCustSize, 3));
                                newList.Add("1Y1100000150030" + "MFG");
                                newList.Add("421100000700060" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150065" + "EXP");
                                newList.Add("421100000700090" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150100" + "LOT");
                                newList.Add("421105000700120" + cCustOrderLot);
                                newList.Add("4e1106000150185" + "C&G" + cGs1);
                                newList.Add("400000000150195" + cReadable);

                                break;
                            #endregion
                            #region Outer label 233, LAB-OC-CMTS-0003
                            case "LAB-OC-CMTS-0003":
                            case "233":

                                newList.Add("191100000800015" + cPo);
                                newList.Add("191000000600015" + "Ctn.: " + cCtn);
                                newList.Add("191000000400015" + "Mfg.: " + dMfg.ToString("MMM-yyyy"));
                                newList.Add("191000000200015" + "Exp.: " + dExp.ToString("MMM-yyyy"));
                                newList.Add("191000000600140" + "Lot No.");
                                newList.Add("1E3102500200140" + "C&G" + cCustOrderLot);
                                newList.Add("101100000080015" + "Size: " + cCustSize + "   " + cLot);

                                break;
                            #endregion
                            #region Outer label 235, LAB-OC-HNCE-0001
                            case "LAB-OC-HNCE-0001":
                            case "235":

                                newList.Add("191000000700040" + "Lot: " + cCustOrderLot);
                                newList.Add("191000000500040" + "Mfg Date: " + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("191000000300040" + "PO NO.: " + cPo);
                                newList.Add("101100000200040" + "CTN. NO.: " + cCtn + "   " + cLot);

                                break;
                            #endregion
                            #region Outer label 236, LAB-OC-SFMH-0002
                            case "LAB-OC-SFMH-0002":
                            case "236":

                                newList.Add("121005004000020" + cPo);
                                newList.Add("122305003160020" + cCustOrderLot);
                                newList.Add("122205002430020" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("122205001720020" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("122205001010020" + nGross.ToString("0.00 Kg"));
                                newList.Add("122205000260020" + nNett.ToString("0.00 Kg"));
                                newList.Add("420005001120388" + cLot);
                                newList.Add("121005000250300" + cCtn);

                                break;
                            #endregion
                            #region Outer label 234, LAB-OC-ANSL-0010
                            case "LAB-OC-ANSL-0010":
                            case "234":

                                switch (cHartaSize.Trim()) //to add fixed condition of EMEA item ("2") and size indicator ("0-5") - Replace FG item code
                                {
                                    case "XS":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "20" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                    case "S":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "21" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                    case "M":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "22" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                    case "L":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "23" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                    case "XL":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "24" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                    case "XXL":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "25" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                }

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "&G" + "92" + cDistCountry;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cDistCountry;

                                newList.Add("491100100150035" + "MICRO-TOUCH" + Chr(169) + " MICRO-THIN WHITE NITRILE");
                                newList.Add("491100100150055" + "GLOVES - EMEA");
                                newList.Add("491100000150095" + "OUTER CARTON OF 2000");  //Fixed qty
                                newList.Add("491100000150120" + "SIZE:");
                                newList.Add("491100000700120" + cCustSize);
                                newList.Add("491100000150145" + "REF:");
                                newList.Add("491100000700145" + cCustRefNo);
                                newList.Add("491100000150170" + "INT:");
                                newList.Add("491100000700170" + cDistCountry);
                                newList.Add("490000102380095" + "LOT");
                                newList.Add("1X1100002330075" + "B020040002002");
                                newList.Add("490000102880095" + cCustOrderLot);
                                newList.Add("491100002880120" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491100002880145" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("401100000150260" + cReadable);
                                newList.Add("4e1107000150250" + "C&G" + cGs1);
                                newList.Add("401100000150290" + "PO: " + cOrderNum + "    CTN#: " + cCtn + "    MFG REF: " + cLot);
                                newList.Add("D11");
                                newList.Add("1Y1200002370103" + "MFG");
                                newList.Add("1Y1200002450129" + "EXP");
                                break;
                            #endregion
                            #region Outer Label 232
                            case "232":

                                cGs1 = "01" + cOuterGtn14_Code + "10" + cCustOrderLot; // Outer Product Code + Customer Lot
                                cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cCustOrderLot; // Outer Product Code + Customer Lot 

                                newList.Add("410005000200040" + cPo); // Customer PO Number
                                newList.Add("411200000200070" + "Ctn. No.");
                                newList.Add("421100001000070" + cCtn); // Carton Number
                                newList.Add("422300001900070" + PadCenter(cCustSize, 5)); // Printing Size
                                newList.Add("1Y1100000150086" + "LOT");
                                newList.Add("421105001000105" + cCustOrderLot);//Customer Lot
                                newList.Add("410005000150130" + "GS1 code:");
                                newList.Add("4e1103000150165" + "C&G" + cGs1); // Outer Product Code + Customer Lot
                                newList.Add("400000000150175" + cReadable); // Outer Product Code + Customer Lot

                                break;
                            #endregion
                            #region Outer Label 231
                            case "231":

                                String[] cMonth = { "JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ" };
                                dExp = dMfg.AddMonths(nExpMonth);

                                cGs1 = "01" + cOuterGtn14_Code + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cCustOrderLot;

                                newList.Add("422200000150057" + PadCenter(cCustSize, 11));
                                newList.Add("490000000150090" + "Caixa No /");
                                newList.Add("491100000150110" + "Carton No :");
                                newList.Add("491100002000110" + cCtn);
                                newList.Add("491100000150140" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                                newList.Add("491100000150160" + "Manufacturing Date:");
                                newList.Add("491100000800180" + cMonth[Convert.ToInt32(dMfg.ToString("MM")) - 1] + "/" + dMfg.ToString("yyyy"));
                                newList.Add("491100000150210" + "Validade/Expiry Date:");
                                newList.Add("491100000800230" + cMonth[Convert.ToInt32(dExp.ToString("MM")) - 1] + "/" + dExp.ToString("yyyy"));
                                newList.Add("491100000150260" + "Lote:");
                                newList.Add("491100000800260" + cCustOrderLot);
                                newList.Add("401100000150275" + cPo + "  " + cLot);
                                newList.Add("4e2105000150340" + "C&G" + cGs1);
                                newList.Add("400000000150350" + cReadable.ToString());

                                break;
                            #endregion
                            #region Outer Label 230
                            case "230":

                                String[] bMonth = { "JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ" };
                                dExp = dMfg.AddMonths(nExpMonth);

                                cGs1 = "01" + cOuterGtn14_Code + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cCustOrderLot;

                                newList.Add("422200000150057" + PadCenter(cCustSize, 11));
                                newList.Add("490000000150090" + "Caixa No /");
                                newList.Add("491100000150110" + "Carton No :");
                                newList.Add("491100002000110" + cCtn);
                                newList.Add("491100000150140" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                                newList.Add("491100000150160" + "Manufacturing Date:");
                                newList.Add("491100000800180" + cCustOrderLot + "-" + bMonth[Convert.ToInt32(dMfg.ToString("MM")) - 1] + "/" + dMfg.ToString("yyyy"));
                                newList.Add("491100000150210" + "Validade/Expiry Date:");
                                newList.Add("491100000800230" + cCustOrderLot + "-" + bMonth[Convert.ToInt32(dExp.ToString("MM")) - 1] + "/" + dExp.ToString("yyyy"));
                                newList.Add("491100000150260" + "Lote:");
                                newList.Add("491100000800260" + cCustOrderLot);
                                newList.Add("401100000150275" + cPo + "  " + cLot);
                                newList.Add("4e2105000150340" + "C&G" + cGs1);
                                newList.Add("400000000150350" + cReadable.ToString());

                                break;
                            #endregion
                            #region Outer Label 228
                            case "228":

                                switch (cHartaSize.Trim()) //to add fixed condition of EMEA item ("2") and size indicator ("0-5") - Replace FG item code
                                {
                                    case "XS":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "20" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                    case "S":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "21" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                    case "M":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "22" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                    case "L":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "23" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                    case "XL":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "24" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                    case "XXL":
                                        cCustOrderLot = dMfg.ToString("yyMM") + "25" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                        break;
                                }

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "&G" + "92" + cDistCountry;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cDistCountry;

                                newList.Add("491100100150035" + "MICRO-TOUCH" + Chr(169) + " MICRO-THIN WHITE NITRILE");
                                newList.Add("491100100150055" + "GLOVES - EMEA");
                                newList.Add("491100000150095" + "OUTER CARTON OF 2000");  //Fixed qty
                                newList.Add("491100000150120" + "SIZE:");
                                newList.Add("491100000700120" + cCustSize);
                                newList.Add("491100000150145" + "REF:");
                                newList.Add("491100000700145" + cCustRefNo);
                                newList.Add("491100000150170" + "INT:");
                                newList.Add("491100000700170" + cDistCountry);
                                newList.Add("490000102380095" + "LOT");
                                newList.Add("1X1100002330075" + "B020040002002");
                                newList.Add("490000102880095" + cCustOrderLot);
                                newList.Add("491100002880120" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491100002880145" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("401100000150260" + cReadable);
                                newList.Add("4e1107000150250" + "C&G" + cGs1);
                                newList.Add("401100000150290" + "PO: " + cOrderNum + "    CTN#: " + cCtn + "    MFG REF: " + cLot);
                                newList.Add("D11");
                                newList.Add("1Y1200002370103" + "MFG");
                                newList.Add("1Y1200002450129" + "EXP");

                                break;
                            #endregion
                            #region Outer Label 229
                            case "229":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //This is for BB Code
                                                                                                               //cCustOrderLot = "AN" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //This is for NGC Code

                                newList.Add("D11");
                                newList.Add("421100000150020" + "Date of Manufacture/");
                                newList.Add("421100000150030" + "Date de Fabrication:");
                                newList.Add("421100000150053" + "Exp. Date:");
                                newList.Add("421100000150075" + "Gross Weight/");
                                newList.Add("421100000150085" + "Poids brut:");
                                newList.Add("421100000150125" + "Net Weight/");
                                newList.Add("421100000150135" + "Poids net:");
                                newList.Add("421100000150185" + "Case #/Caisse #:"); // change from 'Caisse no.' into 'Caisse #'
                                newList.Add("D22");
                                newList.Add("421100001350030" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("421100001350057" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("421100001350085" + nGross.ToString("0.0 Kg"));
                                newList.Add("1Y1100000150090" + "LOT");
                                newList.Add("421100001350110" + cCustOrderLot);
                                newList.Add("421100001350135" + nNett.ToString("0.0 Kg"));
                                newList.Add("411100000150158" + "P.O.:");
                                newList.Add("421100001350160" + cPo);
                                newList.Add("421100001350190" + cCtn);
                                newList.Add("401105002100190" + cLot);

                                break;
                            #endregion
                            #region Outer Label 223
                            case "223":
                                newList.Add("490000200200040" + "Ref. : " + cBrand);
                                newList.Add("490000100200055" + "Description:");
                                newList.Add("490000200200115" + "Size : " + cCustSize);
                                newList.Add("490000100200135" + "QUANTITY : " + cProdRefNo + " pcs");
                                newList.Add("490000100200155" + "CARTON N" + Chr(167) + ": " + cCtn);
                                newList.Add("490000100200175" + "P.O. NUMBER: " + cPo);
                                newList.Add("490000100200195" + "Measures: " + cInnerGtn14_Code);
                                newList.Add("490000100200215" + "Gross weight: " + nGross.ToString("0.00 Kgs"));
                                newList.Add("490000100200235" + "Net weight: " + nNett.ToString("0.00 Kgs"));
                                newList.Add("4e1105000400295" + cOuterGtn14_Code);
                                newList.Add("401100000950305" + cOuterGtn14_Code);
                                newList.Add("4e1105000800365" + cPo.Substring(8) + dMfg.ToString("yy").Substring(1, 1) + "/" + cCustOrderLot);
                                newList.Add("401100001200375" + cPo.Substring(8) + dMfg.ToString("yy").Substring(1, 1) + "/" + cCustOrderLot);
                                newList.Add("111100002700280" + cLot);
                                newList.Add("D11");
                                newList.Add("490000200200070" + "GUANTES DESECHABLES DE NITRILO");
                                newList.Add("490000200200083" + "SIN POLVO, " + cDistCountry);

                                break;
                            #endregion
                            #region Outer Label 224
                            case "224":
                                cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                                newList.Add("211100003690076" + cLot.Substring(0, 9));  //Check substr;
                                newList.Add("211100002190076" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("211100001020076" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100003690063" + cReadable);   //Readable barcode - check paramater
                                newList.Add("2e1105003690011" + "C&G" + cGs1);     //GS1 barcode - check paramater
                                newList.Add("201100000400010" + cCtn);     //GS1 barcode - check paramater
                                break;
                            #endregion
                            #region Outer Label 222
                            case "222":

                                newList.Add("491100200200063" + "FBA");
                                newList.Add("1X1100000150060" + "l00050350");
                                newList.Add("1X1100000150133" + "l00090350");
                                newList.Add("3z2200003600320" + "F2002000" + cOuterGtn14_Code + cCtn);
                                newList.Add("4e1111000250260" + cOuterGtn14_Code + cCtn);
                                newList.Add("400000000900270" + cOuterGtn14_Code + cCtn);
                                newList.Add("1X1100000150280" + "l00050260");
                                newList.Add("D11");
                                newList.Add("420000001000030" + "PLEASE LEAVE THIS LABEL UNCOVERED");
                                newList.Add("491100200200080" + "SHIP FROM:");
                                newList.Add("491100200200090" + "Port of Los Angeles");
                                newList.Add("491100200200100" + "425 S. Palos Verdes St.");
                                newList.Add("491100200200110" + "San Pedro, CA 90731");
                                newList.Add("491100200200120" + "United States");
                                newList.Add("491100201800080" + "SHIP TO:");
                                newList.Add("491100201800090" + "FBA: Glovmart");
                                newList.Add("491100201800100" + "Amazon.com Services, Inc.");
                                newList.Add("491100201800110" + "24300 Nandina Ave");
                                newList.Add("491100201800120" + "Moreno Valley, CA 92551-9534");
                                newList.Add("491100201800130" + "United States");
                                newList.Add("491100202150300" + "Single SKU");
                                newList.Add("491100301750315" + cProdRefNo);
                                newList.Add("491100302350327" + "Qty 5");
                                newList.Add("491100200250317" + cOrderNum + "     " + cCustSize);
                                newList.Add("491100200250327" + "CTN:" + cCtn + "    " + cLot);

                                break;
                            #endregion
                            #region Outer Label 221
                            case "221":

                                String[] aYear = { "J", "A", "B", "C", "D", "E", "F", "G", "H", "I" };
                                cCustRefNo = cProdRefNo + aYear[Convert.ToInt32(Right(dMfg.ToString("yy"), 1))] + dMfg.ToString("MM") + "-" + cCustOrderLot;

                                newList.Add("191000000650020" + "Lot No.");
                                newList.Add("191000000650100" + cCustRefNo);
                                newList.Add("1Y1100000250020" + "MFG_H");
                                newList.Add("191000000350100" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("101100000150100" + cCtn + "   " + cLot);
                                break;

                            #endregion
                            #region Outer Label 220
                            case "220":

                                String[] aYear1 = { "J", "A", "B", "C", "D", "E", "F", "G", "H", "I" };
                                cCustRefNo = cProdRefNo + aYear1[Convert.ToInt32(Right(dMfg.ToString("yy"), 1))] + dMfg.ToString("MM") + "-" + cCustOrderLot;

                                newList.Add("191000000500020" + "Lot No.");
                                newList.Add("191000000500100" + cCustRefNo);
                                newList.Add("101100000300100" + cCtn + "   " + cLot);
                                break;
                            #endregion
                            #region Outer Label 219
                            case "219":

                                String[] aMonth = { "A", "B", "C", "D", "E", "H", "J", "K", "L", "N", "P", "S" };
                                cCustRefNo = cDistCountry + dMfg.ToString("yy") + aMonth[Convert.ToInt32(dMfg.ToString("MM")) - 1] + cCustOrderLot;

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                                cReadable = "(01)" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                                newList.Add("421100000300030" + "Lot No.  :");
                                newList.Add("421100001700030" + cCustRefNo);
                                newList.Add("421100000300060" + "Use By   :");
                                newList.Add("421100001700060" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("421100000300090" + "Case No. :");
                                newList.Add("421100001700090" + Right(cCtn, 4));
                                newList.Add("421100000300120" + cCustSize);
                                newList.Add("1Y1100001700100" + "REF");
                                newList.Add("421100002200120" + cProdRefNo);
                                newList.Add("110000003700020" + cLot);
                                newList.Add("4e1109000350220" + "C&G" + cGs1);
                                newList.Add("400000000500230" + cReadable);

                                break;
                            #endregion
                            #region Outer Label 218
                            case "218":

                                cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 6).Substring(0, 3) + cProdRefNo;

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot;

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200055" + "Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060" + "EXP");
                                newList.Add("421100001000085" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150100" + "LOT");
                                newList.Add("421105001000115" + cCustOrderLot);
                                newList.Add("410005000150140" + "GS1 code:");
                                newList.Add("4e1103000150180" + "C&G" + cGs1);
                                newList.Add("400000000150190" + cReadable);

                                objOuterLabelDTO.barcodeToValidate = dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot;
                                objOuterLabelDTO.countToValidate = cGs1.Length;

                                break;
                            #endregion
                            #region Outer Label 217
                            case "217":

                                newList.Add("410005000200035" + cPo);
                                newList.Add("411200000200065" + "Ctn.:");
                                newList.Add("421100000750065" + cCtn);
                                newList.Add("462200002050145" + cCustSize);
                                newList.Add("1Y1100000150072" + "MFG");
                                newList.Add("421100000750102" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150109" + "EXP");
                                newList.Add("421100000750135" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150147" + "LOT");
                                newList.Add("4d3103000750174" + cLot);
                                newList.Add("410005000750189" + cLot);
                                break;
                            #endregion
                            #region Outer Label 216
                            case "216":

                                cCustOrderLot = cPo.Substring(2, 3) + cProdRefNo;
                                newList.Add("D11");
                                newList.Add("491100100150061" + "Lot Number");
                                newList.Add("491100100150109" + "Date of");
                                newList.Add("491100100150116" + "Manufacture");
                                newList.Add("491100100150160" + "Date of");
                                newList.Add("491100100150167" + "Expiry");
                                newList.Add("D22");
                                newList.Add("410005000150025" + cPo);
                                newList.Add("1Y1100000150030" + "LOT");
                                newList.Add("421100000650051" + cCustOrderLot);
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150068" + "MFG");
                                newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150120" + "EXP");
                                newList.Add("421100000650147" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("411200000150193" + "Case.");
                                newList.Add("421100000650191" + cCtn);
                                newList.Add("410005001850188" + cLot);

                                break;
                            #endregion
                            #region Outer Label 215
                            case "215":

                                cGs1 = "02" + cOuterGtn14_Code + "10" + cCustOrderLot + "17" + dExp.ToString("yyMMdd") + "37" + cProdRefNo;
                                cReadable = "(02)" + cOuterGtn14_Code + "(10)" + cCustOrderLot + "(17)" + dExp.ToString("yyMMdd") + "(37)" + cProdRefNo;

                                newList.Add("1Y1100000200020" + "LOT");
                                newList.Add("1Y1100000200050" + "MFG");
                                newList.Add("1Y1100001850050" + "EXP");
                                newList.Add("491100100700040" + cCustOrderLot);
                                newList.Add("491100100700080" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491100102300080" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("4e1105000200150" + "C&G" + cGs1);
                                newList.Add("400000000200160" + cReadable);
                                newList.Add("4e1105000200230" + "C&G" + cOuterGtn14_Code);
                                newList.Add("400000000200240" + cOuterGtn14_Code);
                                newList.Add("411100000200280" + "CTN: " + cCtn + "   " + cLot + "   " + cCustSize);

                                break;
                            #endregion
                            #region Outer Label 214
                            case "214":

                                newList.Add("H15");
                                newList.Add("401100000150040" + "RDNMD-METAL DETECTABLE NITRILE");
                                newList.Add("D22");
                                newList.Add("421100002500050" + "RDNMD");
                                newList.Add("491100000150075" + "SIZE");
                                newList.Add("491100001200075" + cCustSize);
                                newList.Add("491100002500075" + "PO NO.: " + cPo);
                                newList.Add("4e1105002500135" + "C&G" + cDistCountry);
                                newList.Add("400000002650145" + cDistCountry);
                                newList.Add("491100000150100" + "MFG DATE");
                                newList.Add("491100001200100" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491100000150125" + "EXP DATE");
                                newList.Add("491100001200125" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("491100000150150" + "LOT");
                                newList.Add("491100001200150" + cLot);
                                newList.Add("491100000150175" + "QTY");
                                newList.Add("491100001200175" + "(10 inner x " + cProdRefNo + " pcs) by weight");
                                newList.Add("491100000150280" + "CTN. NO.");
                                newList.Add("491100001200280" + cCtn);
                                newList.Add("4e1105001200235" + "C&G" + "01" + cOuterGtn14_Code);
                                newList.Add("400000001350245" + "(01)" + cOuterGtn14_Code);
                                newList.Add("491100001050075" + ":");
                                newList.Add("491100001050100" + ":");
                                newList.Add("491100001050125" + ":");
                                newList.Add("491100001050150" + ":");
                                newList.Add("491100001050175" + ":");
                                newList.Add("491100001050280" + ":");
                                newList.Add("Q0002");

                                break;
                            #endregion
                            #region Outer Label 213
                            case "213":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                                newList.Add("D11");
                                newList.Add("421100000150050" + "Gross Weight/Poids");
                                newList.Add("421100000150060" + "brut/Peso bruto:");
                                newList.Add("421100000150078" + "Net Weight/Poids");
                                newList.Add("421100000150088" + "net/Peso neto:");
                                newList.Add("421100000150187" + "Case #/N de caisse:");
                                newList.Add("491100100150155" + "Date of Manufacture");
                                newList.Add("491100100150163" + "Date de Fabrication");
                                newList.Add("491100100150171" + "Fecha de Fabricaci" + Chr(162) + "n");
                                newList.Add("491100100620187" + Chr(167));
                                newList.Add("D22");
                                newList.Add("1Y1100000150015" + "LOT");
                                newList.Add("421100001350035" + cCustOrderLot);
                                newList.Add("421100001350060" + nGross.ToString("0.0 Kgs"));
                                newList.Add("421100001350085" + nNett.ToString("0.0 Kgs"));
                                newList.Add("411100000150108" + "P.O.:" + Chr(224));
                                newList.Add("421100001350110" + cPo);
                                newList.Add("1Y1100000150113" + "MFG");
                                newList.Add("421100001350150" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("421100001350190" + cCtn);
                                newList.Add("401105002200190" + cLot);

                                break;
                            #endregion
                            #region Outer Label 212
                            case "212":

                                newList.Add("410005000150025" + cPo);
                                newList.Add("1Y1100000150040" + "LOT_T_V");
                                newList.Add("421100001000062" + cCustOrderLot);
                                newList.Add("422300002300138" + cCustSize);
                                newList.Add("1Y1100000150080" + "MFG_T_V");
                                newList.Add("421100001000110" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("411200000150173" + "Case.");
                                newList.Add("421100001000170" + cCtn);
                                newList.Add("410005001850188" + cLot);

                                break;
                            #endregion
                            #region Outer Label 211
                            case "211":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyyyMM") + "10" + cPo;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyyyMM") + "(10)" + cPo;

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200055Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060EXP");
                                newList.Add("421100001000085" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150100LOT");
                                newList.Add("421105001000115" + cLot);
                                newList.Add("410005000150140" + "GS1 code:");
                                newList.Add("4e1103000150180C&G" + cGs1);
                                newList.Add("400000000150190" + cReadable);

                                break;
                            #endregion
                            #region Outer Label 210
                            case "210":
                                cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                                newList.Add("211100003690145" + cLot.Substring(0, 9));  //Check substr;
                                newList.Add("211100002190145" + dMfg.ToString("yyyy-MM"));
                                newList.Add("211100001020145" + dExp.ToString("yyyy-MM"));
                                newList.Add("211100003690128" + cCtn);
                                newList.Add("201100003690113" + cReadable);   //Readable barcode - check paramater
                                newList.Add("2e1105003690061" + "C&G" + cGs1);     //GS1 barcode - check paramater
                                newList.Add("Q0002");
                                break;
                            #endregion
                            #region Outer Label 209
                            case "209":

                                switch (cCustSize.Trim())
                                {
                                    case "XS":
                                        cCustRefNo = "N30";
                                        break;
                                    case "S":
                                        cCustRefNo = "N31";
                                        break;
                                    case "M":
                                        cCustRefNo = "N32";
                                        break;
                                    case "L":
                                        cCustRefNo = "N33";
                                        break;
                                    case "XL":
                                        cCustRefNo = "N34";
                                        break;
                                }

                                cCustOrderLot = dMfg.ToString("yyMM") + "GA" + cCustRefNo + cCustOrderLot;


                                newList.Add("421100000150030" + "LOT NO:");
                                newList.Add("421100001050030" + cCustOrderLot);
                                newList.Add("1Y1100000200040" + "MFG");
                                newList.Add("421100001050065" + dMfg.ToString("yyyy") + "-" + dMfg.ToString("MM") + "-" + dMfg.ToString("dd"));
                                newList.Add("431100002200070" + PadCenter(cCustSize, 5));
                                newList.Add("411100001050090" + cCtn);
                                newList.Add("411100001700090" + cLot);
                                break;

                            #endregion
                            #region Outer Label 208
                            case "208":

                                cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "10" + cPo;
                                cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(10)" + cPo;

                                newList.Add("410005000150030" + cPo);
                                newList.Add("411200000150055" + "Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000100060" + "MFG");
                                newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100100" + "LOT");
                                newList.Add("421105001000120" + cPo);
                                newList.Add("4e1105000100180" + "C&G" + cGs1);
                                newList.Add("400000000100190" + cReadable);
                                break;
                            #endregion
                            #region Outer Label 207
                            case "207":

                                cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 6).Replace("/", "") + "1";

                                newList.Add("410005000200020" + cPo);
                                newList.Add("1Y1100000150030" + "LOT");
                                newList.Add("421100000700051" + cCustOrderLot);
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070" + "MFG");
                                newList.Add("421100000700095" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150115" + "EXP");
                                newList.Add("421100000700141" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("411200000150183" + "Case.");
                                newList.Add("421100000700179" + cCtn);
                                newList.Add("410005001850188" + cLot);

                                break;
                            #endregion
                            #region Outer Label 206
                            case "206":

                                newList.Add("411200000200060" + "LOT NO.");
                                newList.Add("4e1106001050080" + "C&G" + Right(cPo, 5));
                                newList.Add("410005001050095" + Right(cPo, 5));
                                newList.Add("411200000200120" + "CTN. NO.");
                                newList.Add("421100001050120" + cCtn);
                                newList.Add("411200000200150" + "MFG.");
                                newList.Add("421100001050148" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("411100000200173" + "MFG. REF.");
                                newList.Add("411100001050173" + cLot);
                                newList.Add("422200001300190" + PadCenter(cCustSize, 11));
                                break;
                            #endregion
                            #region Outer Label 202
                            case "202": //Ansell/Microflex

                                cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                newList.Add("411200000200040" + "PO No.");
                                newList.Add("421100001150038" + cPo);
                                newList.Add("411200000200070" + "Ctn.No.");
                                newList.Add("421100001150068" + cCtn);
                                newList.Add("411200000200099" + "Mfg. Date.");
                                newList.Add("421100001150097" + dMfg.ToString("yyyy-MM"));
                                newList.Add("411200000200130" + "Exp. Date.");
                                newList.Add("421100001150128" + dExp.ToString("yyyy-MM"));
                                newList.Add("422300001850125" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200160" + "Lot No.");
                                newList.Add("421100001150158" + dMfg.ToString("yyMM") + "LJ");
                                newList.Add("411200000200187" + "Batch");
                                newList.Add("421100001150185" + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                                newList.Add("100000002800115" + cLot);
                                break;
                            #endregion
                            #region Outer Label 201
                            case "201"://OBP

                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150132" + "PO No.");
                                newList.Add("421100001100130" + cPo);
                                newList.Add("411200000150162" + "Mfg. Date");
                                newList.Add("421100001100160" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150192" + "Exp. Date");
                                newList.Add("421100001100190" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150222" + "Ctn. No.");
                                newList.Add("421100001100220" + cCtn);
                                newList.Add("411200000150252" + "Gross Wt.");
                                newList.Add("421100001100250" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150282" + "Net Wt.");
                                newList.Add("421100001100280" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150310" + "Lot No.");
                                newList.Add("421100001100308" + cLot);
                                newList.Add("421100000500343" + cHartaSize);
                                newList.Add("4e3105001100374" + cCustOrderLot);
                                newList.Add("401105001100384" + cCustOrderLot);
                                break;
                            #endregion
                            #region Outer Label 203
                            case "203":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4);
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4);
                                newList.Add("2e1109009850105C&G" + cGs1);
                                newList.Add("201100009850090" + cReadable);
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400007000125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100007000125" + PadCenter(cCustSize, 5));

                                newList.Add("D11");
                                newList.Add("2e4102007050095" + cLot + cCtn);
                                newList.Add("210005006900085" + cLot + cCtn);
                                newList.Add("D22");

                                newList.Add("2X1110005350080L001500");
                                newList.Add("201100010350070Gross Wt");
                                newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100009050070Exp Date");
                                newList.Add("221100008350054" + dExp.ToString("MMM-yyyy"));
                                newList.Add("201100007200070PO No");
                                newList.Add("291100006700054" + cPo);

                                newList.Add("2X1110005350050L001500");
                                newList.Add("201100010350040Nett Wt");
                                newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100009050040Reorder No");
                                newList.Add("221100008350024" + cProdRefNo);
                                newList.Add("201100007200040Ctn No");
                                newList.Add("221100006700024" + cCtn);

                                newList.Add("2X1110005250010L200001");
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400004500125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100004500125" + PadCenter(cCustSize, 5));

                                newList.Add("2e1109002750105C&G" + cGs1);
                                newList.Add("201100002750090" + cReadable);

                                newList.Add("D11");
                                newList.Add("2e4102004550095" + cLot + cCtn);
                                newList.Add("210005004400085" + cLot + cCtn);
                                newList.Add("D22");

                                newList.Add("2X1110000100080L001500");
                                newList.Add("201100005100070Gross Wt");
                                newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100003800070Exp Date");
                                newList.Add("221100003100054" + dExp.ToString("MMM-yyyy"));
                                newList.Add("201100001950070PO No");
                                newList.Add("291100001450054" + cPo);

                                newList.Add("2X1110000100050L001500");
                                newList.Add("201100005100040Nett Wt");
                                newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100003800040Reorder No");
                                newList.Add("221100003100024" + cProdRefNo);
                                newList.Add("201100001950040Ctn No");
                                newList.Add("221100001450024" + cCtn);
                                break;
                            #endregion
                            #region Outer Label 204
                            case "204":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075" + "Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150082" + "MFG");
                                newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150119" + "EXP");
                                newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150157" + "LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                newList.Add("D11");
                                newList.Add("4e4102001750070" + cLot + cCtn);
                                newList.Add("410005001900080" + cLot + cCtn);
                                newList.Add("D22");
                                break;
                            #endregion
                            #region Outer Label 200
                            case "200":
                                newList.Add("411200000200055" + "Lot No.");
                                newList.Add("421100001150055" + dMfg.ToString("yyMM") + "LJ");
                                newList.Add("411200000200085" + "Batch");
                                newList.Add("421100001150085" + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                                newList.Add("411200000200115" + "Mfg. Date.");
                                newList.Add("421100001150115" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("411200000200145" + "Case No");
                                newList.Add("421100001150143" + cCtn);
                                newList.Add("411100000200168" + "    Ref.");
                                newList.Add("411100001150168" + cPo);
                                newList.Add("400000001150181" + cLot);
                                newList.Add("422200001200185" + PadCenter(cCustSize, 11));
                                break;
                            #endregion
                            #region Outer Label 199
                            case "199":
                                cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                                newList.Add("211100003500067" + cLot.Substring(0, 9));  //Check substr;
                                newList.Add("211100001650067" + dExp.ToString("yyyy-MM"));
                                newList.Add("211100000650067" + cCtn);
                                newList.Add("201100003690050" + cReadable);   //Readable barcode - check paramater
                                newList.Add("2e1104003690010" + "C&G" + cGs1);     //GS1 barcode - check paramater
                                newList.Add("Q0002");
                                break;
                            #endregion
                            #region Outer Label 198
                            case "198":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //This is for BB Code

                                newList.Add("D11");
                                newList.Add("421100000150030" + "Date of Manufacture/");
                                newList.Add("421100000150040" + "Date de Fabrication:");
                                newList.Add("421100000150055" + "Gross Weight/");
                                newList.Add("421100000150065" + "Poids brut:");
                                newList.Add("421100000150105" + "Net Weight/");
                                newList.Add("421100000150115" + "Poids net:");
                                newList.Add("421100000150165" + "Case #/Caisse no.:");
                                newList.Add("D22");
                                newList.Add("421100001350040" + dMfg.ToString("MM-yyyy"));
                                newList.Add("421100001350065" + nGross.ToString("0.0 Kg"));
                                newList.Add("1Y1100000150070LOT");
                                newList.Add("421100001350090" + cCustOrderLot);
                                newList.Add("421100001350115" + nNett.ToString("0.0 Kg"));
                                newList.Add("411100000150138" + "P.O.:");
                                newList.Add("421100001350140" + cPo);
                                newList.Add("421100001350170" + cCtn);
                                newList.Add("401105002000190" + cLot);

                                break;
                            #endregion
                            #region Outer Label 193
                            case "193":

                                newList.Add("D10");
                                newList.Add("490000303100145" + "LOT #: " + dMfg.ToString("yyMM") + "LJ");
                                newList.Add("490000304300145" + "Batch: " + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                                newList.Add("490000303100165" + "Mfg Ref: " + cLot);
                                newList.Add("490000303100185" + "Expiration Date");
                                newList.Add("490000303100200" + "Date d'expiration:");
                                newList.Add("490000303100220" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("490000304300185" + "Manufacturing Date");
                                newList.Add("490000304300200" + "Date de fabrication:");
                                newList.Add("490000304300220" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("490000303100240" + "Ctn. No: " + cCtn);
                                newList.Add("D10");
                                //newList.Add("Q0002");
                                break;
                            #endregion
                            #region Outer Label 194
                            case "194":

                                newList.Add("410005000200023" + cPo);
                                newList.Add("422400002000090" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200080Ctn. No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("411200000200110Gross Wt.");
                                newList.Add("421100001100110" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200140Net Wt.");
                                newList.Add("421100001100140" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200170Lot No.");
                                newList.Add("4d3103001100175" + cLot);
                                newList.Add("400005001100187" + cLot);
                                break;
                            #endregion
                            #region Outer Label 195
                            case "195":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                                newList.Add("1Y1100000200025LOT");
                                newList.Add("421100001100045" + cCustOrderLot);
                                newList.Add("411200000200080Gross Wt.");
                                newList.Add("421100001100080" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200110Net Wt.");
                                newList.Add("421100001100110" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200140PO");
                                newList.Add("421100001100140" + cPo);
                                newList.Add("411200000200170Case No.");
                                newList.Add("421100001100170" + cCtn);
                                newList.Add("401105002000190" + cLot);
                                break;
                            #endregion
                            #region Outer Label 196
                            case "196":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                                newList.Add("1Y1100000200015LOT");
                                newList.Add("421100001100035" + cCustOrderLot);
                                newList.Add("411200000200065Gross Wt.");
                                newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200090Net Wt.");
                                newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200115PO.");
                                newList.Add("421100001100115" + cPo);
                                newList.Add("411200000200140Case No.");
                                newList.Add("421100001100140" + cCtn);
                                newList.Add("1Y1100000200145MFG");
                                newList.Add("421100001100170" + dMfg.ToString("MM-yyyy"));
                                newList.Add("401105002000190" + cLot);
                                break;
                            #endregion
                            #region Outer Label 197
                            case "197":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                                newList.Add("411100100150025Lot No.");
                                newList.Add("411100001400025" + cCustOrderLot);
                                newList.Add("411100000150045Gross Weight");
                                newList.Add("411100001400045" + nGross.ToString("0.0 Kgs"));
                                newList.Add("411100000150070Nett Weight");
                                newList.Add("411100001400070" + nNett.ToString("0.0 Kgs"));
                                newList.Add("411100000150095PO. No.");
                                newList.Add("411100001400095" + cPo);
                                newList.Add("411100000150120Ctn. No.");
                                newList.Add("411100001400120" + cCtn);
                                newList.Add("411100000150145Mfg. Date");
                                newList.Add("411100001400145" + dMfg.ToString("yyyy-MM"));
                                newList.Add("411100000150170Exp. Date");
                                newList.Add("411100001400170" + dExp.ToString("yyyy-MM"));
                                newList.Add("410000001800187" + cLot);
                                break;
                            #endregion
                            #region Outer Label 191
                            case "191":

                                newList.Add("121005004000020" + cPo);
                                newList.Add("122305003160020" + cCustOrderLot);
                                newList.Add("122205002430020" + dMfg.ToString("MM-yyyy"));
                                newList.Add("122205001720020" + dExp.ToString("MM-yyyy"));
                                newList.Add("122205001010020" + nGross.ToString("0.00 Kg"));
                                newList.Add("122205000260020" + nNett.ToString("0.00 Kg"));
                                newList.Add("420005001120388" + cLot);
                                newList.Add("121005000250300" + cCtn);
                                break;

                            #endregion
                            #region Outer Label 192
                            case "192":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("421100000300030" + "Lot No.  :");
                                newList.Add("421100001700030" + cCustOrderLot);
                                newList.Add("421100000300060" + "Use By   :");
                                newList.Add("421100001700060" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("421100000300090" + "Case No. :");
                                newList.Add("421100001700090" + Right(cCtn, 4));
                                newList.Add("421100000300120" + cCustSize);
                                newList.Add("1Y1100001700100" + "REF");
                                newList.Add("421100002200120" + cProdRefNo);
                                newList.Add("110000003700020" + cLot);
                                newList.Add("4e1109000350220" + "C&G" + cGs1);
                                newList.Add("400000000500230" + cReadable);
                                break;
                            #endregion
                            #region Outer Label 190
                            case "190":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "30" + cCustRefNo + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(30)" + cCustRefNo + "(10)" + cCustOrderLot;

                                newList.Add("410005000200025" + cPo);
                                newList.Add("410005002000025" + "CTN: " + cCtn);
                                newList.Add("422300002000090" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150030" + "MFG");
                                newList.Add("421100000700055" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("1Y1100000150065" + "EXP");
                                newList.Add("421100000700090" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("1Y1100000150100" + "LOT");
                                newList.Add("421105000700120" + cCustOrderLot);
                                newList.Add("4e1106000150185" + "C&G" + cGs1);
                                newList.Add("400000000080195" + cReadable);
                                break;
                            #endregion
                            #region Outer Label 189
                            case "189": //Microflex

                                cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                newList.Add("411200000200045PO No.");
                                newList.Add("421100001000045" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000107" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("422300001850140" + PadCenter(cCustSize, 5));
                                newList.Add("421100001000140" + dExp.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4e1103001000175C&G" + cGs1);
                                newList.Add("410005001000190" + cReadable);
                                newList.Add("100000002800115" + cLot);
                                break;
                            #endregion
                            #region Outer Label 187
                            case "187":
                                newList.Add("421100000400033" + "Gross Wt: " + nGross.ToString("0.0 Kg"));
                                newList.Add("421100000400058" + "Nett  Wt: " + nNett.ToString("0.0 Kg"));
                                newList.Add("411100000400078" + "PO No.: " + cPo);
                                newList.Add("411100000400093" + cLot);
                                newList.Add("411100001900093" + cCtn);
                                break;
                            #endregion
                            #region Outer Label 40
                            case "40":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("410005001800020" + cLot);
                                newList.Add("422400000100120" + PadCenter(cCustSize, 11));
                                newList.Add("411200000100200" + "Ctn. No.");
                                newList.Add("421100001100198" + cCtn);
                                newList.Add("421100001100245" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100001100300" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100220" + "LOGO");
                                newList.Add("420005001100348" + cPo);
                                break;
                            #endregion
                            #region Outer Label 186
                            case "186":
                                cGs1 = "010" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + cCustOrderLot;
                                cReadable = "(01)0" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + cCustOrderLot;
                                cPackDate = dMfg.ToString("MM/yyyy");

                                newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize); //Customer size
                                newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA"); //Product and packing size
                                newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS"); //Product and packing size
                                newList.Add("440000001950130" + Right(cOuterGtn14_Code, 6)); //SKU code
                                newList.Add("4d3104000150130" + cCustRefNo); //DUN14 barcode
                                newList.Add("400000000150140" + cCustRefNo); //DUN14 HMR text
                                newList.Add("4e1103002650180C" + cCustOrderLot); //Customer lot (YYMMDDLN) barcode
                                newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg")); //Gross weigh
                                newList.Add("410000002150195" + "LOTE: " + cCustOrderLot); //Customer lot (YYMMDDLN) HMR text
                                newList.Add("4X1110000150198" + "L002330"); //Draw Line
                                newList.Add("4X1110001950184" + "L030002"); //Draw Line
                                newList.Add("410000000150215" + "FAB.: " + cPackDate + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                                newList.Add("410000002150215" + "VAL.: " + dExp.ToString("MM-yyyy")); //Exp Date
                                newList.Add("4e1106000150280C&G" + cGs1); //GS1-128 barcode
                                newList.Add("400000000150290" + cReadable); //GS1-128 HMR text
                                newList.Add("300000003650270" + cOrderNum); // Work order number
                                newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize); //Hartalega internal lot, Carton number, Hartalega internal size
                                break;

                            #endregion

                            #region Outer Label 185
                            case "185":
                                cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200055Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060MFG");
                                newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150100LOT");
                                newList.Add("421105001000115" + cCustOrderLot);
                                newList.Add("4e1105000150180C&G" + cGs1);
                                newList.Add("400000000080190" + cReadable);
                                break;
                            #endregion

                            #region Outer Label 184
                            case "184":
                                newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                                newList.Add("111100000800240" + cCtn);
                                newList.Add("121100000550020" + "LOT NO.:");
                                newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                                newList.Add("141100000100020" + cLot);
                                //newList.Add("Q0002");
                                break;
                            #endregion

                            #region Label Set Optimzation - Custom Date

                            /* yiksiu Sep 2017 : Label Set Optimzation
                             *  138 --> 178
                             *   59 --> 179
                             *   65 --> 180
                             *  101 --> 181
                             *  108 --> 182
                             */

                            #region Outer Set 178 (138)
                            case "178":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075" + "Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000080" + cCustSize);
                                newList.Add("1Y1100000150114" + "EXP");
                                newList.Add("421100001000140" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150157" + "LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                break;
                            #endregion

                            #region Outer Set 179 (59)
                            case "179":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("422300001800080" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200080Ctn. No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("1Y1100000150100MFG");
                                newList.Add("421100001100125" + (dMfg.ToString(outerLabelSetDateFormat)));
                                newList.Add("1Y1100000150150LOT");
                                newList.Add("4d3103001100175" + cLot);
                                newList.Add("410005001100187" + cLot);
                                break;
                            #endregion

                            #region Outer Set 180 (65)
                            case "180":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000112" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("421100001000145" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                break;
                            #endregion

                            #region Outer Set 181 (101)
                            case "181":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100000650051" + cCustOrderLot); //Lot by Size
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100000650179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;
                            #endregion

                            #region Outer Set 182 (108)
                            case "182":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100000650051" + cCustOrderLot);
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("421100000650141" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100000650179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;
                            #endregion

                            #endregion

                            /* --------------------------------------- HSB Floor Upgrade Code Start  ---------------------------------------------------------- */
                            #region Outer Label 109
                            case "109": //CREMER POWDERED
                                cGs1 = "010" + cOuterGtn14_Code + "12" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                                cReadable = "(01)0" + cOuterGtn14_Code + "(12)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                                cPackDate = dMfg.ToString("dd/MM/yyyy");
                                cExpYear = (Convert.ToInt16((dExp - dMfg).TotalDays / 365)).ToString();

                                newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize);
                                newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA");
                                newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS");
                                newList.Add("440000001950130" + Right(cOuterGtn14_Code, 6));
                                newList.Add("4d3104000150130" + cProdRefNo);
                                newList.Add("400000000150140" + cProdRefNo);
                                newList.Add("4e1103002650180" + "C" + dMfg.ToString("yyMMdd") + Right(cPline, 2));
                                newList.Add("410000000150160" + "Data de embalagem");
                                newList.Add("410000000150175" + cPackDate);
                                newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg"));
                                newList.Add("410000002150195" + "LOTE: " + dMfg.ToString("yyMMdd") + Right(cPline, 2));
                                newList.Add("4X1110000150198" + "L002330");
                                newList.Add("4X1110001950184" + "L030002");
                                newList.Add("410000000150215" + "FAB.: " + dMfg.ToString("MM") + "/" + dMfg.ToString("yyyy") + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                                newList.Add("410000002150215" + "VAL.: " + cExpYear + " ANOS");
                                newList.Add("4e1106000150280" + "C&G" + cGs1);
                                newList.Add("400000000150290" + cReadable);
                                newList.Add("300000003650270" + cOrderNum);
                                newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize);
                                break;
                            #endregion

                            #region Outer Label 103
                            case "103":
                                cGs1 = "010" + cOuterGtn14_Code + "12" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                                cReadable = "(01)0" + cOuterGtn14_Code + "(12)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                                cPackDate = dMfg.ToString("dd/MM/yyyy");
                                cExpYear = (Convert.ToInt16((dExp - dMfg).TotalDays / 365)).ToString();

                                newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize);
                                newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA");
                                newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS");
                                newList.Add("440000001950130" + Right(cOuterGtn14_Code, 6));
                                newList.Add("4d3104000150130" + cProdRefNo);
                                newList.Add("400000000150140" + cProdRefNo);
                                newList.Add("4e1103002650180" + "C" + dMfg.ToString("yyMMdd") + Right(cPline, 2));
                                newList.Add("410000000150160" + "Data de embalagem");
                                newList.Add("410000000150175" + cPackDate);
                                newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg"));
                                newList.Add("410000002150195" + "LOTE: " + dMfg.ToString("yyMMdd") + Right(cPline, 2));
                                newList.Add("4X1110000150198" + "L002330");
                                newList.Add("4X1110001950184" + "L030002");
                                newList.Add("410000000150215" + "FAB.: " + dMfg.ToString("MM") + "/" + dMfg.ToString("yyyy") + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                                newList.Add("410000002150215" + "VAL.: " + cExpYear + " ANOS");
                                newList.Add("4e1106000150280" + "C&G" + cGs1);
                                newList.Add("400000000150290" + cReadable);
                                newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize);
                                break;
                            #endregion

                            #region Outer Label 102
                            case "102":
                                cGs1 = "010" + cOuterGtn14_Code + "12" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                                cReadable = "(01)0" + cOuterGtn14_Code + "(12)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                                cPackDate = dMfg.ToString("dd/MM/yyyy");
                                cExpYear = (Convert.ToInt16((dExp - dMfg).TotalDays / 365)).ToString();

                                newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize);  //Customer size
                                newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA"); //Product and packing size
                                newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS");   //Product and packing size
                                newList.Add("440000001950130" + Right(cOuterGtn14_Code, 6));          //SKU code
                                newList.Add("4d3104000150130" + cProdRefNo);             //DUN14 barcode
                                newList.Add("400000000150140" + cProdRefNo);                                    //DUN14 HMR text
                                newList.Add("4e1103002650180" + "C" + dMfg.ToString("yyMMdd") + Right(cPline, 2));        //Customer lot (YYMMDDLN) barcode
                                newList.Add("410000000150160" + "Data de embalagem");         //Packing date Description
                                newList.Add("410000000150175" + cPackDate);           //Packing date
                                newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg")); //Gross weigh  
                                newList.Add("410000002150195" + "LOTE: " + dMfg.ToString("yyMMdd") + Right(cPline, 2));   //Customer lot (YYMMDDLN) HMR text
                                newList.Add("4X1110000150198" + "L002330");  //Draw Line
                                newList.Add("4X1110001950184" + "L030002");    //Draw Line
                                newList.Add("410000000150215" + "FAB.: " + dMfg.ToString("MM") + "/" + dMfg.ToString("yyyy") + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                                newList.Add("410000002150215" + "VAL.: " + cExpYear + " ANOS");  //Number of expiry years
                                newList.Add("4e1106000150280" + "C&G" + cGs1);       //GS1-128 barcode
                                newList.Add("400000000150290" + cReadable);       //GS1-128 HMR text
                                newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize);  //Hartalega internal lot, Carton number, Hartalega internal size
                                break;
                            #endregion

                            #region Outer Label 25
                            case "25":
                                lettercount = 0;
                                cSubBrand2 = string.Empty;
                                separators[0] = " ";
                                words = cBrand.Split(separators, StringSplitOptions.RemoveEmptyEntries);
                                foreach (var word in words)
                                {
                                    lettercount += word.Length;
                                    if (lettercount >= 25)
                                    {
                                        cSubBrand2 = word;
                                    }
                                }

                                if (cSubBrand2 != string.Empty)
                                {
                                    newList.Add("421100000000035" + PadCenter(cBrand.Replace(cSubBrand2, "").Trim(), 25));
                                    newList.Add("421100000150065" + PadCenter(cSubBrand2.Trim(), 25));
                                    newList.Add("411200000150115" + "Size.");
                                    newList.Add("421200001100113" + cCustSize);
                                    newList.Add("411200000150145" + "PO No.");
                                    newList.Add("421100001100143" + cPo);
                                    newList.Add("411200000150175" + "Ctn. No.");
                                    newList.Add("421100001100173" + cCtn);
                                    newList.Add("411200000150205" + "Mfg. Date.");
                                    newList.Add("421100001100203" + dMfg.ToString("MMM-yyyy"));
                                    newList.Add("411200000150235" + "Exp. Date.");
                                    newList.Add("421100001100233" + dExp.ToString("MMM-yyyy"));
                                    newList.Add("411200000150265" + "Gross Wt.");
                                    newList.Add("421100001100263" + nGross.ToString("0.0 Kg"));
                                    newList.Add("411200000150295" + "Net Wt.");
                                    newList.Add("421100001100293" + nNett.ToString("0.0 Kg"));
                                    newList.Add("411200000150325" + "Dist. By.");
                                    newList.Add("421100001100323" + cDistBy);//Distributtion reference
                                    newList.Add("411200000150355" + "Lot No.");
                                    newList.Add("421100002500353" + cHartaSize);
                                    newList.Add("4d3102501100364" + cLot);
                                    newList.Add("401105001100374" + cLot);
                                }
                                else
                                {
                                    newList.Add("421100000150065" + PadCenter(cBrand, 25));
                                    newList.Add("411200000150115" + "Size.");
                                    newList.Add("421200001100113" + cCustSize);
                                    newList.Add("411200000150145" + "PO No.");
                                    newList.Add("421100001100143" + cPo);
                                    newList.Add("411200000150175" + "Ctn. No.");
                                    newList.Add("421100001100173" + cCtn);
                                    newList.Add("411200000150205" + "Mfg. Date.");
                                    newList.Add("421100001100203" + dMfg.ToString("MMM-yyyy"));
                                    newList.Add("411200000150235" + "Exp. Date.");
                                    newList.Add("421100001100233" + dExp.ToString("MMM-yyyy"));
                                    newList.Add("411200000150265" + "Gross Wt.");
                                    newList.Add("421100001100263" + nGross.ToString("0.0 Kg"));
                                    newList.Add("411200000150295" + "Net Wt.");
                                    newList.Add("421100001100293" + nNett.ToString("0.0 Kg"));
                                    newList.Add("411200000150325" + "Dist. By.");
                                    newList.Add("421100001100323" + cDistBy);
                                    newList.Add("411200000150355" + "Lot No.");
                                    newList.Add("421100002500353" + cHartaSize);
                                    newList.Add("4d3102501100364" + cLot);
                                    newList.Add("401105001100374" + cLot);
                                }
                                break;
                            #endregion

                            #region Outer Label 176
                            case "176":
                                newList.Add("421100000400050" + "Gross Wt: " + nGross.ToString("0.0 Kg"));
                                newList.Add("421100000400075" + "Nett  Wt: " + nNett.ToString("0.0 Kg"));
                                newList.Add("411100000400100" + cLot);
                                newList.Add("411100001900100" + cCtn);
                                break;
                            #endregion

                            #region Outer Label 50
                            case "50":
                                newList.Add("191100000800015" + PadCenter(cPo, 15));
                                newList.Add("191000000500020" + "Lot No.");
                                newList.Add("1E3102500100020" + "C&G" + Right(cCustOrderLot, 12));
                                newList.Add("191000000600135" + "Ctn.No.");
                                newList.Add("191000000600229" + cCtn);
                                newList.Add("191000000400135" + "Mfg. Date.  " + dMfg.ToString("MMM-yyyy"));
                                newList.Add("191000000200135" + "Exp. Date.  " + dExp.ToString("MMM-yyyy"));
                                break;
                            #endregion

                            #region Outer Label 39
                            case "39":
                                newList.Add("1Y1100000200050" + "LOT");
                                newList.Add("421100001100070" + cPo);
                                newList.Add("411200000200125" + "Gross Wt.");
                                newList.Add("421100001100125" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200175" + "Net Wt.");
                                newList.Add("421100001100175" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200225" + "PO.");
                                newList.Add("421100001100225" + cPo);
                                newList.Add("411200000200275" + "Case No.");
                                newList.Add("421100001100275" + cCtn);
                                newList.Add("1Y1100000200305" + "MFG");
                                newList.Add("421100001100330" + dMfg.ToString("MM-yyyy"));
                                newList.Add("401105000200390" + cLot);
                                break;
                            #endregion

                            #region Outer Label 38
                            case "38":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150140" + "PO No.");
                                newList.Add("421100001100138" + cPo);
                                newList.Add("411200000150180" + "Ctn. No.");
                                newList.Add("421100001100178" + cCtn);
                                newList.Add("411200000150220" + "Gross Wt.");
                                newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150260" + "Net Wt.");
                                newList.Add("421100001100258" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150300" + "Lot No.");
                                newList.Add("421100001100298" + cCustOrderLot);
                                newList.Add("421100002500340" + cHartaSize);
                                newList.Add("4d3105001100371" + cLot);
                                newList.Add("401105001100381" + cLot);
                                break;
                            #endregion

                            #region Outer Label 37
                            case "37":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135" + "PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170" + "Mfg. Date");
                                newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150205" + "Ctn. No.");
                                newList.Add("421100001100203" + cCtn);
                                newList.Add("411200000150240" + "Gross Wt.");
                                newList.Add("421100001100238" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150275" + "Net Wt.");
                                newList.Add("421100001100273" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150310" + "Lot No.");
                                newList.Add("421100001100308" + cPo);
                                newList.Add("421100002500343" + cHartaSize);
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                                break;
                            #endregion

                            #region Outer Label 31 TODO check ansci code
                            case "31":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cLot;

                                newList.Add("191100002700015" + "EAN N" + Chr(584));//check Chr condition: "EAN N" + Chr(167) + "Data de Fabrica" + +Chr(135) + " "+ Chr(131) + "o/" + Chr(162) + "n:";
                                newList.Add("191100002700240" + cOuterGtn14_Code);
                                newList.Add("191100002400015" + "Quantidade/Cantidad:");
                                newList.Add("191100002400240" + "1.000 unds");
                                newList.Add("191100002100015" + "Data de Fabrica" + Chr(309) + Chr(305) + "o/");
                                newList.Add("191100002000240" + dMfg.ToString("dd/MM/yyyy"));
                                newList.Add("191100001900015" + "Fecha de Fabricaci" + Chr(354) + "n:");
                                newList.Add("191100001600015" + "Validade/Validad:");
                                newList.Add("191100001600240" + dExp.ToString("dd/MM/yyyy"));
                                newList.Add("191100001300015" + "Lote:");
                                newList.Add("191100001300240" + cLot);
                                newList.Add("1e1110000200015" + "C&G" + cGs1);
                                newList.Add("101100000100015" + cReadable);
                                newList.Add("401100000120390" + cPo + " " + cCtn);
                                break;
                            #endregion

                            #region Outer Label 24
                            case "24":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000100135" + "PO No.");
                                newList.Add("4e1100001100155" + "B" + cPo);
                                newList.Add("401100001100165" + cPo);
                                newList.Add("411200000100200" + "Ctn. No.");
                                newList.Add("421100001100198" + cCtn);
                                newList.Add("421100001100245" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100001100300" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100220" + "LOGO");
                                newList.Add("4d3105001100373" + cLot);
                                newList.Add("410005001100388" + cLot);
                                break;
                            #endregion

                            #region Outer Label 23
                            case "23":
                                cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("421100000200125" + "PO No.");
                                newList.Add("4e1100001100145" + "B" + cPo);
                                newList.Add("401100001100155" + cPo);
                                newList.Add("411200000200190" + "Ctn. No.");
                                newList.Add("421100001100188" + cCtn);
                                newList.Add("411200000200220" + "Gross Wt.");
                                newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200255" + "Net Wt.");
                                newList.Add("421100001100253" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200290" + "Mfg. Date.");
                                newList.Add("421100001100288" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100000200325" + "Lot No.");
                                newList.Add("4e1105001100355" + "C&G" + "10" + cGs1);
                                newList.Add("410005000800370" + "(10)" + cGs1);
                                break;
                            #endregion

                            #region Outer Label 19
                            case "19":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000100135" + "PO No.");
                                newList.Add("4e1100001100155" + "B" + cPo);
                                newList.Add("401100001100165" + cPo);
                                newList.Add("411200000100200" + "Ctn. No.");
                                newList.Add("421100001100198" + cCtn);
                                newList.Add("421100001100245" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100001100300" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100220" + "LOGO");
                                newList.Add("4e1105000450373" + "B" + cLot);
                                newList.Add("401105000450383" + cLot);
                                break;
                            #endregion

                            #region Outer Label 4
                            case "4":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135" + "PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170" + "Mfg. Date");
                                newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150205" + "Exp. Date");
                                newList.Add("421100001100203" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150240" + "Ctn. No.");
                                newList.Add("421100001100238" + cCtn);
                                newList.Add("411200000150275" + "Gross Wt.");
                                newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));//gross wt
                                newList.Add("411200000150310" + "Net Wt.");
                                newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));//nett wt
                                newList.Add("411200000150345" + "Lot No.");
                                newList.Add("421100002500343" + cHartaSize);//internal sz
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                                break;
                            #endregion

                            #region Outer Label 10
                            case "10":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150140" + "PO No.");
                                newList.Add("421100001100138" + cPo);
                                newList.Add("411200000150180" + "Exp. Date");
                                newList.Add("421100001100178" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150220" + "Ctn. No.");
                                newList.Add("421100001100218" + cCtn);
                                newList.Add("411200000150260" + "Gross Wt.");
                                newList.Add("421100001100258" + nGross.ToString("0.0 Kg"));//gross wt
                                newList.Add("411200000150300" + "Net Wt.");
                                newList.Add("421100001100298" + nNett.ToString("0.0 Kg"));//nett wt
                                newList.Add("411200000150340" + "Lot No.");
                                newList.Add("421100002500338" + cHartaSize);//internal size
                                newList.Add("4d3105001100369" + cLot);
                                newList.Add("401105001100379" + cLot);
                                break;
                            #endregion

                            #region Outer Label 11
                            case "11":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150140" + "PO No.");
                                newList.Add("421100001100138" + cPo);
                                newList.Add("411200000150180" + "Ctn. No.");
                                newList.Add("421100001100178" + cCtn);
                                newList.Add("411200000150220" + "Gross Wt.");
                                newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));//gross wt
                                newList.Add("411200000150260" + "Net Wt.");
                                newList.Add("421100001100258" + nNett.ToString("0.0 Kg"));//nett wt
                                newList.Add("411200000150300" + "Lot No.");
                                newList.Add("421100001100298" + cCustOrderLot);
                                newList.Add("421100002500340" + cHartaSize); // internal sz
                                newList.Add("4d3105001100371" + cLot);
                                newList.Add("401105001100381" + cLot);
                                break;
                            #endregion

                            #region Outer Label 12
                            case "12":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150140" + "PO No.");
                                newList.Add("421100001100138" + cPo);
                                newList.Add("411200000150180" + "Ctn. No.");
                                newList.Add("421100001100178" + cCtn);
                                newList.Add("411200000150220" + "Gross Wt.");
                                newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));//gross wt
                                newList.Add("411200000150260" + "Net Wt.");
                                newList.Add("421100001100258" + nNett.ToString("0.0 Kg"));//nett wt
                                newList.Add("411200000150300" + "Ref. No.");
                                newList.Add("421100001100298" + cCustRefNo);//Reference
                                newList.Add("411200000150340" + "Lot No.");
                                newList.Add("421100002500338" + cHartaSize);//internal sz
                                newList.Add("4d3105001100369" + cLot);
                                newList.Add("401105001100379" + cLot);
                                break;
                            #endregion

                            #region Outer Label 14
                            case "14":
                                newList.Add("410005000150020" + cPo);
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150160" + "Ctn. No.");
                                newList.Add("421100001100158" + cCtn);
                                newList.Add("411200000150220" + "Gross Wt.");
                                newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));//gross wt
                                newList.Add("411200000150280" + "Net Wt.");
                                newList.Add("421100001100278" + nNett.ToString("0.0 Kg"));//nett wt
                                newList.Add("411200000150340" + "Lot No.");
                                newList.Add("421100002500338" + cHartaSize);//internal size
                                newList.Add("4d3105001100369" + cLot);
                                newList.Add("401105001100379" + cLot);
                                break;
                            #endregion

                            #region Outer Label 20
                            case "20":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("421100000200125" + "PO No.");
                                newList.Add("4e1100001100145" + "B" + cPo); // Check code 128 B Barcode
                                newList.Add("401100001100155" + cPo);
                                newList.Add("411200000200190" + "Ctn. No.");
                                newList.Add("421100001100188" + cCtn);
                                newList.Add("411200000200220" + "Gross Wt.");
                                newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));// Gross weight
                                newList.Add("411200000200255" + "Net Wt.");
                                newList.Add("421100001100253" + nNett.ToString("0.0 Kg"));// Nett weight
                                newList.Add("411200000200290" + "Mfg. Date.");
                                newList.Add("421100001100288" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100000200315" + "Lot No.");
                                newList.Add("4e1105000200373" + "B" + cLot);// Check code 128 B Barcode - follow inner lot
                                newList.Add("401105000200383" + cLot); // - follow inner lot
                                break;
                            #endregion

                            #region Outer Label 21
                            case "21":
                                cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("421100000200145" + "PO No.");
                                newList.Add("4e1100001100165" + "B" + cPo); // Check code 128 B Barcode
                                newList.Add("401100001100175" + cPo);
                                newList.Add("411200000200210" + "Ctn. No.");
                                newList.Add("421100001100208" + cCtn);
                                newList.Add("411200000200245" + "Gross Wt.");
                                newList.Add("421100001100243" + nGross.ToString("0.0 Kg"));//gross wt
                                newList.Add("411200000200280" + "Net Wt.");
                                newList.Add("421100001100278" + nNett.ToString("0.0 Kg"));//nett wt
                                newList.Add("421100000200315" + "Lot No.");
                                newList.Add("4e1105001100345" + "C&G" + "10" + cGs1);//GS1 brcode
                                newList.Add("410005000800360" + "(10)" + cGs1);//Readable brcode
                                break;
                            #endregion

                            #region Outer Label 22
                            case "22":
                                cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000100135" + "PO No.");
                                newList.Add("4e1100001100155" + "B" + cPo); // Check code 128 B Barcode
                                newList.Add("401100001100165" + cPo);
                                newList.Add("411200000100200" + "Ctn. No.");
                                newList.Add("421100001100198" + cCtn);
                                newList.Add("421100001100245" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100001100300" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100220" + "LOGO");
                                newList.Add("4e1105001100373" + "C&G" + "10" + cGs1);//GS1 brcode
                                newList.Add("410005000800388" + "(10)" + cGs1);//Readable brcode
                                break;
                            #endregion

                            #region Outer Label 26
                            case "26":
                                cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                                newList.Add("410005002300020" + cCtn);
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("421100000200145" + "PO No.");
                                newList.Add("4e1100001100165" + "B" + cPo); // Check code 128 B Barcode
                                newList.Add("401100001100175" + cPo);
                                newList.Add("411200000200220" + "Gross Wt.");
                                newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));// Gross weight
                                newList.Add("411200000200255" + "Net Wt.");
                                newList.Add("421100001100253" + nNett.ToString("0.0 Kg")); //Nett weight 
                                newList.Add("421100000200325" + "Lot No.");
                                newList.Add("4e1105001100355" + "C&G" + "10" + cGs1); //GS1 barcode
                                newList.Add("410005000600370" + "(10)" + cGs1);//Readable barcode	
                                break;
                            #endregion

                            #region Outer Label 27
                            case "27":
                                cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                                newList.Add("410005002300020" + cCtn);
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000100155" + "PO No.");
                                newList.Add("4e1100001100175" + "B" + cPo); // Check code 128 B Barcode
                                newList.Add("401100001100185" + cPo);
                                newList.Add("421100001100245" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100001100300" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100220" + "LOGO");
                                newList.Add("4e1105001100373" + "C&G" + "10" + cGs1); //GS1 barcode
                                newList.Add("410005000600388" + "(10)" + cGs1);//Readable barcode	
                                break;
                            #endregion

                            #region Outer Label 28
                            case "28":
                                cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                                newList.Add("410005002300020" + cCtn);
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("421100000200145" + "PO No.");
                                newList.Add("4e1100001100165" + "B" + cPo);
                                newList.Add("401100001100175" + cPo);
                                newList.Add("411200000200220" + "Gross Wt.");
                                newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));// Gross weight
                                newList.Add("411200000200255" + "Net Wt.");
                                newList.Add("421100001100253" + nNett.ToString("0.0 Kg")); //Nett weight 
                                newList.Add("411200000200290" + "Mfg. Date.");
                                newList.Add("421100001100288" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100000200325" + "Lot No.");
                                newList.Add("4e1105001100355" + "C&G" + "10" + cGs1); //GS1 barcode
                                newList.Add("410005000600370" + "(10)" + cGs1);//Readable barcode	
                                break;
                            #endregion

                            #region Outer Label 29
                            case "29":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135" + "PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170" + "Mfg. Date.");
                                newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150205" + "Ctn. No.");
                                newList.Add("421100001100203" + cCtn);
                                newList.Add("411200000150240" + "Gross Wt.");
                                newList.Add("421100001100238" + nGross.ToString("0.0 Kg")); // Gross Weight
                                newList.Add("411200000150275" + "Net Wt.");
                                newList.Add("421100001100273" + nNett.ToString("0.0 Kg")); // Nett weight
                                newList.Add("411200000150310" + "B Serial.");
                                newList.Add("421100001100308" + cSerial); //check Serial number prmtr
                                newList.Add("411200000150345" + "Lot No.");
                                newList.Add("421100002500343" + cHartaSize); // harta internal size
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                                break;
                            #endregion

                            #region Outer Label 48
                            case "48":
                                newList.Add("411200000150067" + "Lot No.");
                                newList.Add("4d3105001400070" + cLot);
                                newList.Add("401105001600080" + cLot);
                                newList.Add("411200000150117" + "Exp. Date.");
                                newList.Add("421105001450115" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150167" + "Quantity:");
                                newList.Add("421100001450165" + "1000 PCS");
                                newList.Add("411200000150217" + "Gross Wt.");
                                newList.Add("421100001450215" + nGross.ToString("0.0 Kg"));//Gross weight
                                newList.Add("411200000150267" + "Net Wt.");
                                newList.Add("421100001450265" + nNett.ToString("0.0 Kg"));// Nett weight
                                newList.Add("411200000150317" + "Master:");
                                newList.Add("421100001450315" + cCustSize);
                                newList.Add("411200000150353" + "No. of");
                                newList.Add("411200000150377" + "Stowage Unit:");
                                newList.Add("421100001450375" + cCtn);
                                break;
                            #endregion

                            #region Outer Label 64
                            case "64":
                                cGs1 = cCustOrderLot + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1);//StrZero(Month(dDate), 2) + Right(Str(Year(dDate), 4), 1)

                                newList.Add("410005002400030" + cCtn);
                                newList.Add("422300000300090" + PadCenter(cCustSize, 11));
                                newList.Add("411200000200115" + "PO No.");
                                newList.Add("421100001150115" + cPo);
                                newList.Add("411200000200140" + "Mfg. Date.");
                                newList.Add("421100001150140" + dMfg.ToString("MMM-yyyy"));//Fix to prod date
                                newList.Add("411200000200175" + "Lot No.");
                                newList.Add("4e1103001150184" + "C&G" + "10" + cGs1);
                                newList.Add("410005001150199" + "(10)" + cGs1);
                                newList.Add("100000002800125" + cLot);
                                break;
                            #endregion

                            #region Outer Label 68
                            case "68":
                                //newList.Add("410005000200020" + cPo);
                                newList.Add("421200001800075" + PadCenter(cCustSize, 10));
                                newList.Add("411200000200060" + "Ctn. No.");
                                newList.Add("421100001100060" + cCtn);
                                newList.Add("1Y1100000150075" + "MFG");
                                newList.Add("421100001100105" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000200135" + "Cat. No.");
                                newList.Add("421100001100135" + cCustRefNo); //check reference table paramater
                                newList.Add("1Y1100000150150" + "LOT");
                                newList.Add("4d3103001100175" + cLot);
                                newList.Add("410005001100187" + cLot);
                                break;
                            #endregion

                            #region Outer Label 74
                            case "74":
                                newList.Add("410005000200020" + cOrderNum);            //cust order number
                                newList.Add("422400002000090" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200080" + "Ctn. No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("1Y1100000150100" + "MFG");
                                newList.Add("421100001100125" + dMfg.ToString("MM-yyyy"));
                                newList.Add("1Y1100000150150" + "LOT");
                                newList.Add("421105001100168" + cPo);
                                newList.Add("401105001100190" + cLot);
                                break;
                            #endregion

                            #region Outer Label 77
                            case "77":
                                DateTime dExpLastDayOfMonth = new DateTime(dExp.Year, dExp.Month, 1);
                                dExpLastDayOfMonth = dExpLastDayOfMonth.AddMonths(1).AddDays(-1);

                                switch (cItemNumber)
                                {
                                    case "FG-P027-001":
                                        switch (cCustSize)
                                        {
                                            case "XS":
                                                cPzn = "3539159";
                                                cHartaRfCode = "9422001";
                                                break;
                                            case "S":
                                                cPzn = "3539171";
                                                cHartaRfCode = "9422011";
                                                break;
                                            case "M":
                                                cPzn = "3539188";
                                                cHartaRfCode = "9422021";
                                                break;
                                            case "L":
                                                cPzn = "3539194";
                                                cHartaRfCode = "9422031";
                                                break;
                                            default: //XL
                                                cPzn = "3539202";
                                                cHartaRfCode = "9422041";
                                                break;
                                        }
                                        break;

                                    case "FG-P027-002":
                                        switch (cCustSize)
                                        {
                                            case "XS":
                                                cPzn = "3538409";
                                                cHartaRfCode = "9421951";
                                                break;
                                            case "S":
                                                cPzn = "3538415";
                                                cHartaRfCode = "9421961";
                                                break;
                                            case "M":
                                                cPzn = "3538421";
                                                cHartaRfCode = "9421971";
                                                break;
                                            case "L":
                                                cPzn = "3538438";
                                                cHartaRfCode = "9421981";
                                                break;
                                            default: //XL
                                                cPzn = "3538444";
                                                cHartaRfCode = "9421991";
                                                break;
                                        }
                                        break;

                                    case "FG-P027-003":
                                        switch (cCustSize)
                                        {
                                            case "XS":
                                                cPzn = "3539343";
                                                cHartaRfCode = "9421952";
                                                break;
                                            case "S":
                                                cPzn = "3539455";
                                                cHartaRfCode = "9421962";
                                                break;
                                            case "M":
                                                cPzn = "3539509";
                                                cHartaRfCode = "9421972";
                                                break;
                                            case "L":
                                                cPzn = "3539722";
                                                cHartaRfCode = "9421982";
                                                break;
                                            default: //XL
                                                cPzn = "3539774";
                                                cHartaRfCode = "9421992";
                                                break;
                                        }
                                        break;

                                    default: //not found. Example new brand
                                        cPzn = "NOT SET";
                                        cHartaRfCode = "NOT SET";
                                        break;
                                }

                                newList.Add("491100100200035" + "EAN " + cOuterGtn14_Code);
                                newList.Add("491100102300035" + "REF. " + cHartaRfCode);
                                newList.Add("1Y1100000200055" + "LOT");
                                newList.Add("491100200600078" + cCustOrderLot.Substring(0, 2));
                                newList.Add("491100400900080" + cCustOrderLot.Substring(2, 2));
                                newList.Add("491100201250078" + cCustOrderLot.Substring(4, 5));
                                newList.Add("1Y1100002200050" + "EXP");
                                newList.Add("491100202600078" + dExp.ToString("yyyy-MM"));
                                newList.Add("4e1110000200205" + "C&G" + "010" + cOuterGtn14_Code);
                                newList.Add("401100000350215" + "(01)0" + cOuterGtn14_Code);
                                newList.Add("491100202000130" + "SIZE:");
                                newList.Add("491100502700133" + cCustSize);
                                newList.Add("491100202000175" + "PZN:");
                                newList.Add("491100202500175" + "10 x " + cPzn);
                                newList.Add("491100202000205" + "10 x " + cCustRefNo);
                                newList.Add("4e1110000200330" + "C&G" + "92" + cHartaRfCode + "17" + dExpLastDayOfMonth.ToString("yyMMdd") + "10" + cCustOrderLot);//check End of month
                                newList.Add("401100000200340" + "(92)" + cHartaRfCode + "(17)" + dExpLastDayOfMonth.ToString("yyMMdd") + "(10)" + cCustOrderLot);//check End of month
                                newList.Add("301100004000340" + cLot + "  " + cCtn);
                                // newList.Add("Q0002"); 
                                break;
                            #endregion

                            #region Outer Label 78
                            case "78":
                                newList.Add("411205000200040" + "Lot No.");
                                newList.Add("421105001500040" + cPo);
                                newList.Add("411205000200080" + "Batch No.");
                                newList.Add("421105001500080" + cLot);
                                newList.Add("1Y1100000200100" + "MFG");
                                newList.Add("400000000600105" + "Manufacturing");
                                newList.Add("400000000600113" + "date:");
                                newList.Add("400000000600123" + "Date");
                                newList.Add("400000000600131" + "de fabrication:");
                                newList.Add("421105001500130" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000200150" + "EXP");
                                newList.Add("400000000600157" + "Expiration");
                                newList.Add("400000000600165" + "date:");
                                newList.Add("400000000600175" + "Date");
                                newList.Add("400000000600183" + "d' expiration:");
                                newList.Add("421105001500182" + "N/A");
                                newList.Add("400005002600190" + cCtn);
                                break;
                            #endregion

                            #region Outer Label 81
                            case "81":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135" + "PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170" + "Mfg. Date");
                                newList.Add("421100001100168" + dMfg.ToString("yyyy-MM"));
                                newList.Add("411200000150205" + "Exp. Date");
                                newList.Add("421100001100203" + dExp.ToString("yyyy-MM"));
                                newList.Add("411200000150240" + "Ctn. No.");
                                newList.Add("421100001100238" + cCtn);
                                newList.Add("411200000150275" + "Gross Wt.");
                                newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150310" + "Net Wt.");
                                newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150345" + "Lot No.");
                                newList.Add("421105001100345" + cLot + " " + cHartaSize);
                                break;
                            #endregion

                            #region Outer Label 84
                            case "84":
                                newList.Add("411200000200050" + "PO No.");
                                newList.Add("421100001000046" + cCustOrderLot.Substring(0, 4));
                                newList.Add("411200000200080" + "Lot No.");
                                newList.Add("421100001000076" + cLot);
                                newList.Add("411200000200110" + "Ctn. No.");
                                newList.Add("421100001000106" + cCtn);
                                newList.Add("1Y1100000200118" + "MFG");
                                newList.Add("421100001000140" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000200158" + "EXP");
                                newList.Add("422300002200140" + PadCenter(cCustSize, 5));
                                newList.Add("421100001000180" + dExp.ToString("MMM-yyyy"));
                                break;
                            #endregion

                            #region Outer Label 88
                            case "88":
                                newList.Add("421100000150060" + "Lot No.     :");
                                newList.Add("421100001800060" + cCustOrderLot);
                                newList.Add("421100000150100" + "Use Before. :");
                                newList.Add("421100001800100" + dExp.ToString("yyyy-MM"));
                                newList.Add("421100000150140" + "Case No.    :");
                                newList.Add("421100001800140" + Right(cCtn, 4));
                                newList.Add("410000001800185" + cLot);
                                break;
                            #endregion

                            #region Outer Label 95
                            case "95":
                                newList.Add("191100000830009" + PadCenter(cPo, 15));
                                newList.Add("191000000670135" + "Ctn.No.");
                                newList.Add("191000000670220" + cCtn);
                                newList.Add("191000000470135" + "Mfg. Date.");
                                newList.Add("191000000470220" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("191000000270135" + "Exp. Date.");
                                newList.Add("191000000270220" + dExp.ToString("MMM-yyyy"));
                                newList.Add("191000000200009" + "Lot No.");
                                newList.Add("110000000080009" + cLot);
                                break;
                            #endregion

                            #region Outer Label 126
                            case "126":
                                cGs1 = "02" + cProdRefNo + "15" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot;
                                cReadable = "(02)" + cProdRefNo + "(15)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot;

                                newList.Add("411200000200130" + "Ctn. No.");
                                newList.Add("421100001000130" + cCtn);
                                newList.Add("422400001500090" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150135" + "EXP");
                                newList.Add("421100001000160" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150175" + "LOT");
                                newList.Add("421105001000190" + cCustOrderLot);
                                newList.Add("410005000150215" + "GS1 code:");
                                newList.Add("4e1105000150270" + "C&G" + cGs1); //GS1 barcode - check paramater
                                newList.Add("400000000150280" + cReadable); //Readable barcode - check paramater

                                break;
                            #endregion

                            #region Outer Label 129
                            case "129":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yy") + "00" + "10" + cLot;
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                              + " " + cOuterGtn14_Code.Substring(13, 1) + "(17) " + dExp.ToString("yy") + "00" + "(10) " + cLot;

                                newList.Add("211100003580140" + cLot.Substring(0, 9)); //Check substr;
                                newList.Add("211100002200140" + dMfg.ToString("yyyy-MM"));
                                newList.Add("211100001150140" + dExp.ToString("yyyy-MM"));
                                newList.Add("201100003690086" + cReadable);//Readable barcode - check paramater
                                newList.Add("2e1105003690034C&G" + cGs1);//GS1 barcode - check paramater
                                                                         //newList.Add("Q0002");
                                break;
                            #endregion

                            #region Outer Label 135
                            case "135":
                                newList.Add("221100002800070" + "Carton No: ");
                                newList.Add("221100001600070" + Right(cCtn, 4) + "/" + cTotalCarton); // xxxx/yyyy - xxxx : running carton , yyyy : total carton per 1 SIZE
                                newList.Add("221100000580050" + PadCenter(cCustSize, 5));
                                newList.Add("211100001600038" + cLot);
                                break;
                            #endregion

                            #region Outer Label 138
                            case "138":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075" + "Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150114" + "EXP");
                                newList.Add("421100001000140" + dExp.ToString("MMM-yyyy"));//check default date format
                                newList.Add("1Y1100000150157" + "LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                break;
                            #endregion

                            #region Outer Label 142
                            case "142":
                                cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                                newList.Add("211100003690076" + cLot.Substring(0, 9));  //Check substr;
                                newList.Add("211100002190076" + dMfg.ToString("yyyy-MM"));
                                newList.Add("211100001020076" + dExp.ToString("yyyy-MM"));
                                newList.Add("201100003690063" + cReadable);   //Readable barcode - check paramater
                                newList.Add("2e1105003690011C&G" + cGs1);     //GS1 barcode - check paramater
                                                                              //newList.Add("Q0002");
                                break;
                            #endregion

                            #region Outer Label 143
                            case "143":
                                newList.Add("1Y1100000150015" + "MFG");
                                newList.Add("421100001000040" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150080" + "EXP");
                                newList.Add("421100001000105" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150155" + "LOT");
                                newList.Add("4e1105000100230" + "C&G" + "100000000000" + cPo.Substring(0, 10) + "21000000000000");  //check C&G and Substr
                                newList.Add("410005000150245" + "100000000000" + cPo.Substring(0, 10) + "21000000000000");          //check Substr      
                                newList.Add("410005002600280" + cLot);
                                break;
                            #endregion

                            #region Outer Label 144, 127
                            case "144":
                            case "127":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cLot.Substring(0, 9);
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(17) " + dExp.ToString("yyMM") + "00" + "(10) " + cLot.Substring(0, 9);

                                newList.Add("211100003690076" + cLot.Substring(0, 9)); //Check substr;
                                newList.Add("211100002190076" + dMfg.ToString("yyyy-MM"));
                                newList.Add("211100001020076" + dExp.ToString("yyyy-MM"));
                                newList.Add("201100003690063" + cReadable); //Readable barcode - check paramater
                                newList.Add("2e1105003690011C&G" + cGs1); //GS1 barcode - check paramater
                                                                          //newList.Add("Q0002"); 
                                break;
                            #endregion

                            #region Outer Label 151
                            case "151":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("421200001800090" + PadCenter(cCustSize, 10));
                                newList.Add("411200000200080" + "Ctn.No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("1Y1100000150100" + "MFG");
                                newList.Add("421100001100125" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150150" + "LOT");
                                newList.Add("4d3103001100175" + cLot);
                                newList.Add("410005001100187" + cLot);
                                break;
                            #endregion

                            #region Outer Label 156
                            case "156":
                                newList.Add("410005000150025" + cPo);
                                newList.Add("1Y1100000150040" + "LOT_T_V");
                                newList.Add("421100001000062" + cCustOrderLot); //product code by size - check parameter TODO cOuterGtn14_Code or cPline
                                newList.Add("422300002300138" + cCustSize);
                                newList.Add("1Y1100000150080" + "MFG_T_V");
                                newList.Add("421100001000110" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150173" + "Case.");
                                newList.Add("421100001000170" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;
                            #endregion

                            #region Outer Label 157
                            case "157":
                                newList.Add("410005000150020" + cPo);
                                newList.Add("1Y1100000150027" + "LOT_T_V");
                                newList.Add("421100001000051" + cCustOrderLot); //product code by size
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150065" + "MFG_T_V");
                                newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150122" + "EXP");
                                newList.Add("421100001000143" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150183" + "Case.");
                                newList.Add("421100001000179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;
                            #endregion

                            #region Outer Label 161
                            case "161":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cLot;

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200060" + "Ctn.No.");
                                newList.Add("421100001000060" + cCtn);
                                newList.Add("1Y2100000150070" + "LOT_UTSU");
                                newList.Add("421100001000092" + cLot);
                                newList.Add("1Y2100000150102" + "EXP_UTSU");
                                newList.Add("421105001000120" + dExp.ToString("yyyy.MM"));
                                newList.Add("4e1105000150180C&G" + cGs1); //GS1 barcode - check paramater
                                newList.Add("400000000150190" + cReadable); //Readable barcode - check paramater"
                                break;
                            #endregion

                            #region Outer Label 162
                            case "162":
                                newList.Add("421100100150035" + "BATCH");
                                newList.Add("421100001000035" + cLot);
                                newList.Add("1Y1100000150045" + "MFG");
                                newList.Add("421100001000070" + dMfg.ToString("MM-yyyy"));
                                newList.Add("1Y1100000150085" + "EXP");
                                newList.Add("421100001000110" + dExp.ToString("MM-yyyy"));
                                newList.Add("1Y1100000150130" + "LOT");
                                newList.Add("421100001000150" + cCustOrderLot);//double check cust lot parameter
                                newList.Add("421100000150185" + "CTN.");
                                newList.Add("421100001000185" + cCtn);
                                break;
                            #endregion

                            #region Outer Label 164
                            case "164":
                                newList.Add("420000000200030" + cProdRefNo); // change from cCustSize
                                newList.Add("411100000200048" + "Greenpath Studios");
                                newList.Add("411100000200063" + "CleanPro Powder - Free");
                                newList.Add("411100000200078" + "Blue Nitrile Gloves");
                                newList.Add("411100000200093" + "Qty: 10 pk.(100ea / pk)");
                                newList.Add("411100000200110" + "LOT: ");
                                newList.Add("411100000600110" + cLot);
                                newList.Add("411100001970110" + "CTN: ");
                                newList.Add("411100002370110" + cCtn);
                                newList.Add("4X0000000400116" + "L011222");
                                newList.Add("4X0000000400127" + "L040012");
                                newList.Add("410005000870190" + cOuterGtn14_Code); //Product code
                                newList.Add("4d4104000700167" + cOuterGtn14_Code); //Product code
                                newList.Add("4X0000000400167" + "L011222");
                                newList.Add("4X0000002500127" + "L040012");
                                break;
                            #endregion

                            #region Outer Label 165
                            case "165":
                                newList.Add("421100000200045" + cPo);
                                newList.Add("421100000200085" + cLot);
                                newList.Add("421100000200125" + dMfg.ToString("yyyy-MM"));
                                newList.Add("421100000200165" + dExp.ToString("yyyy-MM"));
                                newList.Add("411100001500165" + "CTN: " + cCtn);
                                break;
                            #endregion

                            /* --------------------------------------- HSB Floor Upgrade Code End  ---------------------------------------------------------- */

                            #region Outer Label 159
                            case "159":
                                newList.Add("421100000150060" + "Lot No.  :");
                                newList.Add("421100001600060" + cCustOrderLot);
                                newList.Add("421100000150100" + "Use By   :");
                                newList.Add("421100001600100" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("421100000150140" + "Case No. :");
                                newList.Add("421100001600140" + Right(cCtn, 4));
                                newList.Add("410000001800185" + cLot);
                                break;
                            #endregion

                            #region Outer Label 150
                            case "150":
                                newList.Add("111200000650015" + "Lot No.  :");
                                newList.Add("111200000650105" + cCustOrderLot);
                                newList.Add("111200000380015" + "Mfg Date : ");
                                newList.Add("111200000380105" + dMfg.ToString("yyyy-MM"));
                                newList.Add("111200000100015" + "Case No. :");
                                newList.Add("111200000100105" + cCtn);
                                newList.Add("111100000050175" + cLot);
                                break;
                            #endregion

                            #region Outer Label 141
                            case "141":
                                newList.Add("421100000150060" + "Lot No.     :");
                                newList.Add("421100001800060" + cCustOrderLot);
                                newList.Add("421100000150100" + "Mfg Date.   :");
                                newList.Add("421100001800100" + dMfg.ToString("yyyy-MM"));
                                newList.Add("421100000150140" + "Case No.    :");
                                newList.Add("421100001800140" + Right(cCtn, 4));
                                newList.Add("410000001800185" + cLot);
                                break;
                            #endregion

                            #region Outer Label 175
                            case "175":
                                newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                                newList.Add("111100000800240" + cCtn);
                                newList.Add("121100000550020" + "LOT NO.:");
                                newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                                newList.Add("141100000100020" + cLot);
                                // newList.Add("Q0004");
                                break;
                            #endregion

                            #region Outer Label 174
                            case "174":
                                newList.Add("421100000150030" + "LOT NO:");
                                newList.Add("421100001050030" + cCustOrderLot);
                                newList.Add("1Y1100000200040" + "MFG");
                                newList.Add("421100001050065" + dMfg.ToString("yyyy") + "-" + dMfg.ToString("MM") + "-" + dMfg.ToString("dd"));
                                newList.Add("431100002200070" + PadCenter(cCustSize, 5));
                                newList.Add("411100001050090" + cCtn);
                                newList.Add("411100001700090" + cLot);
                                break;
                            #endregion

                            #region Outer Label 173
                            case "173":
                                switch (cCustSize.Trim())
                                {
                                    case "XS":
                                        cCustSizeFull = "X-SMALL";
                                        cCustRefNo = "313041060";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410603";
                                        cCustIntrnlPrd = "827388";
                                        break;
                                    case "S":
                                        cCustSizeFull = "SMALL";
                                        cCustRefNo = "313041065";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410658";
                                        cCustIntrnlPrd = "827389";
                                        break;
                                    case "M":
                                        cCustSizeFull = "MEDIUM";
                                        cCustRefNo = "313041070";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410702";
                                        cCustIntrnlPrd = "827390";
                                        break;
                                    case "L":
                                        cCustSizeFull = "LARGE";
                                        cCustRefNo = "313041075";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410757";
                                        cCustIntrnlPrd = "827391";
                                        break;
                                    case "XL":
                                        cCustSizeFull = "X-LARGE";
                                        cCustRefNo = "313041080";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410801";
                                        cCustIntrnlPrd = "827392";
                                        break;
                                }

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                                newList.Add("421100100150035" + "PRODUCT:MICRO-TOUCH BLUE NITRILE");
                                newList.Add("421100000150075" + "SIZE:");
                                newList.Add("421100000800075" + cCustSizeFull);
                                newList.Add("421100001850075" + "SHIPPER");
                                newList.Add("421100002720075" + "BOX");
                                newList.Add("421100003120075" + "OF");
                                newList.Add("421100003400075" + cPackSize);
                                newList.Add("421100000150115" + "REF");
                                newList.Add("421100000800115" + cCustRefNo);
                                newList.Add("1Y1100002200090" + "MFG");
                                newList.Add("421100002700115" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("1Y1100000150135" + "LOT");
                                newList.Add("421100000800155" + cCustOrderLot);
                                newList.Add("1Y1100002200130" + "EXP");
                                newList.Add("421100002700155" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("411100000150178" + "INTERNAL PRODUCT ID:" + cCustIntrnlPrd);
                                newList.Add("401100000150260" + cReadable);
                                newList.Add("4e1107000150250" + "C&G" + cGs1);
                                newList.Add("411100000150290" + "CTN#: " + cCtn);
                                newList.Add("411100001800290" + "MFG REF: " + cLot);
                                break;
                            #endregion

                            #region Outer Label 172
                            case "172":

                                switch (cCustSize.Trim())
                                {
                                    case "L":
                                        cCustSizeFull = "LARGE";
                                        cCustRefNo = "6034303";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210752";
                                        cCustIntrnlPrd = "826402";
                                        break;
                                    case "M":
                                        cCustSizeFull = "MEDIUM";
                                        cCustRefNo = "6034302";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210707";
                                        cCustIntrnlPrd = "826401";
                                        break;
                                    case "S":
                                        cCustSizeFull = "SMALL";
                                        cCustRefNo = "6034301";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210653";
                                        cCustIntrnlPrd = "826400";
                                        break;
                                    case "XL":
                                        cCustSizeFull = "X-LARGE";
                                        cCustRefNo = "6034304";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210806";
                                        cCustIntrnlPrd = "826403";
                                        break;
                                    case "XS":
                                        cCustSizeFull = "X-SMALL";
                                        cCustRefNo = "6034300";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210608";
                                        cCustIntrnlPrd = "826399";
                                        break;
                                    case "XXL":
                                        cCustSizeFull = "XX-LARGE";
                                        cCustRefNo = " 6034305";
                                        cPackSize = "1800";
                                        cOuterGtn14_Code = "30884792210851";
                                        cCustIntrnlPrd = "826404";
                                        break;
                                }

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                                newList.Add("421100100150035" + "PRODUCT : MICRO-TOUCH NITRILE");
                                newList.Add("421100000150075" + "SIZE:");
                                newList.Add("421100000800075" + cCustSizeFull);
                                newList.Add("421100001850075" + "SHIPPER");
                                newList.Add("421100002720075" + "BOX");
                                newList.Add("421100003120075" + "OF");
                                newList.Add("421100003400075" + cPackSize);
                                newList.Add("421100000150115" + "REF");
                                newList.Add("421100000800115" + cCustRefNo);
                                newList.Add("1Y1100002200090" + "MFG");
                                newList.Add("421100002700115" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("1Y1100000150135" + "LOT");
                                newList.Add("421100000800155" + cCustOrderLot);
                                newList.Add("1Y1100002200130" + "EXP");
                                newList.Add("421100002700155" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("411100000150178" + "INTERNAL PRODUCT ID:" + cCustIntrnlPrd);
                                newList.Add("401100000150260" + cReadable);
                                newList.Add("4e1107000150250" + "C&G" + cGs1);
                                newList.Add("411100000150290" + "CTN#: " + cCtn);
                                newList.Add("411100001800290" + "MFG REF: " + cLot);
                                break;
                            #endregion

                            #region Outer Label 170
                            case "170":
                                cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                newList.Add("411200000200045PO No.");
                                newList.Add("421100001000045" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000107" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("422300001850140" + PadCenter(cCustSize, 5));
                                newList.Add("421100001000140" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4e1103001000175C&G" + cGs1);
                                newList.Add("410005001000190" + cReadable);
                                newList.Add("100000002800115" + cLot);
                                break;
                            #endregion

                            #region Outer Label 169 & 183
                            case "169":
                            case "183":
                                cGs1 = "10" + cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                cReadable = "(10)" + cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                newList.Add("411200000200060" + "Lot No.");
                                newList.Add("4e1106001150080" + "C&G" + cGs1);
                                newList.Add("410005001150095" + cReadable);
                                newList.Add("411200000200120" + "Mfg. Date.");
                                newList.Add("421100001150120" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("411200000200150" + "Case No");
                                newList.Add("421100001150148" + cCtn);
                                newList.Add("411100000200173" + "    Ref.");
                                newList.Add("411100001150173" + cPo);
                                newList.Add("400000001150186" + cLot);
                                newList.Add("422200001200190" + PadCenter(cCustSize, 11));
                                break;
                            #endregion

                            #region Outer Label 168
                            case "168":
                                cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "30" + cCustRefNo + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(30)" + cCustRefNo + "(10)" + cCustOrderLot;

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200055Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060MFG");
                                newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150100LOT");
                                newList.Add("421105001000115" + cCustOrderLot);
                                newList.Add("4e1105000150180C&G" + cGs1);
                                newList.Add("400000000080190" + cReadable);
                                break;
                            #endregion

                            #region Set 171 - 25/05/2017
                            case "171":
                                newList.Add("410005000200020" + cPo.Trim());
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100001000051" + cCustOrderLot); //Lot By Size
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100001000179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                //newList.Add("Q0002");  // to include 2 printing in 1 time 
                                break;
                            #endregion 171 

                            #region Outer Label 167 - 14/04/2017
                            case "167":
                                newList.Add("411200000200037" + "Lot No.  :");
                                newList.Add("411200001200037" + cLot);
                                newList.Add("411200000200067" + "Exp Date : ");
                                newList.Add("411200001200067" + dExp.ToString("MMM yyyy"));
                                newList.Add("411200000200098" + "Ctn No.  :");
                                newList.Add("411200001200098" + cCtn);
                                newList.Add("431100002200085" + cHartaSize);
                                break;
                            #endregion
                            #region Set 166
                            case "166":
                                switch (cCustSize.Trim())
                                {
                                    case "XS":
                                        cCustSizeFull = "X-SMALL";
                                        cCustRefNo = "313041060";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410603";
                                        cCustIntrnlPrd = "827388";
                                        break;
                                    case "S":
                                        cCustSizeFull = "SMALL";
                                        cCustRefNo = "313041065";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410658";
                                        cCustIntrnlPrd = "827389";
                                        break;
                                    case "M":
                                        cCustSizeFull = "MEDIUM";
                                        cCustRefNo = "313041070";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410702";
                                        cCustIntrnlPrd = "827390";
                                        break;
                                    case "L":
                                        cCustSizeFull = "LARGE";
                                        cCustRefNo = "313041075";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410757";
                                        cCustIntrnlPrd = "827391";
                                        break;
                                    case "XL":
                                        cCustSizeFull = "X-LARGE";
                                        cCustRefNo = "313041080";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410801";
                                        cCustIntrnlPrd = "827392";
                                        break;
                                }

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                                newList.Add("421100100150035" + "PRODUCT:MICRO-TOUCH BLUE NITRILE");
                                newList.Add("421100000150075" + "SIZE:");
                                newList.Add("421100000800075" + cCustSizeFull);
                                newList.Add("421100001850075" + "SHIPPER");
                                newList.Add("421100002720075" + "BOX");
                                newList.Add("421100003120075" + "OF");
                                newList.Add("421100003400075" + cPackSize);
                                newList.Add("421100000150115" + "REF");
                                newList.Add("421100000800115" + cCustRefNo);
                                newList.Add("1Y1100002200090" + "MFG");
                                newList.Add("421100002700115" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150135" + "LOT");
                                newList.Add("421100000800155" + cCustOrderLot);
                                newList.Add("1Y1100002200135" + "EXP");
                                newList.Add("421100002700155" + dExp.ToString("yyyy-MM"));
                                newList.Add("401100000150260" + cReadable);
                                newList.Add("4e1107000150250" + "C&G" + cGs1);
                                newList.Add("411100000150290" + "CTN#: " + cCtn);
                                newList.Add("411100001800290" + "MFG REF: " + cLot);
                                break;

                            #endregion
                            #region Set 163
                            case "163":
                                newList.Add("411100000250030Batch:");
                                newList.Add("411100000250047" + cLot);
                                newList.Add("1Y1100000250055MFG");
                                newList.Add("411100000650080" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411100001600030CTN.:");
                                newList.Add("411100001950030" + cCtn);
                                newList.Add("4d3103001600070" + cCustOrderLot);
                                newList.Add("410005001600085" + cCustOrderLot);
                                break;
                            #endregion
                            #region Set 160
                            case "160":
                                switch (cCustSize.Trim())
                                {
                                    case "L":
                                        cCustSizeFull = "LARGE";
                                        cCustRefNo = "6034303";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210752";
                                        cCustIntrnlPrd = "826402";
                                        break;
                                    case "M":
                                        cCustSizeFull = "MEDIUM";
                                        cCustRefNo = "6034302";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210707";
                                        cCustIntrnlPrd = "826401";
                                        break;
                                    case "S":
                                        cCustSizeFull = "SMALL";
                                        cCustRefNo = "6034301";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210653";
                                        cCustIntrnlPrd = "826400";
                                        break;
                                    case "XL":
                                        cCustSizeFull = "X-LARGE";
                                        cCustRefNo = "6034304";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210806";
                                        cCustIntrnlPrd = "826403";
                                        break;
                                    case "XS":
                                        cCustSizeFull = "X-SMALL";
                                        cCustRefNo = "6034300";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210608";
                                        cCustIntrnlPrd = "826399";
                                        break;
                                    case "XXL":
                                        cCustSizeFull = "XX-LARGE";
                                        cCustRefNo = " 6034305";
                                        cPackSize = "1800";
                                        cOuterGtn14_Code = "30884792210851";
                                        cCustIntrnlPrd = "826404";
                                        break;
                                }

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                                newList.Add("421100100150035PRODUCT : MICRO-TOUCH NITRILE");
                                newList.Add("421100000150075SIZE:");
                                newList.Add("421100000800075" + cCustSizeFull);
                                newList.Add("421100001850075SHIPPER");
                                newList.Add("421100002720075BOX");
                                newList.Add("421100003120075OF");
                                newList.Add("421100003400075" + cPackSize);
                                newList.Add("421100000150115REF");
                                newList.Add("421100000800115" + cCustRefNo);
                                newList.Add("1Y1100002200090MFG");
                                newList.Add("421100002700115" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150135LOT");
                                newList.Add("421100000800155" + cCustOrderLot);
                                newList.Add("1Y1100002200135EXP");
                                newList.Add("421100002700155" + dExp.ToString("yyyy-MM"));
                                newList.Add("401100000150260" + cReadable);
                                newList.Add("4e1107000150250C&G" + cGs1);
                                newList.Add("411100000150290CTN#: " + cCtn);
                                newList.Add("411100001800290MFG REF: " + cLot);
                                break;
                            #endregion
                            #region Set 130
                            case "130":
                                newList.Add("411100000150043Ctn. No.: " + cCtn);
                                newList.Add("411100000150058Gross Weight: " + nGross.ToString("0.0 Kg"));
                                newList.Add("411100000150075Net Weight: " + nNett.ToString("0.0 Kg"));
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150080MFG");
                                newList.Add("421100001000108" + dMfg.ToString("MMM yyyy"));
                                newList.Add("1Y1100000150116EXP");
                                newList.Add("421100001000141" + dExp.ToString("MMM yyyy"));
                                newList.Add("1Y1100000150156LOT");
                                newList.Add("4d3103001000178" + cLot);
                                newList.Add("410005001000193" + cLot);
                                break;
                            #endregion
                            #region Set 158
                            case "158":
                                //dExp = dMfg.AddDays(-1).AddMonths(nExpMonth);
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002400145" + cCustSize);
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000112" + dMfg.ToString("dd-MMM-yyyy"));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("421100001000145" + dExp.ToString("dd-MMM-yyyy"));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                break;
                            #endregion
                            #region Set 155
                            case "155":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("2e2105013550105C&G" + cGs1);
                                newList.Add("200000013550090" + cReadable);
                                newList.Add("242200009900100" + PadCenter(cCustSize, 3));
                                newList.Add("2X1110007100080" + "L001665");
                                newList.Add("201100013750070" + "PO No");
                                newList.Add("221100013250054" + cPo);
                                newList.Add("201100011550070" + "Mfg Date");
                                newList.Add("221100010950054" + dEtd.ToString("yyyy-MM")); //Shipment ETD date
                                newList.Add("201100009900070" + "Gross Wt.");
                                newList.Add("221100009300054" + nGross.ToString("0.0 Kgs"));
                                newList.Add("201100008250070" + "Ctn No");
                                newList.Add("291100007800054" + cCtn);
                                newList.Add("200000008250020" + cLot);
                                newList.Add("2X1110007100050" + "L001665");
                                newList.Add("201100013750040" + "Lot No");
                                newList.Add("221100013250024" + cCustOrderLot);
                                newList.Add("201100011550040" + "Exp Date");
                                newList.Add("221100010950024" + dExp.ToString("yyyy-MM"));
                                newList.Add("201100009900040" + "Nett Wt.");
                                newList.Add("221100009300024" + nNett.ToString("0.0 Kgs"));
                                newList.Add("2X1110006950010" + "L200001");
                                newList.Add("242200005050100" + PadCenter(cCustSize, 3));
                                newList.Add("2e2105003600105C&G" + cGs1);
                                newList.Add("200000003600090" + cReadable);
                                newList.Add("2X1110000100080" + "L001665");
                                newList.Add("201100006750070" + "PO No");
                                newList.Add("221100006250054" + cPo);
                                newList.Add("201100004550070" + "Mfg Date");
                                newList.Add("221100003950054" + dEtd.ToString("yyyy-MM"));
                                newList.Add("201100002900070" + "Gross Wt.");
                                newList.Add("221100002300054" + nGross.ToString("0.0 Kgs"));
                                newList.Add("201100001250070" + "Ctn No");
                                newList.Add("291100000800054" + cCtn);
                                newList.Add("200000001250020" + cLot);
                                newList.Add("2X1110000100050" + "L001665");
                                newList.Add("201100006750040" + "Lot No");
                                newList.Add("221100006250024" + cCustOrderLot);
                                newList.Add("201100004550040" + "Exp Date");
                                newList.Add("221100003950024" + dExp.ToString("yyyy-MM"));
                                newList.Add("201100002900040" + "Nett Wt.");
                                newList.Add("221100002300024" + nNett.ToString("0.0 Kgs"));

                                break;
                            #endregion
                            #region Set 154
                            case "154":
                                newList.Add("421100002450100" + dExp.ToString("yyyy-MM"));
                                newList.Add("411100002000350" + cPo);
                                newList.Add("411100003750350" + "LOT " + cLot);
                                newList.Add("411100006100350" + "CTN# " + cCtn);
                                break;
                            #endregion
                            #region Set 153
                            case "153":
                                newList.Add("191000000500020" + "Lot No.");
                                newList.Add("191000000500100" + cCustOrderLot);
                                newList.Add("101100000300100" + cCtn + "   " + cLot);
                                break;
                            #endregion
                            #region Set 146
                            case "146":
                                newList.Add("421100001500100" + dExp.ToString("yyyy-MM"));
                                newList.Add("411100000200350" + cPo);
                                newList.Add("411100001300350" + "LOT " + cLot);
                                newList.Add("411100003000350" + "CTN# " + cCtn);
                                break;
                            #endregion

                            case "105":
                                newList.Add("111200000600020" + "LOT NO.:");
                                newList.Add("121100000600110" + cLot);
                                newList.Add("111100000100240" + cCtn);
                                break;

                            case "152":
                                newList.Add("411100100150025Lot No.");
                                newList.Add("411100001400025" + cCustOrderLot);
                                newList.Add("411100000150045Gross Weight");
                                newList.Add("411100001400045" + nGross.ToString("0.0 Kgs"));
                                newList.Add("411100000150070Nett Weight");
                                newList.Add("411100001400070" + nNett.ToString("0.0 Kgs"));
                                newList.Add("411100000150095PO. No.");
                                newList.Add("411100001400095" + cPo);
                                newList.Add("411100000150120Ctn. No.");
                                newList.Add("411100001400120" + cCtn);
                                newList.Add("411100000150145Mfg. Date");
                                newList.Add("411100001400145" + dMfg.ToString("yyyy-MM"));
                                newList.Add("411100000150170Exp. Date");
                                newList.Add("411100001400170" + dExp.ToString("yyyy-MM"));
                                newList.Add("410000001800187" + cLot);
                                break;

                            case "998":
                                newList.Add("422200000800050" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000200060LOT");
                                newList.Add("421105000800080" + cLot);
                                newList.Add("1Y1100000200085MFG");
                                newList.Add("421100000800110" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000200119EXP");
                                newList.Add("421100000800140" + dExp.ToString("MMM-yyyy"));
                                newList.Add("4d3103000800180" + c2ndLocation.Trim() + dMfg.ToString("yyMMddHHmmss"));
                                newList.Add("410005000800195" + c2ndLocation.Trim() + dMfg.ToString("yyMMddHHmmss"));
                                newList.Add("300000002850185" + "Ctn: " + cCtn);
                                break;

                            case "149":
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("411200000800053" + cCustOrderLot);
                                newList.Add("422300001950138" + PadCenter(cCustSize, 5));
                                newList.Add("421100000150095PO: ");
                                newList.Add("411200000800100" + cPo);
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("411200000800143" + dExp.ToString("yyyy-MM"));
                                newList.Add("411200000150183Case.");
                                newList.Add("411200000800183" + cCtn);
                                newList.Add("410005001700188" + cLot);
                                break;

                            case "148":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100001000051" + cCustOrderLot);
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150145Case.");
                                newList.Add("421100001000141" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;

                            case "79":
                                newList.Add("411200000200058Ctn. No.");
                                newList.Add("421100001000058" + cCtn);
                                newList.Add("422300002000108" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150070EXP");
                                newList.Add("421100001000095" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150115LOT");
                                newList.Add("421100001000135" + cCustOrderLot);
                                newList.Add("4d3103001000180" + cLot);
                                newList.Add("410005001000195" + cLot);
                                break;

                            case "136":
                                newList.Add("1Y1100000650020LOT_H");
                                newList.Add("191000000650100" + cCustOrderLot);
                                newList.Add("1Y1100000250020MFG_H");
                                newList.Add("191000000350100" + dMfg.ToString("yyyy-MM"));
                                newList.Add("101100000150100" + cCtn + "   " + cLot);
                                // newList.Add("Q0002");
                                break;

                            case "147":
                                newList.Add("1Y1100000150015LOT");
                                newList.Add("421100000800030" + cCustOrderLot);
                                newList.Add("421100000150080" + "Gross Weight:  " + nGross.ToString("0.0 Kgs"));
                                newList.Add("421100000150125" + "Net Weight:    " + nNett.ToString("0.0 Kgs"));
                                newList.Add("421100000150170" + "PO:      " + cPo);
                                newList.Add("1Y1100000150190MFG_T_V");
                                newList.Add("421100001200230" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150260EXP_T_V");
                                newList.Add("421100001200290" + dExp.ToString("yyyy-MM"));
                                newList.Add("421100000150340" + "Case #:");
                                newList.Add("421100001200340" + cCtn);
                                newList.Add("411100001900380" + cLot);
                                break;

                            case "134": //HENRY SCHEIN CHINA/PDT - LPF
                                newList.Add("411100000200030" + "PO NO.:" + cOrderNum);
                                newList.Add("411100002400030" + cCtn);
                                newList.Add("421100000200060" + "LOT NO.:" + cLot);
                                newList.Add("1Y1100000150070NETT1");
                                newList.Add("421100000700090" + nNett.ToString("0.0 Kgs"));
                                newList.Add("1Y1100000150100GROSS1");
                                newList.Add("421100000700120" + nGross.ToString("0.0 Kgs"));
                                newList.Add("431100000600180" + "LPF" + " - " + cCustSize);
                                break;

                            case "133": //HENRY SCHEIN CHINA/PDT - NPF
                                newList.Add("411100000200030" + "PO NO.:" + cOrderNum);
                                newList.Add("411100002400030" + cCtn);
                                newList.Add("421100000200060" + "LOT NO.:" + cLot);
                                newList.Add("1Y1100000150070NETT1");
                                newList.Add("421100000700090" + nNett.ToString("0.0 Kgs"));
                                newList.Add("1Y1100000150100GROSS1");
                                newList.Add("421100000700120" + nGross.ToString("0.0 Kgs"));
                                newList.Add("431100000600180" + "NPF" + " - " + cCustSize);
                                break;

                            case "132": //HENRY SCHEIN CHINA/PDT - LP
                                newList.Add("411100000200030" + "PO NO.:" + cOrderNum);
                                newList.Add("411100002400030" + cCtn);
                                newList.Add("421100000200060" + "LOT NO.:" + cLot);
                                newList.Add("1Y1100000150070NETT1");
                                newList.Add("421100000700090" + nNett.ToString("0.0 Kgs"));
                                newList.Add("1Y1100000150100GROSS1");
                                newList.Add("421100000700120" + nGross.ToString("0.0 Kgs"));
                                newList.Add("431100000600180" + "LP" + " - " + cCustSize);
                                break;

                            case "128":
                                //cCustOrderLot = dEtd.ToString("ddMMyyyy") + cProdRefNo;
                                newList.Add("411200000200058Ctn. No.");
                                newList.Add("421100001000058" + cCtn);
                                newList.Add("422300002000108" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150070EXP");
                                newList.Add("421100001000095" + dExp.ToString("MMM yyyy"));
                                newList.Add("1Y1100000150115LOT");
                                newList.Add("421100001000135" + cCustOrderLot);
                                newList.Add("4d3103001000180" + cLot);
                                newList.Add("410005001000195" + cLot);
                                break;

                            case "104":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411100000200050Ctn. No.");
                                newList.Add("421100001000052" + cCtn);
                                newList.Add("411100000200072Date of");
                                newList.Add("411100000200082Import:");
                                newList.Add("421100001000080" + dEtd.ToString("MMM-yyyy"));
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000200085MFG");
                                newList.Add("421100001000110" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000200119EXP");
                                newList.Add("421100001000140" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000200154LOT");
                                newList.Add("4d3103001000180" + cLot);
                                newList.Add("410005001000195" + cLot);
                                break;

                            case "145":
                                dMfg = DateTime.ParseExact(cCustOrderLot.Substring(4, 2) + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                                dExp = dMfg.AddMonths(nExpMonth);
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;
                                newList.Add("422200000150065" + PadCenter(cCustSize, 11));
                                newList.Add("490000000150110Caixa No /");
                                newList.Add("491100000150130Carton No :");
                                newList.Add("491100002000130" + cCtn);
                                newList.Add("491100000150160" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                                newList.Add("491100000150180Manufacturing Date:");
                                newList.Add("491100002000185" + dMfg.ToString("MM/yyyy"));
                                newList.Add("491100000150210Validade/Expiry Date:");
                                newList.Add("491100002000210" + dExp.ToString("MM/yyyy"));
                                newList.Add("491100000150240Lote:");
                                newList.Add("491100002000240" + cCustOrderLot);
                                newList.Add("401100000150255" + cPo + "  " + cLot);
                                newList.Add("4e2105000150320C&G" + cGs1);
                                newList.Add("400000000150330" + cReadable.ToString());
                                break;

                            case "91":
                                newList.Add("411100000150026PO NO: " + cPo);
                                newList.Add("411100000150043Ctn. No.: " + cCtn);
                                newList.Add("411100000150058Gross Weight: " + nGross.ToString("0.0 Kg"));
                                newList.Add("411100000150075Net Weight: " + nNett.ToString("0.0 Kg"));
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150080MFG");
                                newList.Add("421100001000108" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150116EXP");
                                newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150156LOT");
                                newList.Add("4d3103001000178" + cLot);
                                newList.Add("410005001000193" + cLot);
                                break;


                            case "139":
                                cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 5).Replace("/", "");
                                newList.Add("410005000200025" + cPo);
                                newList.Add("422400000100117" + PadCenter(cCustSize, 11));
                                newList.Add("421100000000159" + PadCenter(cBrand, 25));
                                newList.Add("411200000100205Ctn. No.");
                                newList.Add("421100001100203" + cCtn);
                                newList.Add("421100001100248" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100001100294" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100220LOGO");
                                newList.Add("420000001100340" + cCustOrderLot);
                                newList.Add("410000001700388" + cLot);
                                break;

                            case "137":
                                newList.Add("191000000500030Ctn.No. " + cCtn);
                                newList.Add("141100000400190" + PadCenter(cCustSize, 5));
                                newList.Add("111000000200030" + cOrderNum);
                                newList.Add("111000000200150" + cLot);
                                break;

                            case "118":
                                cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                newList.Add("411200000200045PO No.");
                                newList.Add("421100001000045" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000107" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("422300001850140" + PadCenter(cCustSize, 5));
                                newList.Add("421100001000140" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4e1103001000175C&G" + cGs1);
                                newList.Add("410005001000190" + cReadable);
                                newList.Add("100000002800115" + cLot);
                                break;

                            case "119":
                                cGs1 = "10" + cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                cReadable = "(10)" + cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                newList.Add("410005002400030" + cCtn);
                                newList.Add("422300000300085" + PadCenter(cCustSize, 11));
                                newList.Add("411200000200110PO No.");
                                newList.Add("421100001150110" + cPo);
                                newList.Add("411200000200135Mfg. Date.");
                                newList.Add("421100001150135" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000200165Lot No.");
                                newList.Add("4e1103001150175C&G" + cGs1);
                                newList.Add("410005001150190" + cReadable);
                                newList.Add("100000002800115" + cLot);
                                break;

                            case "120":
                                cCustOrderLot = dMfg.ToString("yyMM") + "01" + cPline;
                                newList.Add("422200000100045" + PadCenter(cCustSize, 11));
                                newList.Add("491100000150070Caixa No /");
                                newList.Add("491100000150090Carton No :");
                                newList.Add("491100002000080" + cCtn);
                                newList.Add("491100000150110Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                                newList.Add("491100000150130Manufacturing Date:");
                                newList.Add("491100002000125" + dMfg.ToString("MM/yyyy"));
                                newList.Add("491100000150150Validade/Expiry Date:");
                                newList.Add("491100002000150" + dExp.ToString("MM/yyyy"));
                                newList.Add("491100000150170Lote:");
                                newList.Add("491100002000170" + cCustOrderLot);
                                newList.Add("401100000150185" + cPo + "  " + cLot);
                                break;

                            case "2":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170Mfg. Date");
                                newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150205Ctn. No.");
                                newList.Add("421100001100203" + cCtn);
                                newList.Add("411200000150240Gross Wt.");
                                newList.Add("421100001100238" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150275Net Wt.");
                                newList.Add("421100001100273" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150310Reorder No.");
                                newList.Add("421100001100308" + cCustRefNo);
                                newList.Add("411200000150345Lot No.");
                                newList.Add("421100002500343" + cHartaSize);
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                                break;

                            case "5":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170Mfg. Date");
                                newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150205Ctn. No.");
                                newList.Add("421100001100203" + cCtn);
                                newList.Add("411200000150240Gross Wt.");
                                newList.Add("421100001100238" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150275Net Wt.");
                                newList.Add("421100001100273" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150310Lot No.");
                                newList.Add("421100001100308" + cCustOrderLot);
                                newList.Add("421100002500343" + cHartaSize);
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                                break;

                            case "75":
                                newList.Add("110000000800135" + PadCenter(cPo, 15));
                                newList.Add("110000000650115Ctn.No.");
                                newList.Add("110000000650210" + cCtn);
                                newList.Add("110000000500115Mfg. Date.");
                                newList.Add("110000000500210" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("110000000350115Lot No.");
                                newList.Add("1d3102500200180" + cLot);
                                newList.Add("110002500050180" + cLot);
                                newList.Add("123300000250010" + PadCenter(cCustSize, 3));  // <--- I have change the print position. Original position : 123300000250020
                                break;

                            case "80":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150089EXP");
                                newList.Add("421100001000112" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150140LOT");
                                newList.Add("4d3103001000170" + cLot);
                                newList.Add("410005001000185" + cLot);
                                break;

                            case "82":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200058Ctn. No.");
                                newList.Add("421100001000058" + cCtn);
                                newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060MFG");
                                newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150095EXP");
                                newList.Add("421100001000121" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150130LOT");
                                newList.Add("421100001000149" + cCustOrderLot + "-" + cProdRefNo);
                                newList.Add("4d3103001000185" + cLot);
                                newList.Add("410005001000200" + cLot);
                                break;

                            case "100":
                                newList.Add("410005000200020" + cPo.Trim());
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100001000051" + cCustOrderLot); //Lot By Size
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100001000179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;

                            case "101":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100001000051" + cCustOrderLot); //Lot by Size
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100001000179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;

                            case "121":
                                newList.Add("421100000150035" + cLot);
                                newList.Add("411100001900035" + cOrderNum);
                                newList.Add("421100000150090" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411100001900090" + cCtn);
                                newList.Add("421100000150130" + dExp.ToString("MMM-yyyy"));
                                newList.Add("422300001900160" + cCustSize);
                                newList.Add("421100000150160" + nGross.ToString("0.0 Kg"));
                                newList.Add("421100000150190" + nNett.ToString("0.0 Kg"));
                                break;

                            case "122":
                                //DateTime.TryParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", null, DateTimeStyles.None, out dMfg);
                                //dExp = dMfg.AddMonths(nExpMonth);
                                newList.Add("191100002700015EAN N" + Chr(Convert.ToInt32("248")));
                                newList.Add("191100002700240" + cOuterGtn14_Code);
                                newList.Add("191100002400015Quantidade:");
                                newList.Add("1911000024002401.000 unds");
                                newList.Add("191100002100015Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o:");
                                newList.Add("191100002100240" + dMfg.ToString("MM/yyyy"));
                                newList.Add("191100001800015Lote:");
                                newList.Add("191100001800240" + cCustOrderLot);
                                newList.Add("191100001500015Prazo de Validade:");
                                newList.Add("191100001500240" + dExp.ToString("MM/yyyy"));
                                newList.Add("1e1110000200015C&G" + ("01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot));
                                newList.Add("101100000100015(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot);
                                newList.Add("401100000120385" + cPo + " " + cCtn + " " + cLot);
                                break;

                            case "7":
                                if (cDistBy.Length > 0)
                                {
                                    newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                    newList.Add("411200000150135PO No.");
                                    newList.Add("421100001100133" + cPo);
                                    newList.Add("411200000150170Ctn. No.");
                                    newList.Add("421100001100168" + cCtn);
                                    newList.Add("411200000150205Gross Wt.");
                                    newList.Add("421100001100203" + nGross.ToString("0.0 Kg"));
                                    newList.Add("411200000150240Net Wt.");
                                    newList.Add("421100001100238" + nNett.ToString("0.0 Kg"));
                                    newList.Add("411200000150275Dist. By");
                                    newList.Add("421100001100273" + cDistBy);
                                    newList.Add("421100001100308" + cDistCountry);
                                }
                                else
                                {
                                    newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                    newList.Add("411200000150155PO No.");
                                    newList.Add("421100001100153" + cPo);
                                    newList.Add("411200000150200Ctn. No.");
                                    newList.Add("421100001100198" + cCtn);
                                    newList.Add("411200000150245Gross Wt.");
                                    newList.Add("421100001100243" + nGross.ToString("0.0 Kg"));
                                    newList.Add("411200000150290Net Wt.");
                                    newList.Add("421100001100288" + nNett.ToString("0.0 Kg"));
                                }
                                newList.Add("411200000150345Lot No.");
                                newList.Add("421100002500343" + cHartaSize);
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                                break;

                            case "15":
                                lettercount = 0;
                                cSubBrand2 = string.Empty;
                                separators[0] = " ";
                                words = cBrand.Split(separators, StringSplitOptions.RemoveEmptyEntries);
                                foreach (var word in words)
                                {
                                    lettercount += word.Length;
                                    if (lettercount >= 25)
                                    {
                                        cSubBrand2 = word;
                                    }
                                }
                                if (cSubBrand2 != string.Empty)
                                {
                                    newList.Add("421200000000055" + PadCenter(cBrand.Replace(cSubBrand2, "").Trim(), 25));
                                    newList.Add("421200000150100" + PadCenter(cSubBrand2.Trim(), 25));
                                    newList.Add("411200000150170Size");
                                    newList.Add("422200001100168" + cCustSize);
                                    newList.Add("411200000150205PO No.");
                                    newList.Add("421100001100203" + cPo);
                                    newList.Add("411200000150240Ctn. No.");
                                    newList.Add("421100001100238" + cCtn);
                                    newList.Add("411200000150275Gross Wt.");
                                    newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));
                                    newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));
                                    newList.Add("411200000150345Lot No.");
                                    newList.Add("421100002500343" + cHartaSize);
                                    newList.Add("4d3105001100374" + cLot);
                                    newList.Add("401105001100384" + cLot);
                                }
                                else
                                {
                                    newList.Add("421200000150055" + PadCenter(cBrand, 25));
                                    newList.Add("411200000150120Size");
                                    newList.Add("422200001100118" + cCustSize);
                                    newList.Add("411200000150165PO No.");
                                    newList.Add("421100001100163" + cPo);
                                    newList.Add("411200000150210Ctn. No.");
                                    newList.Add("421100001100208" + cCtn);
                                    newList.Add("411200000150255Gross Wt.");
                                    newList.Add("421100001100253" + nGross.ToString("0.0 Kg"));
                                    newList.Add("411200000150300Net Wt.");
                                    newList.Add("421100001100298" + nNett.ToString("0.0 Kg"));
                                    newList.Add("411200000150345Lot No.");
                                    newList.Add("421100002500343" + cHartaSize);
                                    newList.Add("4d3105001100374" + cLot);
                                    newList.Add("401105001100384" + cLot);
                                }

                                break;

                            case "106":
                                // This Outer label set is for BONRIC station
                                newList.Add("411105000150030" + "HARTALEGA SDN BHD");
                                newList.Add("411100000150050" + "BRAND   :");
                                newList.Add("411100001000050" + cBrand);
                                newList.Add("411100000150070" + "PRODUCT :");
                                newList.Add("411100001000070" + cCustRefNo);
                                newList.Add("411100000150090" + "PO      :");
                                newList.Add("411100001000090" + cPo);
                                newList.Add("411100000150110" + "MFG DATE:");
                                newList.Add("411100001000110" + dMfg.ToString("MMM yyyy"));
                                newList.Add("411100000150130" + "LOT     :");
                                newList.Add("412400002150175" + PadCenter(cCustSize, 5));
                                newList.Add("4d3105001000170" + cLot);
                                newList.Add("401100001000180" + cLot);
                                // newList.Add("Q0004");
                                break;

                            case "108":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100001000051" + cCustOrderLot);
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100001000095" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("421100001000141" + dExp.ToString("yyyy-MM"));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100001000179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;

                            case "112":
                                cCustOrderLot = cPo + "-" + cBrand;
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("411200000800053" + cCustOrderLot);
                                newList.Add("422300001950138" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("411200000800100" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("411200000800143" + dExp.ToString("yyyy-MM"));
                                newList.Add("411200000150183Case.");
                                newList.Add("411200000800183" + cCtn);
                                newList.Add("410005001700188" + cLot);
                                break;

                            case "110":
                                newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                                newList.Add("111100000800240" + cCtn);
                                newList.Add("121100000550020" + "LOT NO.:");
                                newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                                newList.Add("141100000100020" + cLot);
                                break;

                            case "67":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200058Ctn. No.");
                                newList.Add("421100001000058" + cCtn);
                                newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060MFG");
                                newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150095EXP");
                                newList.Add("421100001000121" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150130LOT");
                                newList.Add("421100001000149" + cCustOrderLot + cCustRefNo);
                                newList.Add("4d3103001000185" + cLot);
                                newList.Add("410005001000200" + cLot);
                                break;

                            case "69":
                                newList.Add("422200000300060" + PadCenter(cCustSize, 11));
                                newList.Add("411200000200100PO No.");
                                newList.Add("421100001100100" + cPo);
                                newList.Add("411200000200130Ctn. No.");
                                newList.Add("421105001100130" + cCtn);
                                newList.Add("411200000200165Lot No.");
                                newList.Add("4d3103001100170" + cLot);
                                newList.Add("410005001100187" + cLot);
                                break;

                            case "73":
                                //DateTime.TryParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", null, DateTimeStyles.None, out dMfg);
                                //dExp = dMfg.AddMonths(nExpMonth);
                                newList.Add("422200000800060" + PadCenter(cCustSize, 7));
                                newList.Add("491100000150090Quantidade/Cantidad:");
                                newList.Add("4911000020000901.000 unds");
                                newList.Add("491100000150120Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                                newList.Add("491100002000140" + dMfg.ToString("MM/yyyy"));
                                newList.Add("491100000150140Fecha de Fabricaci" + Chr(Convert.ToInt32("162")) + "n:");
                                newList.Add("491100000150170Lote:");
                                newList.Add("491100002000170" + cCustOrderLot);
                                newList.Add("401100000450190" + cPo.PadRight(10) + " " + cCtn.PadRight(8) + " " + cLot.PadRight(12));

                                break;

                            case "58":
                                newList.Add("1Y1100000200015LOT");
                                newList.Add("421100001100035" + cCustOrderLot);
                                newList.Add("411200000200065Gross Wt.");
                                newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200090Net Wt.");
                                newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200115PO.");
                                newList.Add("421100001100115" + cPo);
                                newList.Add("411200000200140Case No.");
                                newList.Add("421100001100140" + cCtn);
                                newList.Add("1Y1100000200145MFG");
                                newList.Add("421100001100170" + dMfg.ToString("MM-yyyy"));
                                newList.Add("401105002000190" + cLot);
                                break;

                            case "59":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("421200001800090" + PadCenter(cCustSize, 10));
                                newList.Add("411200000200080Ctn. No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("1Y1100000150100MFG");
                                newList.Add("421100001100125" + (dMfg.ToString("MMM-yyyy")));
                                newList.Add("1Y1100000150150LOT");
                                newList.Add("4d3103001100175" + cLot);
                                newList.Add("410005001100187" + cLot);
                                break;

                            case "61":
                                newList.Add("410005000200023" + cPo);
                                newList.Add("422400002000090" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200080Ctn. No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("411200000200110Gross Wt.");
                                newList.Add("421100001100110" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200140Net Wt.");
                                newList.Add("421100001100140" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200170Lot No.");
                                newList.Add("4d3103001100175" + cLot);
                                newList.Add("400005001100187" + cLot);
                                break;

                            case "44":
                                newList.Add("191100000800070" + PadCenter(cPo, 15));
                                newList.Add("191000000510200Ctn.no.");
                                newList.Add("191000000300200" + cCtn);
                                newList.Add("1D3100000150070" + cLot);
                                break;

                            case "45":
                                newList.Add("491000000400035Ctn.No.");
                                newList.Add("491000001300035" + cCtn);
                                newList.Add("491000000400055Mfg. Date.");
                                newList.Add("491100001300055" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("491000000400075Lot No.");
                                newList.Add("4d3102501300080" + cLot);
                                newList.Add("400002501300090" + PadCenter(cLot, 20));
                                newList.Add("401100000400095" + cPo);
                                break;

                            case "47":
                                newList.Add("491100000150030" + PadCenter(cPo, 15));
                                newList.Add("491000000150055Lot No.");
                                newList.Add("4d3102500150080" + cLot);
                                newList.Add("400002500150090" + PadCenter(cLot, 20));
                                newList.Add("491000001400050Ctn.No.");
                                newList.Add("491000002200050" + cCtn);
                                newList.Add("491000001400065Mfg.Date. " + dMfg.ToString("MMM-yyyy"));
                                newList.Add("491000001400080Exp.Date. " + dExp.ToString("MMM-yyyy"));
                                break;

                            case "97":
                                newList.Add("491000000400035Ctn.No.");
                                newList.Add("491000001300035" + cCtn);
                                newList.Add("491000000400055Mfg. Date.");
                                newList.Add("491100001300055" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("491000000400075Lot No.");
                                newList.Add("4d3102501300080" + cLot);
                                newList.Add("400002501300090" + cLot);
                                newList.Add("401100000400095" + cPo);
                                break;

                            case "98":
                                cCustOrderLot = cPo + "-" + cCustRefNo;
                                newList.Add("410005000200030" + cPo);
                                newList.Add("410005001800030" + cLot);
                                newList.Add("422400000100120" + PadCenter(cCustSize, 11));
                                newList.Add("411200000100200Ctn. No.");
                                newList.Add("421100000900198" + cCtn);
                                newList.Add("421100000900245" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100000900300" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100220LOGO");
                                newList.Add("420005000900348" + cCustOrderLot);

                                break;

                            case "99":
                                newList.Add("491100000200035" + "PO NO:");
                                newList.Add("491100000900035" + cPo);
                                newList.Add("431100002200060" + PadCenter(cCustSize, 3));
                                newList.Add("491000002200080Ctn.No.");
                                newList.Add("491000002200100" + cCtn);
                                newList.Add("4d3100000900078" + cLot);
                                newList.Add("491100000200100" + "LOT NO:");
                                newList.Add("491100000900100" + cLot);
                                break;

                            case "55":
                                newList.Add("411205000200040" + "Lot No.");
                                newList.Add("421105001500040" + cPo);
                                newList.Add("411205000200080" + "Batch No.");
                                newList.Add("421105001500080" + cLot);
                                newList.Add("1Y1100000200100MFG");
                                newList.Add("400000000600105Manufacturing");
                                newList.Add("400000000600113date:");
                                newList.Add("400000000600123Date");
                                newList.Add("400000000600131de fabrication:");
                                newList.Add("421105001500130" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000200150EXP");
                                newList.Add("400000000600157Expiration");
                                newList.Add("400000000600165date:");
                                newList.Add("400000000600175Date");
                                newList.Add("400000000600183d' expiration:");
                                newList.Add("421105001500182" + dExp.ToString("yyyy-MM"));
                                newList.Add("400005002600190" + cCtn);
                                break;

                            case "56":
                                newList.Add("111200000600020" + "Batch No.");
                                newList.Add("121100000650130" + cLot);
                                newList.Add("111100000100250" + cCtn);
                                break;

                            case "57":
                                newList.Add("1Y1100000200025LOT");
                                newList.Add("421100001100045" + cCustOrderLot);
                                newList.Add("411200000200080Gross Wt.");
                                newList.Add("421100001100080" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200110Net Wt.");
                                newList.Add("421100001100110" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200140PO");
                                newList.Add("421100001100140" + cPo);
                                newList.Add("411200000200170Case No.");
                                newList.Add("421100001100170" + cCtn);
                                newList.Add("401105002000190" + cLot);
                                break;

                            case "83":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100001000051" + cCustOrderLot);
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100001000179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;

                            case "85":
                                //String[] aYear = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                                //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                                //if (nPos > -1)
                                //{
                                //    string cYear = DateTime.Today.ToString("yyyy").Substring(0, 3) + (nPos + 1).ToString();
                                //    DateTime.TryParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", null, DateTimeStyles.None, out dMfg);
                                //}
                                //dExp = dMfg.AddMonths(nExpMonth);
                                newList.Add("191000000650020" + "Lot No.");
                                newList.Add("191000000650100" + cCustOrderLot);
                                newList.Add("1Y1100000250020MFG_H");
                                newList.Add("191000000350100" + dMfg.ToString("MMM yyyy"));
                                newList.Add("101100000150100" + cCtn + "   " + cLot);
                                break;

                            case "87":
                                cGs1 = "01" + cOuterGtn14_Code + "10" + cLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cLot;
                                newList.Add("400005000150020" + cPo);
                                newList.Add("422300001600095" + cCustSize);
                                newList.Add("411200000150060Carton No:");
                                newList.Add("421100000150083" + cCtn);
                                newList.Add("411200000150120GS1 code:");
                                newList.Add("4e3103000150155C&G" + cGs1);
                                newList.Add("400005000150170" + cReadable);
                                break;

                            case "107":
                                newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                                newList.Add("111100000800240" + cCtn);
                                newList.Add("121100000550020" + "LOT NO.:");
                                newList.Add("141100000150020" + cLot);
                                break;

                            case "34":
                                newList.Add("121100000700070" + cPo);
                                newList.Add("121000000300200" + cCtn);
                                newList.Add("1D3100000100070" + cLot);
                                break;

                            case "36":
                                newList.Add("4e2202500500040C" + cCustOrderLot);
                                newList.Add("411100000500055" + cCustOrderLot);
                                newList.Add("411100000500070" + cLot);
                                newList.Add("411100001700090" + cCtn);
                                break;

                            case "89":
                                newList.Add("100005000600040" + cOrderNum);
                                newList.Add("111000000300040" + cLot);
                                newList.Add("191000000500180Ctn.No.");
                                newList.Add("191000000270180" + cCtn);
                                break;

                            case "90":
                                //dMfg = dEtd;
                                //dExp = dMfg.AddMonths(nExpMonth);
                                newList.Add("1Y1100000150020LOT");
                                newList.Add("421100001000042" + cCustOrderLot);
                                newList.Add("411200000150070PO. No.");
                                newList.Add("421100001000067" + cPo);
                                newList.Add("411200000150095Ctn. No.");
                                newList.Add("421100001000092" + cCtn);
                                newList.Add("1Y1100000150100MFG");
                                newList.Add("421100001000125" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150135EXP");
                                newList.Add("421100001000162" + dExp.ToString("yyyy-MM"));
                                newList.Add("410000001850185" + cLot);
                                break;

                            case "92":
                                cGs1 = "10" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(10)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;
                                newList.Add("2e2105010350105C&G" + cGs1);
                                newList.Add("200000010350090" + cReadable);
                                newList.Add("242200007500100" + PadCenter(cCustSize, 3));
                                newList.Add("2X1110005350080" + "L001500");
                                newList.Add("201100010350070" + "PO No");
                                newList.Add("221100009850054" + cPo);
                                newList.Add("201100008150070" + "Mfg Date");
                                newList.Add("221100007550054" + dEtd.ToString("yyyy-MM")); //Shipment ETD date
                                newList.Add("201100006500070" + "Ctn No");
                                newList.Add("291100006050054" + cCtn);
                                newList.Add("200000006500020" + cLot);
                                newList.Add("2X1110005350050" + "L001500");
                                newList.Add("201100010350040" + "Lot No");
                                newList.Add("221100009850024" + cCustOrderLot);
                                newList.Add("201100008150040" + "Exp Date");
                                newList.Add("221100007550024" + dExp.ToString("yyyy-MM"));
                                newList.Add("2X1110005250010" + "L200001");
                                newList.Add("242200005000080" + PadCenter(cCustSize, 3));      // cCsize.Trim());
                                newList.Add("2e2105003250105C&G" + cGs1);
                                newList.Add("200000003250090" + cReadable);
                                newList.Add("2X1110000100080" + "L001500");
                                newList.Add("201100005100070" + "PO No");
                                newList.Add("221100004600054" + cPo);
                                newList.Add("201100002900070" + "Mfg Date");
                                newList.Add("221100002300054" + dEtd.ToString("yyyy-MM"));
                                newList.Add("201100001250070" + "Ctn No");
                                newList.Add("291100000800054" + cCtn);
                                newList.Add("200000001250020" + cLot);
                                newList.Add("2X1110000100050" + "L001500");
                                newList.Add("201100005100040" + "Lot No");
                                newList.Add("221100004600024" + cCustOrderLot);
                                newList.Add("201100002900040" + "Exp Date");
                                newList.Add("221100002300024" + dExp.ToString("yyyy-MM"));

                                objOuterLabelDTO.barcodeToValidate = dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                objOuterLabelDTO.countToValidate = cGs1.Length;

                                break;

                            case "17":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4);
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4);
                                newList.Add("2e1109009850105C&G" + cGs1);
                                newList.Add("201100009850090" + cReadable);
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400007000110" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100007000110" + PadCenter(cCustSize, 5));

                                newList.Add("2X1110005350080L001500");
                                newList.Add("201100010350070Gross Wt");
                                newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100009050070Exp Date");
                                newList.Add("221100008350054" + dExp.ToString("MMM-yyyy"));
                                newList.Add("201100007200070PO No");
                                newList.Add("291100006700054" + cPo);

                                newList.Add("2X1110005350050L001500");
                                newList.Add("201100010350040Nett Wt");
                                newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100009050040Reorder No");
                                newList.Add("221100008350024" + cProdRefNo);
                                newList.Add("201100007200040Ctn No");
                                newList.Add("221100006700024" + cCtn);

                                newList.Add("2X1110005250010L200001");
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400004500110" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100004500110" + PadCenter(cCustSize, 5));

                                newList.Add("2e1109002750105C&G" + cGs1);
                                newList.Add("201100002750090" + cReadable);

                                newList.Add("2X1110000100080L001500");
                                newList.Add("201100005100070Gross Wt");
                                newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100003800070Exp Date");
                                newList.Add("221100003100054" + dExp.ToString("MMM-yyyy"));
                                newList.Add("201100001950070PO No");
                                newList.Add("291100001450054" + cPo);

                                newList.Add("2X1110000100050L001500");
                                newList.Add("201100005100040Nett Wt");
                                newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100003800040Reorder No");
                                newList.Add("221100003100024" + cProdRefNo);
                                newList.Add("201100001950040Ctn No");
                                newList.Add("221100001450024" + cCtn);
                                break;

                            case "18":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("421100000100145PO No.");
                                newList.Add("4e1100001000165B" + cPo);
                                newList.Add("401100001000175" + cPo);
                                newList.Add("411200000100210Ctn. No.");
                                newList.Add("421100001000208" + cCtn);
                                newList.Add("411200000100245Gross Wt.");
                                newList.Add("421100001000243" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000100280Net Wt.");
                                newList.Add("421100001000278" + nNett.ToString("0.0 Kg"));
                                newList.Add("421100000100315Lot No.");
                                newList.Add("4e1105000100373B" + cLot);
                                newList.Add("401105000100383" + cLot);
                                break;

                            case "117":
                                cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                newList.Add("410005002400030" + cCtn);
                                newList.Add("422400000300100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000200130PO No.");
                                newList.Add("421100001000130" + cPo);
                                newList.Add("411200000200165Lot No.");
                                newList.Add("4e1103001000170C&G" + cGs1);
                                newList.Add("410005001000187" + cReadable);
                                newList.Add("100000002800115" + cLot);
                                break;

                            case "116":
                                newList.Add("410005000100030" + cPo);
                                newList.Add("411200000100058Ctn. No.");
                                newList.Add("421100000820058" + cCtn);
                                newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000100060MFG");
                                newList.Add("421100000820085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100095EXP");
                                newList.Add("421100000820121" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100130LOT");
                                newList.Add("421100000820149" + cCustOrderLot);
                                newList.Add("4d3103000820185" + cLot);
                                newList.Add("410005000820200" + cLot);
                                break;

                            case "115":
                                cCustOrderLot = dMfg.ToString("ddMMyyyy") + cProdRefNo;
                                newList.Add("411200000100058Ctn. No.");
                                newList.Add("421100000820058" + cCtn);
                                newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000100060MFG");
                                newList.Add("421100000820085" + dMfg.ToString("dd MMM yyyy"));
                                newList.Add("1Y1100000100095EXP");
                                newList.Add("421100000820121" + dExp.ToString("dd MMM yyyy"));
                                newList.Add("1Y1100000100130LOT");
                                newList.Add("421100000820149" + cCustOrderLot);
                                newList.Add("4d3103000820185" + cLot);
                                newList.Add("410005000820200" + cLot);
                                break;

                            case "114":
                                //DateTime.TryParseExact(cCustOrderLot.Substring(0, 4) + "01", "yyMMdd", null, DateTimeStyles.None, out dExp);
                                cGs1 = "01" + cOuterGtn14_Code + "17" + cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + cCustOrderLot.Substring(0, 6) + "(10)" + Right(cCustOrderLot, 10);
                                //dMfg = dExp.AddMonths(-nExpMonth);
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200055Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150070H_EXP_JP");
                                newList.Add("421100001000085" + dExp.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150100H_LOT_JP");
                                newList.Add("421105001000115" + cCustOrderLot);
                                newList.Add("410005000150140" + "GS1 code:");
                                newList.Add("4e1103000150180C&G" + cGs1);
                                newList.Add("400000000150190" + cReadable);

                                objOuterLabelDTO.barcodeToValidate = cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                                objOuterLabelDTO.countToValidate = cGs1.Length;

                                break;

                            case "113":
                                newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                                newList.Add("111100000800240" + cCtn);
                                newList.Add("111100000650020" + "LOT NO.:");
                                newList.Add("121100000600240" + PadCenter(cCustSize, 5));
                                newList.Add("141100000230020" + cLot);
                                newList.Add("111100000050020" + "Exp Date: " + dExp.ToString("MMM yyyy")); ;
                                break;

                            case "41":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("422400000100117" + PadCenter(cCustSize, 11));
                                newList.Add("421100000000159" + PadCenter(cBrand, 25));
                                newList.Add("411200000100205Ctn. No.");
                                newList.Add("421100001100203" + cCtn);
                                newList.Add("421100001100248" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100001100294" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100220LOGO");
                                newList.Add("4d3105001100373" + cLot);
                                newList.Add("410005001100388" + cLot);
                                break;

                            case "96":
                                //DateTime.TryParseExact(cCustOrderLot.Substring(0, 4) + "01", "yyMMdd", null, DateTimeStyles.None, out dExp);
                                cGs1 = "01" + cOuterGtn14_Code + "17" + cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + cCustOrderLot.Substring(0, 6) + "(10)" + Right(cCustOrderLot, 10);
                                //dMfg = dExp.AddMonths(-nExpMonth);

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200055Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060EXP");
                                newList.Add("421100001000085" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150100LOT");
                                newList.Add("421105001000115" + Right(cCustOrderLot, 10));
                                newList.Add("410005000150140" + "GS1 code:");
                                newList.Add("4e1103000150180C&G" + cGs1);
                                newList.Add("400000000150190" + cReadable);

                                objOuterLabelDTO.barcodeToValidate = cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                                objOuterLabelDTO.countToValidate = cGs1.Length;



                                break;

                            case "94":
                                string cCSizeNum = string.Empty, cCsizeStr = string.Empty;
                                string s = cCustSize;
                                foreach (char c in s)
                                {
                                    if (char.IsDigit(c) && c != '.')
                                    {
                                        cCSizeNum += c.ToString();
                                    }
                                    else
                                    {
                                        cCsizeStr += c.ToString();
                                    }
                                }

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000085" + PadCenter(cCSizeNum, 5));
                                newList.Add("422300002000145" + PadCenter(cCsizeStr, 5));
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                break;

                            case "93":
                                cCustOrderLot = dMfg.ToString("yyMMdd") + cPline;
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;
                                newList.Add("422200000150065" + PadCenter(cCustSize, 11));
                                newList.Add("490000000150110Caixa No /");
                                newList.Add("491100000150130Carton No :");
                                newList.Add("491100002000130" + cCtn);
                                newList.Add("491100000150160" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                                newList.Add("491100000150180Manufacturing Date:");
                                newList.Add("491100002000185" + dMfg.ToString("MM/yyyy"));
                                newList.Add("491100000150210Validade/Expiry Date:");
                                newList.Add("491100002000210" + dExp.ToString("MM/yyyy"));
                                newList.Add("491100000150240Lote:");
                                newList.Add("491100002000240" + cCustOrderLot);
                                newList.Add("401100000150255" + cPo + "  " + cLot);
                                newList.Add("4e2105000150320C&G" + cGs1);
                                newList.Add("400000000150330" + cReadable.ToString());
                                break;

                            case "66":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200058Ctn. No.");
                                newList.Add("421100001000058" + cCtn);
                                newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060MFG");
                                newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150095EXP");
                                newList.Add("421100001000121" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150130LOT");
                                newList.Add("421100001000149" + cCustOrderLot);
                                newList.Add("4d3103001000185" + cLot);
                                newList.Add("410005001000200" + cLot);
                                break;

                            case "65":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                break;

                            case "63":
                                cCustOrderLot = cOuterGtn14_Code + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1);
                                newList.Add("411200000200045PO No.");
                                newList.Add("421100001000045" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("422300001850145" + PadCenter(cCustSize, 5));
                                newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4e1103001000184C&G" + "10" + cCustOrderLot);
                                newList.Add("410005001000199(10)" + cCustOrderLot);
                                newList.Add("100000002800125" + cLot);
                                break;

                            case "123":
                                newList.Add("421100000150030" + "LOT NO:");
                                newList.Add("421100001050030" + cCustOrderLot);
                                newList.Add("1Y1100000200040EXP");
                                newList.Add("421100001050065" + dExp.ToString("yyyy") + "-" + dExp.ToString("MM") + "-" + "01");
                                newList.Add("431100002200070" + PadCenter(cCustSize, 5));
                                newList.Add("411100001050090" + cCtn);
                                newList.Add("411100001700090" + cLot);
                                break;

                            case "124":
                                cGs1 = "010" + cOuterGtn14_Code + "12" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + cCustOrderLot;
                                cReadable = "(01)0" + cOuterGtn14_Code.Trim() + "(12)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + cCustOrderLot;
                                cExpYear = (Convert.ToInt16((dExp - dMfg).TotalDays / 365)).ToString();
                                cPackDate = dMfg.ToString("MM/yyyy");

                                newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize); //Customer size
                                newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA"); //Product and packing size
                                newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS"); //Product and packing size
                                newList.Add("440000001950130" + Right(cCustRefNo, 6)); //SKU code
                                newList.Add("4d3104000150130" + cOuterGtn14_Code); //DUN14 barcode
                                newList.Add("400000000150140" + cOuterGtn14_Code); //DUN14 HMR text
                                newList.Add("4e1103002650180C" + cCustOrderLot); //Customer lot (YYMMDDLN) barcode
                                newList.Add("410000000150160" + "Data de embalagem"); //Packing date Description
                                newList.Add("410000000150175" + cPackDate); //Packing date
                                newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg")); //Gross weigh
                                newList.Add("410000002150195" + "LOTE: " + cCustOrderLot); //Customer lot (YYMMDDLN) HMR text
                                newList.Add("4X1110000150198" + "L002330"); //Draw Line
                                newList.Add("4X1110001950184" + "L030002"); //Draw Line
                                newList.Add("410000000150215" + "FAB.: " + cPackDate + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                                newList.Add("410000002150215" + "VAL.: " + cExpYear + " ANOS"); //Number of expiry years
                                newList.Add("4e1106000150280C&G" + cGs1); //GS1-128 barcode
                                newList.Add("400000000150290" + cReadable); //GS1-128 HMR text
                                newList.Add("300000003650270" + cOrderNum); // Work order number
                                newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize); //Hartalega internal lot, Carton number, Hartalega internal size
                                break;

                            case "125":
                                newList.Add("442200000500100" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200145" + "Batch No.");
                                newList.Add("421100001100140" + cLot);
                                newList.Add("411100002200175" + cCtn);
                                break;

                            case "01":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150140PO No.");
                                newList.Add("421100001100138" + cPo);
                                newList.Add("411200000150180Mfg. Date");
                                newList.Add("421100001100178" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150220Ctn. No.");
                                newList.Add("421100001100218" + cCtn);
                                newList.Add("411200000150260Gross Wt.");
                                newList.Add("421100001100258" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150300Net Wt.");
                                newList.Add("421100001100298" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150340Lot No.");
                                newList.Add("421100002500338" + cHartaSize);
                                newList.Add("4d3105001100369" + cLot);
                                newList.Add("401105001100379" + cLot);
                                break;
                            #endregion old label set

                            #region new label set 25/07/19 LabelSetNamingProject
                            #region Set 01
                            //formerly outer label set 1
                            case "LAB-OC-HTLG-0001":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150140PO No.");
                                newList.Add("421100001100138" + cPo);
                                newList.Add("411200000150180Mfg. Date");
                                newList.Add("421100001100178" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150220Ctn. No.");
                                newList.Add("421100001100218" + cCtn);
                                newList.Add("411200000150260Gross Wt.");
                                newList.Add("421100001100258" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150300Net Wt.");
                                newList.Add("421100001100298" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150340Lot No.");
                                newList.Add("421100002500338" + cHartaSize);
                                newList.Add("4d3105001100369" + cLot);
                                newList.Add("401105001100379" + cLot);
                                break;
                            #endregion
                            #region Set 130
                            //formerly outer label set 130
                            case "LAB-OC-HTLG-0084":
                                newList.Add("411100000150043Ctn. No.: " + cCtn);
                                newList.Add("411100000150058Gross Weight: " + nGross.ToString("0.0 Kg"));
                                newList.Add("411100000150075Net Weight: " + nNett.ToString("0.0 Kg"));
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150080MFG");
                                newList.Add("421100001000108" + dMfg.ToString("MMM yyyy"));
                                newList.Add("1Y1100000150116EXP");
                                newList.Add("421100001000141" + dExp.ToString("MMM yyyy"));
                                newList.Add("1Y1100000150156LOT");
                                newList.Add("4d3103001000178" + cLot);
                                newList.Add("410005001000193" + cLot);
                                break;
                            #endregion
                            #region Set 15
                            //formerly outer label set 15
                            case "LAB-OC-HTLG-0010":
                                lettercount = 0;
                                cSubBrand2 = string.Empty;
                                separators[0] = " ";
                                words = cBrand.Split(separators, StringSplitOptions.RemoveEmptyEntries);
                                foreach (var word in words)
                                {
                                    lettercount += word.Length;
                                    if (lettercount >= 25)
                                    {
                                        cSubBrand2 = word;
                                    }
                                }
                                if (cSubBrand2 != string.Empty)
                                {
                                    newList.Add("421200000000055" + PadCenter(cBrand.Replace(cSubBrand2, "").Trim(), 25));
                                    newList.Add("421200000150100" + PadCenter(cSubBrand2.Trim(), 25));
                                    newList.Add("411200000150170Size");
                                    newList.Add("422200001100168" + cCustSize);
                                    newList.Add("411200000150205PO No.");
                                    newList.Add("421100001100203" + cPo);
                                    newList.Add("411200000150240Ctn. No.");
                                    newList.Add("421100001100238" + cCtn);
                                    newList.Add("411200000150275Gross Wt.");
                                    newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));
                                    newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));
                                    newList.Add("411200000150345Lot No.");
                                    newList.Add("421100002500343" + cHartaSize);
                                    newList.Add("4d3105001100374" + cLot);
                                    newList.Add("401105001100384" + cLot);
                                }
                                else
                                {
                                    newList.Add("421200000150055" + PadCenter(cBrand, 25));
                                    newList.Add("411200000150120Size");
                                    newList.Add("422200001100118" + cCustSize);
                                    newList.Add("411200000150165PO No.");
                                    newList.Add("421100001100163" + cPo);
                                    newList.Add("411200000150210Ctn. No.");
                                    newList.Add("421100001100208" + cCtn);
                                    newList.Add("411200000150255Gross Wt.");
                                    newList.Add("421100001100253" + nGross.ToString("0.0 Kg"));
                                    newList.Add("411200000150300Net Wt.");
                                    newList.Add("421100001100298" + nNett.ToString("0.0 Kg"));
                                    newList.Add("411200000150345Lot No.");
                                    newList.Add("421100002500343" + cHartaSize);
                                    newList.Add("4d3105001100374" + cLot);
                                    newList.Add("401105001100384" + cLot);
                                }

                                break;
                            #endregion
                            #region Outer Label 162
                            //formerly outer label set 162
                            case "LAB-OC-HTLG-0102":
                                newList.Add("421100100150035" + "BATCH");
                                newList.Add("421100001000035" + cLot);
                                newList.Add("1Y1100000150045" + "MFG");
                                newList.Add("421100001000070" + dMfg.ToString("MM-yyyy"));
                                newList.Add("1Y1100000150085" + "EXP");
                                newList.Add("421100001000110" + dExp.ToString("MM-yyyy"));
                                newList.Add("1Y1100000150130" + "LOT");
                                newList.Add("421100001000150" + cCustOrderLot);//double check cust lot parameter
                                newList.Add("421100000150185" + "CTN.");
                                newList.Add("421100001000185" + cCtn);
                                break;
                            #endregion
                            #region Outer Label 211
                            //formerly outer label set 211
                            case "LAB-OC-HTLG-0130":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyyyMM") + "10" + cPo;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyyyMM") + "(10)" + cPo;

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200055Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060EXP");
                                newList.Add("421100001000085" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150100LOT");
                                newList.Add("421105001000115" + cLot);
                                newList.Add("410005000150140" + "GS1 code:");
                                newList.Add("4e1103000150180C&G" + cGs1);
                                newList.Add("400000000150190" + cReadable);

                                break;
                            #endregion
                            #region Outer Label 217
                            //formerly outer label set 217
                            case "LAB-OC-HTLG-0134":

                                newList.Add("410005000200035" + cPo);
                                newList.Add("411200000200065" + "Ctn.:");
                                newList.Add("421100000750065" + cCtn);
                                newList.Add("462200002050145" + cCustSize);
                                newList.Add("1Y1100000150072" + "MFG");
                                newList.Add("421100000750102" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150109" + "EXP");
                                newList.Add("421100000750135" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150147" + "LOT");
                                newList.Add("4d3103000750174" + cLot);
                                newList.Add("410005000750189" + cLot);
                                break;
                            #endregion
                            #region Outer Label 216
                            //formerly outer label set 216
                            case "LAB-OC-HTLG-0133":

                                cCustOrderLot = cPo.Substring(2, 3) + cProdRefNo;
                                newList.Add("D11");
                                newList.Add("491100100150061" + "Lot Number");
                                newList.Add("491100100150109" + "Date of");
                                newList.Add("491100100150116" + "Manufacture");
                                newList.Add("491100100150160" + "Date of");
                                newList.Add("491100100150167" + "Expiry");
                                newList.Add("D22");
                                newList.Add("410005000150025" + cPo);
                                newList.Add("1Y1100000150030" + "LOT");
                                newList.Add("421100000650051" + cCustOrderLot);
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150068" + "MFG");
                                newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150120" + "EXP");
                                newList.Add("421100000650147" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("411200000150193" + "Case.");
                                newList.Add("421100000650191" + cCtn);
                                newList.Add("410005001850188" + cLot);

                                break;
                            #endregion
                            #region Outer Label 224
                            //formerly outer label set 224
                            case "LAB-OC-HLYD-0005":
                                cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                                newList.Add("211100003690076" + cLot.Substring(0, 9));  //Check substr;
                                newList.Add("211100002190076" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("211100001020076" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("201100003690063" + cReadable);   //Readable barcode - check paramater
                                newList.Add("2e1105003690011" + "C&G" + cGs1);     //GS1 barcode - check paramater
                                newList.Add("201100000400010" + cCtn);     //GS1 barcode - check paramater
                                break;
                            #endregion
                            #region Outer Label 222
                            //formerly outer label set 222
                            case "LAB-OC-GLOV-0001":

                                newList.Add("491100200200063" + "FBA");
                                newList.Add("1X1100000150060" + "l00050350");
                                newList.Add("1X1100000150133" + "l00090350");
                                newList.Add("3z2200003600320" + "F2002000" + cOuterGtn14_Code + cCtn);
                                newList.Add("4e1111000250260" + cOuterGtn14_Code + cCtn);
                                newList.Add("400000000900270" + cOuterGtn14_Code + cCtn);
                                newList.Add("1X1100000150280" + "l00050260");
                                newList.Add("D11");
                                newList.Add("420000001000030" + "PLEASE LEAVE THIS LABEL UNCOVERED");
                                newList.Add("491100200200080" + "SHIP FROM:");
                                newList.Add("491100200200090" + "Port of Los Angeles");
                                newList.Add("491100200200100" + "425 S. Palos Verdes St.");
                                newList.Add("491100200200110" + "San Pedro, CA 90731");
                                newList.Add("491100200200120" + "United States");
                                newList.Add("491100201800080" + "SHIP TO:");
                                newList.Add("491100201800090" + "FBA: Glovmart");
                                newList.Add("491100201800100" + "Amazon.com Services, Inc.");
                                newList.Add("491100201800110" + "24300 Nandina Ave");
                                newList.Add("491100201800120" + "Moreno Valley, CA 92551-9534");
                                newList.Add("491100201800130" + "United States");
                                newList.Add("491100202150300" + "Single SKU");
                                newList.Add("491100301750315" + cProdRefNo);
                                newList.Add("491100302350327" + "Qty 5");
                                newList.Add("491100200250317" + cOrderNum + "     " + cCustSize);
                                newList.Add("491100200250327" + "CTN:" + cCtn + "    " + cLot);

                                break;
                            #endregion
                            #region Outer Label 4
                            //formerly outer label set 4
                            case "LAB-OC-HTLG-0003":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135" + "PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170" + "Mfg. Date");
                                newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150205" + "Exp. Date");
                                newList.Add("421100001100203" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150240" + "Ctn. No.");
                                newList.Add("421100001100238" + cCtn);
                                newList.Add("411200000150275" + "Gross Wt.");
                                newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));//gross wt
                                newList.Add("411200000150310" + "Net Wt.");
                                newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));//nett wt
                                newList.Add("411200000150345" + "Lot No.");
                                newList.Add("421100002500343" + cHartaSize);//internal sz
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                                break;
                            #endregion
                            #region Outer Label 215
                            //formerly outer label set 215
                            case "LAB-OC-HTLG-0132":

                                cGs1 = "02" + cOuterGtn14_Code + "10" + cCustOrderLot + "17" + dExp.ToString("yyMMdd") + "37" + cProdRefNo;
                                cReadable = "(02)" + cOuterGtn14_Code + "(10)" + cCustOrderLot + "(17)" + dExp.ToString("yyMMdd") + "(37)" + cProdRefNo;

                                newList.Add("1Y1100000200020" + "LOT");
                                newList.Add("1Y1100000200050" + "MFG");
                                newList.Add("1Y1100001850050" + "EXP");
                                newList.Add("491100100700040" + cCustOrderLot);
                                newList.Add("491100100700080" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491100102300080" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("4e1105000200150" + "C&G" + cGs1);
                                newList.Add("400000000200160" + cReadable);
                                newList.Add("4e1105000200230" + "C&G" + cOuterGtn14_Code);
                                newList.Add("400000000200240" + cOuterGtn14_Code);
                                newList.Add("411100000200280" + "CTN: " + cCtn + "   " + cLot + "   " + cCustSize);

                                break;
                            #endregion
                            #region Outer Label 214
                            //formerly outer label set 214
                            case "LAB-OC-SPGL-0001":

                                newList.Add("H15");
                                newList.Add("401100000150040" + "RDNMD-METAL DETECTABLE NITRILE");
                                newList.Add("D22");
                                newList.Add("421100002500050" + "RDNMD");
                                newList.Add("491100000150075" + "SIZE");
                                newList.Add("491100001200075" + cCustSize);
                                newList.Add("491100002500075" + "PO NO.: " + cPo);
                                newList.Add("4e1105002500135" + "C&G" + cDistCountry);
                                newList.Add("400000002650145" + cDistCountry);
                                newList.Add("491100000150100" + "MFG DATE");
                                newList.Add("491100001200100" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("491100000150125" + "EXP DATE");
                                newList.Add("491100001200125" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("491100000150150" + "LOT");
                                newList.Add("491100001200150" + cLot);
                                newList.Add("491100000150175" + "QTY");
                                newList.Add("491100001200175" + "(10 inner x " + cProdRefNo + " pcs) by weight");
                                newList.Add("491100000150280" + "CTN. NO.");
                                newList.Add("491100001200280" + cCtn);
                                newList.Add("4e1105001200235" + "C&G" + "01" + cOuterGtn14_Code);
                                newList.Add("400000001350245" + "(01)" + cOuterGtn14_Code);
                                newList.Add("491100001050075" + ":");
                                newList.Add("491100001050100" + ":");
                                newList.Add("491100001050125" + ":");
                                newList.Add("491100001050150" + ":");
                                newList.Add("491100001050175" + ":");
                                newList.Add("491100001050280" + ":");
                                newList.Add("Q0002");

                                break;
                            #endregion
                            #region Outer Label 213
                            //formerly outer label set 213
                            case "LAB-OC-MEDL-0006":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                                newList.Add("D11");
                                newList.Add("421100000150050" + "Gross Weight/Poids");
                                newList.Add("421100000150060" + "brut/Peso bruto:");
                                newList.Add("421100000150078" + "Net Weight/Poids");
                                newList.Add("421100000150088" + "net/Peso neto:");
                                newList.Add("421100000150187" + "Case #/N de caisse:");
                                newList.Add("491100100150155" + "Date of Manufacture");
                                newList.Add("491100100150163" + "Date de Fabrication");
                                newList.Add("491100100150171" + "Fecha de Fabricaci" + Chr(162) + "n");
                                newList.Add("491100100620187" + Chr(167));
                                newList.Add("D22");
                                newList.Add("1Y1100000150015" + "LOT");
                                newList.Add("421100001350035" + cCustOrderLot);
                                newList.Add("421100001350060" + nGross.ToString("0.0 Kgs"));
                                newList.Add("421100001350085" + nNett.ToString("0.0 Kgs"));
                                newList.Add("411100000150108" + "P.O.:" + Chr(224));
                                newList.Add("421100001350110" + cPo);
                                newList.Add("1Y1100000150113" + "MFG");
                                newList.Add("421100001350150" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("421100001350190" + cCtn);
                                newList.Add("401105002200190" + cLot);

                                break;
                            #endregion
                            #region Outer Label 212
                            //formerly outer label set 212
                            case "LAB-OC-HTLG-0131":

                                newList.Add("410005000150025" + cPo);
                                newList.Add("1Y1100000150040" + "LOT_T_V");
                                newList.Add("421100001000062" + cCustOrderLot);
                                newList.Add("422300002300138" + cCustSize);
                                newList.Add("1Y1100000150080" + "MFG_T_V");
                                newList.Add("421100001000110" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("411200000150173" + "Case.");
                                newList.Add("421100001000170" + cCtn);
                                newList.Add("410005001850188" + cLot);

                                break;
                            #endregion
                            #region Outer Label 210
                            //formerly outer label set 210
                            case "LAB-OC-KCGS-0002":
                                cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                                newList.Add("211100003690145" + cLot.Substring(0, 9));  //Check substr;
                                newList.Add("211100002190145" + dMfg.ToString("yyyy-MM"));
                                newList.Add("211100001020145" + dExp.ToString("yyyy-MM"));
                                newList.Add("211100003690128" + cCtn);
                                newList.Add("201100003690113" + cReadable);   //Readable barcode - check paramater
                                newList.Add("2e1105003690061" + "C&G" + cGs1);     //GS1 barcode - check paramater
                                newList.Add("Q0002");
                                break;
                            #endregion
                            #region Outer Label 208
                            //formerly outer label print 208
                            case "LAB-OC-DASH-0001":

                                cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "10" + cPo;
                                cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(10)" + cPo;

                                newList.Add("410005000150030" + cPo);
                                newList.Add("411200000150055" + "Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000100060" + "MFG");
                                newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100100" + "LOT");
                                newList.Add("421105001000120" + cPo);
                                newList.Add("4e1105000100180" + "C&G" + cGs1);
                                newList.Add("400000000100190" + cReadable);
                                break;
                            #endregion
                            #region Outer Label 206
                            //formerly outer label print 206
                            case "LAB-OC-ANSL-0009":

                                newList.Add("411200000200060" + "LOT NO.");
                                newList.Add("4e1106001050080" + "C&G" + Right(cPo, 5));
                                newList.Add("410005001050095" + Right(cPo, 5));
                                newList.Add("411200000200120" + "CTN. NO.");
                                newList.Add("421100001050120" + cCtn);
                                newList.Add("411200000200150" + "MFG.");
                                newList.Add("421100001050148" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("411100000200173" + "MFG. REF.");
                                newList.Add("411100001050173" + cLot);
                                newList.Add("422200001300190" + PadCenter(cCustSize, 11));
                                break;
                            #endregion
                            #region Outer Label 202
                            //formerly outer label print 202
                            case "LAB-OC-ANSL-0008": //Ansell/Microflex

                                cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                newList.Add("411200000200040" + "PO No.");
                                newList.Add("421100001150038" + cPo);
                                newList.Add("411200000200070" + "Ctn.No.");
                                newList.Add("421100001150068" + cCtn);
                                newList.Add("411200000200099" + "Mfg. Date.");
                                newList.Add("421100001150097" + dMfg.ToString("yyyy-MM"));
                                newList.Add("411200000200130" + "Exp. Date.");
                                newList.Add("421100001150128" + dExp.ToString("yyyy-MM"));
                                newList.Add("422300001850125" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200160" + "Lot No.");
                                newList.Add("421100001150158" + dMfg.ToString("yyMM") + "LJ");
                                newList.Add("411200000200187" + "Batch");
                                newList.Add("421100001150185" + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                                newList.Add("100000002800115" + cLot);
                                break;
                            #endregion
                            #region Outer Label 201
                            //formerly outer label print 201
                            case "LAB-OC-HTLG-0126"://OBP

                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150132" + "PO No.");
                                newList.Add("421100001100130" + cPo);
                                newList.Add("411200000150162" + "Mfg. Date");
                                newList.Add("421100001100160" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150192" + "Exp. Date");
                                newList.Add("421100001100190" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150222" + "Ctn. No.");
                                newList.Add("421100001100220" + cCtn);
                                newList.Add("411200000150252" + "Gross Wt.");
                                newList.Add("421100001100250" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150282" + "Net Wt.");
                                newList.Add("421100001100280" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150310" + "Lot No.");
                                newList.Add("421100001100308" + cLot);
                                newList.Add("421100000500343" + cHartaSize);
                                newList.Add("4e3105001100374" + cCustOrderLot);
                                newList.Add("401105001100384" + cCustOrderLot);
                                break;
                            #endregion
                            #region Outer Label 203
                            //formerly outer label print 203
                            case "LAB-OC-HTLG-0127":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4);
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4);
                                newList.Add("2e1109009850105C&G" + cGs1);
                                newList.Add("201100009850090" + cReadable);
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400007000125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100007000125" + PadCenter(cCustSize, 5));

                                newList.Add("D11");
                                newList.Add("2e4102007050095" + cLot + cCtn);
                                newList.Add("210005006900085" + cLot + cCtn);
                                newList.Add("D22");

                                newList.Add("2X1110005350080L001500");
                                newList.Add("201100010350070Gross Wt");
                                newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100009050070Exp Date");
                                newList.Add("221100008350054" + dExp.ToString("MMM-yyyy"));
                                newList.Add("201100007200070PO No");
                                newList.Add("291100006700054" + cPo);

                                newList.Add("2X1110005350050L001500");
                                newList.Add("201100010350040Nett Wt");
                                newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100009050040Reorder No");
                                newList.Add("221100008350024" + cProdRefNo);
                                newList.Add("201100007200040Ctn No");
                                newList.Add("221100006700024" + cCtn);

                                newList.Add("2X1110005250010L200001");
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400004500125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100004500125" + PadCenter(cCustSize, 5));

                                newList.Add("2e1109002750105C&G" + cGs1);
                                newList.Add("201100002750090" + cReadable);

                                newList.Add("D11");
                                newList.Add("2e4102004550095" + cLot + cCtn);
                                newList.Add("210005004400085" + cLot + cCtn);
                                newList.Add("D22");

                                newList.Add("2X1110000100080L001500");
                                newList.Add("201100005100070Gross Wt");
                                newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100003800070Exp Date");
                                newList.Add("221100003100054" + dExp.ToString("MMM-yyyy"));
                                newList.Add("201100001950070PO No");
                                newList.Add("291100001450054" + cPo);

                                newList.Add("2X1110000100050L001500");
                                newList.Add("201100005100040Nett Wt");
                                newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100003800040Reorder No");
                                newList.Add("221100003100024" + cProdRefNo);
                                newList.Add("201100001950040Ctn No");
                                newList.Add("221100001450024" + cCtn);
                                break;
                            #endregion
                            #region Outer Label 204
                            //formerly outer label print 204
                            case "LAB-OC-HTLG-0128":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075" + "Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150082" + "MFG");
                                newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150119" + "EXP");
                                newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150157" + "LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                newList.Add("D11");
                                newList.Add("4e4102001750070" + cLot + cCtn);
                                newList.Add("410005001900080" + cLot + cCtn);
                                newList.Add("D22");
                                break;
                            #endregion
                            #region Outer Label 200
                            //formerly outer label print 200
                            case "LAB-OC-ANSL-0007":
                                newList.Add("411200000200055" + "Lot No.");
                                newList.Add("421100001150055" + dMfg.ToString("yyMM") + "LJ");
                                newList.Add("411200000200085" + "Batch");
                                newList.Add("421100001150085" + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                                newList.Add("411200000200115" + "Mfg. Date.");
                                newList.Add("421100001150115" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("411200000200145" + "Case No");
                                newList.Add("421100001150143" + cCtn);
                                newList.Add("411100000200168" + "    Ref.");
                                newList.Add("411100001150168" + cPo);
                                newList.Add("400000001150181" + cLot);
                                newList.Add("422200001200185" + PadCenter(cCustSize, 11));
                                break;
                            #endregion
                            #region Outer Label 199
                            //formerly outer label print 199
                            case "LAB-OC-HLYD-0004":
                                cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                                newList.Add("211100003500067" + cLot.Substring(0, 9));  //Check substr;
                                newList.Add("211100001650067" + dExp.ToString("yyyy-MM"));
                                newList.Add("211100000650067" + cCtn);
                                newList.Add("201100003690050" + cReadable);   //Readable barcode - check paramater
                                newList.Add("2e1104003690010" + "C&G" + cGs1);     //GS1 barcode - check paramater
                                newList.Add("Q0002");
                                break;
                            #endregion
                            #region Outer Label 198
                            //formerly outer label print 198
                            case "LAB-OC-MEDL-0005":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //This is for BB Code

                                newList.Add("D11");
                                newList.Add("421100000150030" + "Date of Manufacture/");
                                newList.Add("421100000150040" + "Date de Fabrication:");
                                newList.Add("421100000150055" + "Gross Weight/");
                                newList.Add("421100000150065" + "Poids brut:");
                                newList.Add("421100000150105" + "Net Weight/");
                                newList.Add("421100000150115" + "Poids net:");
                                newList.Add("421100000150165" + "Case #/Caisse no.:");
                                newList.Add("D22");
                                newList.Add("421100001350040" + dMfg.ToString("MM-yyyy"));
                                newList.Add("421100001350065" + nGross.ToString("0.0 Kg"));
                                newList.Add("1Y1100000150070LOT");
                                newList.Add("421100001350090" + cCustOrderLot);
                                newList.Add("421100001350115" + nNett.ToString("0.0 Kg"));
                                newList.Add("411100000150138" + "P.O.:");
                                newList.Add("421100001350140" + cPo);
                                newList.Add("421100001350170" + cCtn);
                                newList.Add("401105002000190" + cLot);

                                break;
                            #endregion
                            #region Outer Label 193
                            //formerly outer label set 193
                            case "LAB-OC-ANSL-0006":

                                newList.Add("D10");
                                newList.Add("490000303100145" + "LOT #: " + dMfg.ToString("yyMM") + "LJ");
                                newList.Add("490000304300145" + "Batch: " + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                                newList.Add("490000303100165" + "Mfg Ref: " + cLot);
                                newList.Add("490000303100185" + "Expiration Date");
                                newList.Add("490000303100200" + "Date d'expiration:");
                                newList.Add("490000303100220" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("490000304300185" + "Manufacturing Date");
                                newList.Add("490000304300200" + "Date de fabrication:");
                                newList.Add("490000304300220" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("490000303100240" + "Ctn. No: " + cCtn);
                                newList.Add("D10");
                                //newList.Add("Q0002");
                                break;
                            #endregion
                            #region Outer Label 195
                            //formerly outer label print 195
                            case "LAB-OC-MEDL-0002":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                                newList.Add("1Y1100000200025LOT");
                                newList.Add("421100001100045" + cCustOrderLot);
                                newList.Add("411200000200080Gross Wt.");
                                newList.Add("421100001100080" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200110Net Wt.");
                                newList.Add("421100001100110" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200140PO");
                                newList.Add("421100001100140" + cPo);
                                newList.Add("411200000200170Case No.");
                                newList.Add("421100001100170" + cCtn);
                                newList.Add("401105002000190" + cLot);
                                break;
                            #endregion
                            #region Outer Label 196
                            //formerly outer label print 196
                            case "LAB-OC-MEDL-0003":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                                newList.Add("1Y1100000200015LOT");
                                newList.Add("421100001100035" + cCustOrderLot);
                                newList.Add("411200000200065Gross Wt.");
                                newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200090Net Wt.");
                                newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200115PO.");
                                newList.Add("421100001100115" + cPo);
                                newList.Add("411200000200140Case No.");
                                newList.Add("421100001100140" + cCtn);
                                newList.Add("1Y1100000200145MFG");
                                newList.Add("421100001100170" + dMfg.ToString("MM-yyyy"));
                                newList.Add("401105002000190" + cLot);
                                break;
                            #endregion
                            #region Outer Label 197
                            //formerly outer label print 197
                            case "LAB-OC-MEDL-0004":

                                cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                                newList.Add("411100100150025Lot No.");
                                newList.Add("411100001400025" + cCustOrderLot);
                                newList.Add("411100000150045Gross Weight");
                                newList.Add("411100001400045" + nGross.ToString("0.0 Kgs"));
                                newList.Add("411100000150070Nett Weight");
                                newList.Add("411100001400070" + nNett.ToString("0.0 Kgs"));
                                newList.Add("411100000150095PO. No.");
                                newList.Add("411100001400095" + cPo);
                                newList.Add("411100000150120Ctn. No.");
                                newList.Add("411100001400120" + cCtn);
                                newList.Add("411100000150145Mfg. Date");
                                newList.Add("411100001400145" + dMfg.ToString("yyyy-MM"));
                                newList.Add("411100000150170Exp. Date");
                                newList.Add("411100001400170" + dExp.ToString("yyyy-MM"));
                                newList.Add("410000001800187" + cLot);
                                break;
                            #endregion
                            #region Outer Label 191
                            //formerly outer label set 191
                            case "LAB-OC-SFMH-0001":

                                newList.Add("121005004000020" + cPo);
                                newList.Add("122305003160020" + cCustOrderLot);
                                newList.Add("122205002430020" + dMfg.ToString("MM-yyyy"));
                                newList.Add("122205001720020" + dExp.ToString("MM-yyyy"));
                                newList.Add("122205001010020" + nGross.ToString("0.00 Kg"));
                                newList.Add("122205000260020" + nNett.ToString("0.00 Kg"));
                                newList.Add("420005001120388" + cLot);
                                newList.Add("121005000250300" + cCtn);
                                break;

                            #endregion
                            #region Outer Label 192
                            //formerly outer label set 192
                            case "LAB-OC-HTLG-0124":

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("421100000300030" + "Lot No.  :");
                                newList.Add("421100001700030" + cCustOrderLot);
                                newList.Add("421100000300060" + "Use By   :");
                                newList.Add("421100001700060" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("421100000300090" + "Case No. :");
                                newList.Add("421100001700090" + Right(cCtn, 4));
                                newList.Add("421100000300120" + cCustSize);
                                newList.Add("1Y1100001700100" + "REF");
                                newList.Add("421100002200120" + cProdRefNo);
                                newList.Add("110000003700020" + cLot);
                                newList.Add("4e1109000350220" + "C&G" + cGs1);
                                newList.Add("400000000500230" + cReadable);
                                break;
                            #endregion
                            #region Outer Label 190
                            //formerly outer label set 190
                            case "LAB-OC-HTLG-0123":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "30" + cCustRefNo + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(30)" + cCustRefNo + "(10)" + cCustOrderLot;

                                newList.Add("410005000200025" + cPo);
                                newList.Add("410005002000025" + "CTN: " + cCtn);
                                newList.Add("422300002000090" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150030" + "MFG");
                                newList.Add("421100000700055" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("1Y1100000150065" + "EXP");
                                newList.Add("421100000700090" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("1Y1100000150100" + "LOT");
                                newList.Add("421105000700120" + cCustOrderLot);
                                newList.Add("4e1106000150185" + "C&G" + cGs1);
                                newList.Add("400000000080195" + cReadable);
                                break;
                            #endregion
                            #region Outer Label 187
                            //formerly outer label set 187
                            case "LAB-OC-HTLG-0121":
                                newList.Add("421100000400033" + "Gross Wt: " + nGross.ToString("0.0 Kg"));
                                newList.Add("421100000400058" + "Nett  Wt: " + nNett.ToString("0.0 Kg"));
                                newList.Add("411100000400078" + "PO No.: " + cPo);
                                newList.Add("411100000400093" + cLot);
                                newList.Add("411100001900093" + cCtn);
                                break;
                            #endregion
                            #region Outer Label 186
                            //formerly outer label set 186
                            case "LAB-OC-CRMB-0001":
                                cGs1 = "010" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + cCustOrderLot;
                                cReadable = "(01)0" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + cCustOrderLot;
                                cPackDate = dMfg.ToString("MM/yyyy");

                                newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize); //Customer size
                                newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA"); //Product and packing size
                                newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS"); //Product and packing size
                                newList.Add("440000001950130" + Right(cOuterGtn14_Code, 6)); //SKU code
                                newList.Add("4d3104000150130" + cCustRefNo); //DUN14 barcode
                                newList.Add("400000000150140" + cCustRefNo); //DUN14 HMR text
                                newList.Add("4e1103002650180C" + cCustOrderLot); //Customer lot (YYMMDDLN) barcode
                                newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg")); //Gross weigh
                                newList.Add("410000002150195" + "LOTE: " + cCustOrderLot); //Customer lot (YYMMDDLN) HMR text
                                newList.Add("4X1110000150198" + "L002330"); //Draw Line
                                newList.Add("4X1110001950184" + "L030002"); //Draw Line
                                newList.Add("410000000150215" + "FAB.: " + cPackDate + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                                newList.Add("410000002150215" + "VAL.: " + dExp.ToString("MM-yyyy")); //Exp Date
                                newList.Add("4e1106000150280C&G" + cGs1); //GS1-128 barcode
                                newList.Add("400000000150290" + cReadable); //GS1-128 HMR text
                                newList.Add("300000003650270" + cOrderNum); // Work order number
                                newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize); //Hartalega internal lot, Carton number, Hartalega internal size
                                break;

                            #endregion

                            #region Outer Label 185
                            //formerly outer label set 185
                            case "LAB-OC-HTLG-0120":
                                cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200055Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060MFG");
                                newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150100LOT");
                                newList.Add("421105001000115" + cCustOrderLot);
                                newList.Add("4e1105000150180C&G" + cGs1);
                                newList.Add("400000000080190" + cReadable);
                                break;
                            #endregion

                            #region Outer Label 184
                            //formerly outer label set 184
                            case "LAB-OC-HTLG-0119":
                                newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                                newList.Add("111100000800240" + cCtn);
                                newList.Add("121100000550020" + "LOT NO.:");
                                newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                                newList.Add("141100000100020" + cLot);
                                //newList.Add("Q0002");
                                break;
                            #endregion


                            #region Outer Set 178 (138)
                            //formerly outer label set 178
                            case "LAB-OC-HTLG-0113":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075" + "Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000080" + cCustSize);
                                newList.Add("1Y1100000150114" + "EXP");
                                newList.Add("421100001000140" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150157" + "LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                break;
                            #endregion

                            #region Outer Set 179 (59)
                            //formerly outer label set 179
                            case "LAB-OC-HTLG-0114":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("422300001800080" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200080Ctn. No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("1Y1100000150100MFG");
                                newList.Add("421100001100125" + (dMfg.ToString(outerLabelSetDateFormat)));
                                newList.Add("1Y1100000150150LOT");
                                newList.Add("4d3103001100175" + cLot);
                                newList.Add("410005001100187" + cLot);
                                break;
                            #endregion

                            #region Outer Set 180 (65)
                            //formerly outer label set 180
                            case "LAB-OC-HTLG-0115":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000112" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("421100001000145" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                break;
                            #endregion

                            #region Outer Set 181 (101)
                            //formerly outer label set 181
                            case "LAB-OC-HTLG-0116":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100000650051" + cCustOrderLot); //Lot by Size
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100000650179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;
                            #endregion

                            #region Outer Set 182 (108)
                            //formerly outer label set 182
                            case "LAB-OC-HTLG-0117":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100000650051" + cCustOrderLot);
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("421100000650141" + dExp.ToString(outerLabelSetDateFormat));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100000650179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;
                            #endregion


                            #region Outer Label 74
                            //formerly outer label set 74
                            case "LAB-OC-HTLG-0049":
                                newList.Add("410005000200020" + cOrderNum);            //cust order number
                                newList.Add("422400002000090" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200080" + "Ctn. No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("1Y1100000150100" + "MFG");
                                newList.Add("421100001100125" + dMfg.ToString("MM-yyyy"));
                                newList.Add("1Y1100000150150" + "LOT");
                                newList.Add("421105001100168" + cPo);
                                newList.Add("401105001100190" + cLot);
                                break;
                            #endregion
                            //77 has no new proposed label set
                            //#region Outer Label 77
                            //case "77":
                            //    DateTime dExpLastDayOfMonth = new DateTime(dExp.Year, dExp.Month, 1);
                            //    dExpLastDayOfMonth = dExpLastDayOfMonth.AddMonths(1).AddDays(-1);

                            //    switch (cItemNumber)
                            //    {
                            //        case "FG-P027-001":
                            //            switch (cCustSize)
                            //            {
                            //                case "XS":
                            //                    cPzn = "3539159";
                            //                    cHartaRfCode = "9422001";
                            //                    break;
                            //                case "S":
                            //                    cPzn = "3539171";
                            //                    cHartaRfCode = "9422011";
                            //                    break;
                            //                case "M":
                            //                    cPzn = "3539188";
                            //                    cHartaRfCode = "9422021";
                            //                    break;
                            //                case "L":
                            //                    cPzn = "3539194";
                            //                    cHartaRfCode = "9422031";
                            //                    break;
                            //                default: //XL
                            //                    cPzn = "3539202";
                            //                    cHartaRfCode = "9422041";
                            //                    break;
                            //            }
                            //            break;

                            //        case "FG-P027-002":
                            //            switch (cCustSize)
                            //            {
                            //                case "XS":
                            //                    cPzn = "3538409";
                            //                    cHartaRfCode = "9421951";
                            //                    break;
                            //                case "S":
                            //                    cPzn = "3538415";
                            //                    cHartaRfCode = "9421961";
                            //                    break;
                            //                case "M":
                            //                    cPzn = "3538421";
                            //                    cHartaRfCode = "9421971";
                            //                    break;
                            //                case "L":
                            //                    cPzn = "3538438";
                            //                    cHartaRfCode = "9421981";
                            //                    break;
                            //                default: //XL
                            //                    cPzn = "3538444";
                            //                    cHartaRfCode = "9421991";
                            //                    break;
                            //            }
                            //            break;

                            //        case "FG-P027-003":
                            //            switch (cCustSize)
                            //            {
                            //                case "XS":
                            //                    cPzn = "3539343";
                            //                    cHartaRfCode = "9421952";
                            //                    break;
                            //                case "S":
                            //                    cPzn = "3539455";
                            //                    cHartaRfCode = "9421962";
                            //                    break;
                            //                case "M":
                            //                    cPzn = "3539509";
                            //                    cHartaRfCode = "9421972";
                            //                    break;
                            //                case "L":
                            //                    cPzn = "3539722";
                            //                    cHartaRfCode = "9421982";
                            //                    break;
                            //                default: //XL
                            //                    cPzn = "3539774";
                            //                    cHartaRfCode = "9421992";
                            //                    break;
                            //            }
                            //            break;

                            //        default: //not found. Example new brand
                            //            cPzn = "NOT SET";
                            //            cHartaRfCode = "NOT SET";
                            //            break;
                            //    }

                            //    newList.Add("491100100200035" + "EAN " + cOuterGtn14_Code);
                            //    newList.Add("491100102300035" + "REF. " + cHartaRfCode);
                            //    newList.Add("1Y1100000200055" + "LOT");
                            //    newList.Add("491100200600078" + cCustOrderLot.Substring(0, 2));
                            //    newList.Add("491100400900080" + cCustOrderLot.Substring(2, 2));
                            //    newList.Add("491100201250078" + cCustOrderLot.Substring(4, 5));
                            //    newList.Add("1Y1100002200050" + "EXP");
                            //    newList.Add("491100202600078" + dExp.ToString("yyyy-MM"));
                            //    newList.Add("4e1110000200205" + "C&G" + "010" + cOuterGtn14_Code);
                            //    newList.Add("401100000350215" + "(01)0" + cOuterGtn14_Code);
                            //    newList.Add("491100202000130" + "SIZE:");
                            //    newList.Add("491100502700133" + cCustSize);
                            //    newList.Add("491100202000175" + "PZN:");
                            //    newList.Add("491100202500175" + "10 x " + cPzn);
                            //    newList.Add("491100202000205" + "10 x " + cCustRefNo);
                            //    newList.Add("4e1110000200330" + "C&G" + "92" + cHartaRfCode + "17" + dExpLastDayOfMonth.ToString("yyMMdd") + "10" + cCustOrderLot);//check End of month
                            //    newList.Add("401100000200340" + "(92)" + cHartaRfCode + "(17)" + dExpLastDayOfMonth.ToString("yyMMdd") + "(10)" + cCustOrderLot);//check End of month
                            //    newList.Add("301100004000340" + cLot + "  " + cCtn);
                            //    // newList.Add("Q0002"); 
                            //    break;
                            //#endregion

                            #region Outer Label 81
                            //formerly outer label set 81
                            case "LAB-OC-HTLG-0054":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135" + "PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170" + "Mfg. Date");
                                newList.Add("421100001100168" + dMfg.ToString("yyyy-MM"));
                                newList.Add("411200000150205" + "Exp. Date");
                                newList.Add("421100001100203" + dExp.ToString("yyyy-MM"));
                                newList.Add("411200000150240" + "Ctn. No.");
                                newList.Add("421100001100238" + cCtn);
                                newList.Add("411200000150275" + "Gross Wt.");
                                newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150310" + "Net Wt.");
                                newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150345" + "Lot No.");
                                newList.Add("421105001100345" + cLot + " " + cHartaSize);
                                break;
                            #endregion

                            #region Outer Label 135
                            //formerly outer label set 135
                            case "LAB-OC-HTLG-0085":
                                newList.Add("221100002800070" + "Carton No: ");
                                newList.Add("221100001600070" + Right(cCtn, 4) + "/" + cTotalCarton); // xxxx/yyyy - xxxx : running carton , yyyy : total carton per 1 SIZE
                                newList.Add("221100000580050" + PadCenter(cCustSize, 5));
                                newList.Add("211100001600038" + cLot);
                                break;
                            #endregion

                            #region Outer Label 142
                            //formerly outer label set 142
                            case "LAB-OC-HLYD-0002":
                                cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                                cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                                newList.Add("211100003690076" + cLot.Substring(0, 9));  //Check substr;
                                newList.Add("211100002190076" + dMfg.ToString("yyyy-MM"));
                                newList.Add("211100001020076" + dExp.ToString("yyyy-MM"));
                                newList.Add("201100003690063" + cReadable);   //Readable barcode - check paramater
                                newList.Add("2e1105003690011C&G" + cGs1);     //GS1 barcode - check paramater
                                                                              //newList.Add("Q0002");
                                break;
                            #endregion

                            #region Outer Label 143
                            //formerly outer label set 143
                            case "LAB-OC-DBGL-0001":
                                newList.Add("1Y1100000150015" + "MFG");
                                newList.Add("421100001000040" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150080" + "EXP");
                                newList.Add("421100001000105" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150155" + "LOT");
                                newList.Add("4e1105000100230" + "C&G" + "100000000000" + cPo.Substring(0, 10) + "21000000000000");  //check C&G and Substr
                                newList.Add("410005000150245" + "100000000000" + cPo.Substring(0, 10) + "21000000000000");          //check Substr      
                                newList.Add("410005002600280" + cLot);
                                break;
                            #endregion

                            #region Outer Label 151
                            //formerly outer label set 151
                            case "LAB-OC-HTLG-0094":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("421200001800090" + PadCenter(cCustSize, 10));
                                newList.Add("411200000200080" + "Ctn.No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("1Y1100000150100" + "MFG");
                                newList.Add("421100001100125" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150150" + "LOT");
                                newList.Add("4d3103001100175" + cLot);
                                newList.Add("410005001100187" + cLot);
                                break;
                            #endregion

                            #region Outer Label 157
                            //formerly outer label set 157
                            case "LAB-OC-HTLG-0098":
                                newList.Add("410005000150020" + cPo);
                                newList.Add("1Y1100000150027" + "LOT_T_V");
                                newList.Add("421100001000051" + cCustOrderLot); //product code by size
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150065" + "MFG_T_V");
                                newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150122" + "EXP");
                                newList.Add("421100001000143" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150183" + "Case.");
                                newList.Add("421100001000179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;
                            #endregion

                            #region Outer Label 161
                            //formerly outer label set 161
                            case "LAB-OC-UTSU-0001":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cLot;

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200060" + "Ctn.No.");
                                newList.Add("421100001000060" + cCtn);
                                newList.Add("1Y2100000150070" + "LOT_UTSU");
                                newList.Add("421100001000092" + cLot);
                                newList.Add("1Y2100000150102" + "EXP_UTSU");
                                newList.Add("421105001000120" + dExp.ToString("yyyy.MM"));
                                newList.Add("4e1105000150180C&G" + cGs1); //GS1 barcode - check paramater
                                newList.Add("400000000150190" + cReadable); //Readable barcode - check paramater"
                                break;
                            #endregion

                            #region Outer Label 164
                            //formerly outer label set 164
                            case "LAB-OC-GPTH-0001":
                                newList.Add("420000000200030" + cProdRefNo); // change from cCustSize
                                newList.Add("411100000200048" + "Greenpath Studios");
                                newList.Add("411100000200063" + "CleanPro Powder - Free");
                                newList.Add("411100000200078" + "Blue Nitrile Gloves");
                                newList.Add("411100000200093" + "Qty: 10 pk.(100ea / pk)");
                                newList.Add("411100000200110" + "LOT: ");
                                newList.Add("411100000600110" + cLot);
                                newList.Add("411100001970110" + "CTN: ");
                                newList.Add("411100002370110" + cCtn);
                                newList.Add("4X0000000400116" + "L011222");
                                newList.Add("4X0000000400127" + "L040012");
                                newList.Add("410005000870190" + cOuterGtn14_Code); //Product code
                                newList.Add("4d4104000700167" + cOuterGtn14_Code); //Product code
                                newList.Add("4X0000000400167" + "L011222");
                                newList.Add("4X0000002500127" + "L040012");
                                break;
                            #endregion

                            #region Outer Label 165
                            //formerly outer label set 165
                            case "LAB-OC-HTLG-0104":
                                newList.Add("421100000200045" + cPo);
                                newList.Add("421100000200085" + cLot);
                                newList.Add("421100000200125" + dMfg.ToString("yyyy-MM"));
                                newList.Add("421100000200165" + dExp.ToString("yyyy-MM"));
                                newList.Add("411100001500165" + "CTN: " + cCtn);
                                break;
                            #endregion

                            #region Outer Label 175
                            //formerly outer label set 175
                            case "LAB-OC-HTLG-0111":
                                newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                                newList.Add("111100000800240" + cCtn);
                                newList.Add("121100000550020" + "LOT NO.:");
                                newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                                newList.Add("141100000100020" + cLot);
                                // newList.Add("Q0004");
                                break;
                            #endregion

                            #region Outer Label 174
                            //formerly outer label set 174
                            case "LAB-OC-HTLG-0110":
                                newList.Add("421100000150030" + "LOT NO:");
                                newList.Add("421100001050030" + cCustOrderLot);
                                newList.Add("1Y1100000200040" + "MFG");
                                newList.Add("421100001050065" + dMfg.ToString("yyyy") + "-" + dMfg.ToString("MM") + "-" + dMfg.ToString("dd"));
                                newList.Add("431100002200070" + PadCenter(cCustSize, 5));
                                newList.Add("411100001050090" + cCtn);
                                newList.Add("411100001700090" + cLot);
                                break;
                            #endregion

                            #region Outer Label 173
                            //formerly outer label set 173
                            case "LAB-OC-ANSL-0005":
                                switch (cCustSize.Trim())
                                {
                                    case "XS":
                                        cCustSizeFull = "X-SMALL";
                                        cCustRefNo = "313041060";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410603";
                                        cCustIntrnlPrd = "827388";
                                        break;
                                    case "S":
                                        cCustSizeFull = "SMALL";
                                        cCustRefNo = "313041065";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410658";
                                        cCustIntrnlPrd = "827389";
                                        break;
                                    case "M":
                                        cCustSizeFull = "MEDIUM";
                                        cCustRefNo = "313041070";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410702";
                                        cCustIntrnlPrd = "827390";
                                        break;
                                    case "L":
                                        cCustSizeFull = "LARGE";
                                        cCustRefNo = "313041075";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410757";
                                        cCustIntrnlPrd = "827391";
                                        break;
                                    case "XL":
                                        cCustSizeFull = "X-LARGE";
                                        cCustRefNo = "313041080";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "35414566410801";
                                        cCustIntrnlPrd = "827392";
                                        break;
                                }

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                                newList.Add("421100100150035" + "PRODUCT:MICRO-TOUCH BLUE NITRILE");
                                newList.Add("421100000150075" + "SIZE:");
                                newList.Add("421100000800075" + cCustSizeFull);
                                newList.Add("421100001850075" + "SHIPPER");
                                newList.Add("421100002720075" + "BOX");
                                newList.Add("421100003120075" + "OF");
                                newList.Add("421100003400075" + cPackSize);
                                newList.Add("421100000150115" + "REF");
                                newList.Add("421100000800115" + cCustRefNo);
                                newList.Add("1Y1100002200090" + "MFG");
                                newList.Add("421100002700115" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("1Y1100000150135" + "LOT");
                                newList.Add("421100000800155" + cCustOrderLot);
                                newList.Add("1Y1100002200130" + "EXP");
                                newList.Add("421100002700155" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("411100000150178" + "INTERNAL PRODUCT ID:" + cCustIntrnlPrd);
                                newList.Add("401100000150260" + cReadable);
                                newList.Add("4e1107000150250" + "C&G" + cGs1);
                                newList.Add("411100000150290" + "CTN#: " + cCtn);
                                newList.Add("411100001800290" + "MFG REF: " + cLot);
                                break;
                            #endregion

                            #region Outer Label 172
                            //formerly outer label set 172
                            case "LAB-OC-ANSL-0004":

                                switch (cCustSize.Trim())
                                {
                                    case "L":
                                        cCustSizeFull = "LARGE";
                                        cCustRefNo = "6034303";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210752";
                                        cCustIntrnlPrd = "826402";
                                        break;
                                    case "M":
                                        cCustSizeFull = "MEDIUM";
                                        cCustRefNo = "6034302";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210707";
                                        cCustIntrnlPrd = "826401";
                                        break;
                                    case "S":
                                        cCustSizeFull = "SMALL";
                                        cCustRefNo = "6034301";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210653";
                                        cCustIntrnlPrd = "826400";
                                        break;
                                    case "XL":
                                        cCustSizeFull = "X-LARGE";
                                        cCustRefNo = "6034304";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210806";
                                        cCustIntrnlPrd = "826403";
                                        break;
                                    case "XS":
                                        cCustSizeFull = "X-SMALL";
                                        cCustRefNo = "6034300";
                                        cPackSize = "2000";
                                        cOuterGtn14_Code = "30884792210608";
                                        cCustIntrnlPrd = "826399";
                                        break;
                                    case "XXL":
                                        cCustSizeFull = "XX-LARGE";
                                        cCustRefNo = " 6034305";
                                        cPackSize = "1800";
                                        cOuterGtn14_Code = "30884792210851";
                                        cCustIntrnlPrd = "826404";
                                        break;
                                }

                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                                newList.Add("421100100150035" + "PRODUCT : MICRO-TOUCH NITRILE");
                                newList.Add("421100000150075" + "SIZE:");
                                newList.Add("421100000800075" + cCustSizeFull);
                                newList.Add("421100001850075" + "SHIPPER");
                                newList.Add("421100002720075" + "BOX");
                                newList.Add("421100003120075" + "OF");
                                newList.Add("421100003400075" + cPackSize);
                                newList.Add("421100000150115" + "REF");
                                newList.Add("421100000800115" + cCustRefNo);
                                newList.Add("1Y1100002200090" + "MFG");
                                newList.Add("421100002700115" + dMfg.ToString("yyyy-MM-dd"));
                                newList.Add("1Y1100000150135" + "LOT");
                                newList.Add("421100000800155" + cCustOrderLot);
                                newList.Add("1Y1100002200130" + "EXP");
                                newList.Add("421100002700155" + dExp.ToString("yyyy-MM-dd"));
                                newList.Add("411100000150178" + "INTERNAL PRODUCT ID:" + cCustIntrnlPrd);
                                newList.Add("401100000150260" + cReadable);
                                newList.Add("4e1107000150250" + "C&G" + cGs1);
                                newList.Add("411100000150290" + "CTN#: " + cCtn);
                                newList.Add("411100001800290" + "MFG REF: " + cLot);
                                break;
                            #endregion

                            #region Set 171 - 25/05/2017
                            //formerly outer label set 171
                            case "LAB-OC-HTLG-0109":
                                newList.Add("410005000200020" + cPo.Trim());
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100001000051" + cCustOrderLot); //Lot By Size
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100001000179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                //newList.Add("Q0002");  // to include 2 printing in 1 time 
                                break;
                            #endregion 171 

                            #region Outer Label 167 - 14/04/2017
                            //formerly outer label set 167
                            case "LAB-OC-HTLG-0106":
                                newList.Add("411200000200037" + "Lot No.  :");
                                newList.Add("411200001200037" + cLot);
                                newList.Add("411200000200067" + "Exp Date : ");
                                newList.Add("411200001200067" + dExp.ToString("MMM yyyy"));
                                newList.Add("411200000200098" + "Ctn No.  :");
                                newList.Add("411200001200098" + cCtn);
                                newList.Add("431100002200085" + cHartaSize);
                                break;
                            #endregion
                            #region Set 163
                            //formerly outer label set 163
                            case "LAB-OC-HTLG-0103":
                                newList.Add("411100000250030Batch:");
                                newList.Add("411100000250047" + cLot);
                                newList.Add("1Y1100000250055MFG");
                                newList.Add("411100000650080" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411100001600030CTN.:");
                                newList.Add("411100001950030" + cCtn);
                                newList.Add("4d3103001600070" + cCustOrderLot);
                                newList.Add("410005001600085" + cCustOrderLot);
                                break;
                            #endregion
                            #region Set 155
                            //formerly outer label set 155
                            case "LAB-OC-MEDL-0001":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                                newList.Add("2e2105013550105C&G" + cGs1);
                                newList.Add("200000013550090" + cReadable);
                                newList.Add("242200009900100" + PadCenter(cCustSize, 3));
                                newList.Add("2X1110007100080" + "L001665");
                                newList.Add("201100013750070" + "PO No");
                                newList.Add("221100013250054" + cPo);
                                newList.Add("201100011550070" + "Mfg Date");
                                newList.Add("221100010950054" + dEtd.ToString("yyyy-MM")); //Shipment ETD date
                                newList.Add("201100009900070" + "Gross Wt.");
                                newList.Add("221100009300054" + nGross.ToString("0.0 Kgs"));
                                newList.Add("201100008250070" + "Ctn No");
                                newList.Add("291100007800054" + cCtn);
                                newList.Add("200000008250020" + cLot);
                                newList.Add("2X1110007100050" + "L001665");
                                newList.Add("201100013750040" + "Lot No");
                                newList.Add("221100013250024" + cCustOrderLot);
                                newList.Add("201100011550040" + "Exp Date");
                                newList.Add("221100010950024" + dExp.ToString("yyyy-MM"));
                                newList.Add("201100009900040" + "Nett Wt.");
                                newList.Add("221100009300024" + nNett.ToString("0.0 Kgs"));
                                newList.Add("2X1110006950010" + "L200001");
                                newList.Add("242200005050100" + PadCenter(cCustSize, 3));
                                newList.Add("2e2105003600105C&G" + cGs1);
                                newList.Add("200000003600090" + cReadable);
                                newList.Add("2X1110000100080" + "L001665");
                                newList.Add("201100006750070" + "PO No");
                                newList.Add("221100006250054" + cPo);
                                newList.Add("201100004550070" + "Mfg Date");
                                newList.Add("221100003950054" + dEtd.ToString("yyyy-MM"));
                                newList.Add("201100002900070" + "Gross Wt.");
                                newList.Add("221100002300054" + nGross.ToString("0.0 Kgs"));
                                newList.Add("201100001250070" + "Ctn No");
                                newList.Add("291100000800054" + cCtn);
                                newList.Add("200000001250020" + cLot);
                                newList.Add("2X1110000100050" + "L001665");
                                newList.Add("201100006750040" + "Lot No");
                                newList.Add("221100006250024" + cCustOrderLot);
                                newList.Add("201100004550040" + "Exp Date");
                                newList.Add("221100003950024" + dExp.ToString("yyyy-MM"));
                                newList.Add("201100002900040" + "Nett Wt.");
                                newList.Add("221100002300024" + nNett.ToString("0.0 Kgs"));

                                break;
                            #endregion
                            #region Set 154
                            //formerly outer label set 154
                            case "LAB-OC-KCLG-0002":
                                newList.Add("421100002450100" + dExp.ToString("yyyy-MM"));
                                newList.Add("411100002000350" + cPo);
                                newList.Add("411100003750350" + "LOT " + cLot);
                                newList.Add("411100006100350" + "CTN# " + cCtn);
                                break;
                            #endregion
                            #region Set 153
                            //formerly outer label set 153
                            case "LAB-OC-HTLG-0096":
                                newList.Add("191000000500020" + "Lot No.");
                                newList.Add("191000000500100" + cCustOrderLot);
                                newList.Add("101100000300100" + cCtn + "   " + cLot);
                                break;
                            #endregion
                            #region Set 146
                            //formerly outer label set 146
                            case "LAB-OC-KCLG-0001":
                                newList.Add("421100001500100" + dExp.ToString("yyyy-MM"));
                                newList.Add("411100000200350" + cPo);
                                newList.Add("411100001300350" + "LOT " + cLot);
                                newList.Add("411100003000350" + "CTN# " + cCtn);
                                break;
                            #endregion
                            //formerly outer label set 105
                            case "LAB-OC-HTLG-0070":
                                newList.Add("111200000600020" + "LOT NO.:");
                                newList.Add("121100000600110" + cLot);
                                newList.Add("111100000100240" + cCtn);
                                break;
                            //formerly outer label set 152
                            case "LAB-OC-HTLG-0095":
                                newList.Add("411100100150025Lot No.");
                                newList.Add("411100001400025" + cCustOrderLot);
                                newList.Add("411100000150045Gross Weight");
                                newList.Add("411100001400045" + nGross.ToString("0.0 Kgs"));
                                newList.Add("411100000150070Nett Weight");
                                newList.Add("411100001400070" + nNett.ToString("0.0 Kgs"));
                                newList.Add("411100000150095PO. No.");
                                newList.Add("411100001400095" + cPo);
                                newList.Add("411100000150120Ctn. No.");
                                newList.Add("411100001400120" + cCtn);
                                newList.Add("411100000150145Mfg. Date");
                                newList.Add("411100001400145" + dMfg.ToString("yyyy-MM"));
                                newList.Add("411100000150170Exp. Date");
                                newList.Add("411100001400170" + dExp.ToString("yyyy-MM"));
                                newList.Add("410000001800187" + cLot);
                                break;
                            //formerly outer label set 79
                            case "LAB-OC-HTLG-0052":
                                newList.Add("411200000200058Ctn. No.");
                                newList.Add("421100001000058" + cCtn);
                                newList.Add("422300002000108" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150070EXP");
                                newList.Add("421100001000095" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150115LOT");
                                newList.Add("421100001000135" + cCustOrderLot);
                                newList.Add("4d3103001000180" + cLot);
                                newList.Add("410005001000195" + cLot);
                                break;
                            //formerly outer label set 136
                            case "LAB-OC-HTLG-0086":
                                newList.Add("1Y1100000650020LOT_H");
                                newList.Add("191000000650100" + cCustOrderLot);
                                newList.Add("1Y1100000250020MFG_H");
                                newList.Add("191000000350100" + dMfg.ToString("yyyy-MM"));
                                newList.Add("101100000150100" + cCtn + "   " + cLot);
                                // newList.Add("Q0002");
                                break;
                            //formerly outer label set 147
                            case "LAB-OC-HTLG-0091":
                                newList.Add("1Y1100000150015LOT");
                                newList.Add("421100000800030" + cCustOrderLot);
                                newList.Add("421100000150080" + "Gross Weight:  " + nGross.ToString("0.0 Kgs"));
                                newList.Add("421100000150125" + "Net Weight:    " + nNett.ToString("0.0 Kgs"));
                                newList.Add("421100000150170" + "PO:      " + cPo);
                                newList.Add("1Y1100000150190MFG_T_V");
                                newList.Add("421100001200230" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150260EXP_T_V");
                                newList.Add("421100001200290" + dExp.ToString("yyyy-MM"));
                                newList.Add("421100000150340" + "Case #:");
                                newList.Add("421100001200340" + cCtn);
                                newList.Add("411100001900380" + cLot);
                                break;
                            //formerly outer label set 128
                            case "LAB-OC-CMTS-0002":
                                //cCustOrderLot = dEtd.ToString("ddMMyyyy") + cProdRefNo;
                                newList.Add("411200000200058Ctn. No.");
                                newList.Add("421100001000058" + cCtn);
                                newList.Add("422300002000108" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150070EXP");
                                newList.Add("421100001000095" + dExp.ToString("MMM yyyy"));
                                newList.Add("1Y1100000150115LOT");
                                newList.Add("421100001000135" + cCustOrderLot);
                                newList.Add("4d3103001000180" + cLot);
                                newList.Add("410005001000195" + cLot);
                                break;
                            //formerly outer label set 104
                            case "LAB-OC-HTLG-0069":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411100000200050Ctn. No.");
                                newList.Add("421100001000052" + cCtn);
                                newList.Add("411100000200072Date of");
                                newList.Add("411100000200082Import:");
                                newList.Add("421100001000080" + dEtd.ToString("MMM-yyyy"));
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000200085MFG");
                                newList.Add("421100001000110" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000200119EXP");
                                newList.Add("421100001000140" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000200154LOT");
                                newList.Add("4d3103001000180" + cLot);
                                newList.Add("410005001000195" + cLot);
                                break;
                            //formerly outer label set 145
                            case "LAB-OC-HTLG-0090":
                                dMfg = DateTime.ParseExact(cCustOrderLot.Substring(4, 2) + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                                dExp = dMfg.AddMonths(nExpMonth);
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;
                                newList.Add("422200000150065" + PadCenter(cCustSize, 11));
                                newList.Add("490000000150110Caixa No /");
                                newList.Add("491100000150130Carton No :");
                                newList.Add("491100002000130" + cCtn);
                                newList.Add("491100000150160" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                                newList.Add("491100000150180Manufacturing Date:");
                                newList.Add("491100002000185" + dMfg.ToString("MM/yyyy"));
                                newList.Add("491100000150210Validade/Expiry Date:");
                                newList.Add("491100002000210" + dExp.ToString("MM/yyyy"));
                                newList.Add("491100000150240Lote:");
                                newList.Add("491100002000240" + cCustOrderLot);
                                newList.Add("401100000150255" + cPo + "  " + cLot);
                                newList.Add("4e2105000150320C&G" + cGs1);
                                newList.Add("400000000150330" + cReadable.ToString());
                                break;
                            //formerly outer label set 91
                            case "LAB-OC-HTLG-0060":
                                newList.Add("411100000150026PO NO: " + cPo);
                                newList.Add("411100000150043Ctn. No.: " + cCtn);
                                newList.Add("411100000150058Gross Weight: " + nGross.ToString("0.0 Kg"));
                                newList.Add("411100000150075Net Weight: " + nNett.ToString("0.0 Kg"));
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150080MFG");
                                newList.Add("421100001000108" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150116EXP");
                                newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150156LOT");
                                newList.Add("4d3103001000178" + cLot);
                                newList.Add("410005001000193" + cLot);
                                break;

                            //formerly outer label set 139
                            case "LAB-OC-HTLG-0089":
                                cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 5).Replace("/", "");
                                newList.Add("410005000200025" + cPo);
                                newList.Add("422400000100117" + PadCenter(cCustSize, 11));
                                newList.Add("421100000000159" + PadCenter(cBrand, 25));
                                newList.Add("411200000100205Ctn. No.");
                                newList.Add("421100001100203" + cCtn);
                                newList.Add("421100001100248" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100001100294" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100220LOGO");
                                newList.Add("420000001100340" + cCustOrderLot);
                                newList.Add("410000001700388" + cLot);
                                break;
                            //formerly outer label set 137
                            case "LAB-OC-HTLG-0087":
                                newList.Add("191000000500030Ctn.No. " + cCtn);
                                newList.Add("141100000400190" + PadCenter(cCustSize, 5));
                                newList.Add("111000000200030" + cOrderNum);
                                newList.Add("111000000200150" + cLot);
                                break;
                            //formerly outer label set 120
                            case "LAB-OC-HTLG-0079":
                                cCustOrderLot = dMfg.ToString("yyMM") + "01" + cPline;
                                newList.Add("422200000100045" + PadCenter(cCustSize, 11));
                                newList.Add("491100000150070Caixa No /");
                                newList.Add("491100000150090Carton No :");
                                newList.Add("491100002000080" + cCtn);
                                newList.Add("491100000150110Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                                newList.Add("491100000150130Manufacturing Date:");
                                newList.Add("491100002000125" + dMfg.ToString("MM/yyyy"));
                                newList.Add("491100000150150Validade/Expiry Date:");
                                newList.Add("491100002000150" + dExp.ToString("MM/yyyy"));
                                newList.Add("491100000150170Lote:");
                                newList.Add("491100002000170" + cCustOrderLot);
                                newList.Add("401100000150185" + cPo + "  " + cLot);
                                break;
                            //formerly outer label print 2
                            case "LAB-OC-HTLG-0002":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170Mfg. Date");
                                newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150205Ctn. No.");
                                newList.Add("421100001100203" + cCtn);
                                newList.Add("411200000150240Gross Wt.");
                                newList.Add("421100001100238" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150275Net Wt.");
                                newList.Add("421100001100273" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150310Reorder No.");
                                newList.Add("421100001100308" + cCustRefNo);
                                newList.Add("411200000150345Lot No.");
                                newList.Add("421100002500343" + cHartaSize);
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                                break;
                            //formerly outer label set 5
                            case "LAB-OC-HTLG-0004":
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170Mfg. Date");
                                newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150205Ctn. No.");
                                newList.Add("421100001100203" + cCtn);
                                newList.Add("411200000150240Gross Wt.");
                                newList.Add("421100001100238" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150275Net Wt.");
                                newList.Add("421100001100273" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150310Lot No.");
                                newList.Add("421100001100308" + cCustOrderLot);
                                newList.Add("421100002500343" + cHartaSize);
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                                break;
                            //formerly outer label set 75
                            case "LAB-OC-HTLG-0050":
                                newList.Add("110000000800135" + PadCenter(cPo, 15));
                                newList.Add("110000000650115Ctn.No.");
                                newList.Add("110000000650210" + cCtn);
                                newList.Add("110000000500115Mfg. Date.");
                                newList.Add("110000000500210" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("110000000350115Lot No.");
                                newList.Add("1d3102500200180" + cLot);
                                newList.Add("110002500050180" + cLot);
                                newList.Add("123300000250020" + PadCenter(cCustSize, 3));
                                break;
                            //formerly outer label set 80
                            case "LAB-OC-HTLG-0053":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150089EXP");
                                newList.Add("421100001000112" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150140LOT");
                                newList.Add("4d3103001000170" + cLot);
                                newList.Add("410005001000185" + cLot);
                                break;
                            //formerly outer label set 100
                            case "LAB-OC-HTLG-0067":
                                newList.Add("410005000200020" + cPo.Trim());
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100001000051" + cCustOrderLot); //Lot By Size
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100001000179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;
                            //formerly outer label set 121
                            case "LAB-OC-HTLG-0080":
                                newList.Add("421100000150035" + cLot);
                                newList.Add("411100001900035" + cOrderNum);
                                newList.Add("421100000150090" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411100001900090" + cCtn);
                                newList.Add("421100000150130" + dExp.ToString("MMM-yyyy"));
                                newList.Add("422300001900160" + cCustSize);
                                newList.Add("421100000150160" + nGross.ToString("0.0 Kg"));
                                newList.Add("421100000150190" + nNett.ToString("0.0 Kg"));
                                break;
                            //formerly outer label set 108
                            case "LAB-OC-HTLG-0073":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("421100001000051" + cCustOrderLot);
                                newList.Add("422300002150138" + cCustSize);
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("421100001000095" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("421100001000141" + dExp.ToString("yyyy-MM"));
                                newList.Add("411200000150183Case.");
                                newList.Add("421100001000179" + cCtn);
                                newList.Add("410005001850188" + cLot);
                                break;
                            //formerly outer label set 112
                            case "LAB-OC-HTLG-0075":
                                cCustOrderLot = cPo + "-" + cBrand;
                                newList.Add("1Y1100000150030LOT");
                                newList.Add("411200000800053" + cCustOrderLot);
                                newList.Add("422300001950138" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150070MFG");
                                newList.Add("411200000800100" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150115EXP");
                                newList.Add("411200000800143" + dExp.ToString("yyyy-MM"));
                                newList.Add("411200000150183Case.");
                                newList.Add("411200000800183" + cCtn);
                                newList.Add("410005001700188" + cLot);
                                break;
                            //formerly outer label set 110
                            case "LAB-OC-HTLG-0074":
                                newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                                newList.Add("111100000800240" + cCtn);
                                newList.Add("121100000550020" + "LOT NO.:");
                                newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                                newList.Add("141100000100020" + cLot);
                                break;
                            //formerly outer label set 67
                            case "LAB-OC-HTLG-0045":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200058Ctn. No.");
                                newList.Add("421100001000058" + cCtn);
                                newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060MFG");
                                newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150095EXP");
                                newList.Add("421100001000121" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150130LOT");
                                newList.Add("421100001000149" + cCustOrderLot + cCustRefNo);
                                newList.Add("4d3103001000185" + cLot);
                                newList.Add("410005001000200" + cLot);
                                break;
                            //formerly outer label set 69
                            case "LAB-OC-HTLG-0047":
                                newList.Add("422200000300060" + PadCenter(cCustSize, 11));
                                newList.Add("411200000200100PO No.");
                                newList.Add("421100001100100" + cPo);
                                newList.Add("411200000200130Ctn. No.");
                                newList.Add("421105001100130" + cCtn);
                                newList.Add("411200000200165Lot No.");
                                newList.Add("4d3103001100170" + cLot);
                                newList.Add("410005001100187" + cLot);
                                break;
                            //formerly outer label set 58
                            case "LAB-OC-HTLG-0039":
                                newList.Add("1Y1100000200015LOT");
                                newList.Add("421100001100035" + cCustOrderLot);
                                newList.Add("411200000200065Gross Wt.");
                                newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200090Net Wt.");
                                newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200115PO.");
                                newList.Add("421100001100115" + cPo);
                                newList.Add("411200000200140Case No.");
                                newList.Add("421100001100140" + cCtn);
                                newList.Add("1Y1100000200145MFG");
                                newList.Add("421100001100170" + dMfg.ToString("MM-yyyy"));
                                newList.Add("401105002000190" + cLot);
                                break;
                            //formerly outer label set 59
                            case "LAB-OC-HTLG-0040":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("421200001800090" + PadCenter(cCustSize, 10));
                                newList.Add("411200000200080Ctn. No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("1Y1100000150100MFG");
                                newList.Add("421100001100125" + (dMfg.ToString("MMM-yyyy")));
                                newList.Add("1Y1100000150150LOT");
                                newList.Add("4d3103001100175" + cLot);
                                newList.Add("410005001100187" + cLot);
                                break;
                            //formerly outer label set 61
                            case "LAB-OC-HTLG-0041":
                                newList.Add("410005000200023" + cPo);
                                newList.Add("422400002000090" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200080Ctn. No.");
                                newList.Add("421100001100080" + cCtn);
                                newList.Add("411200000200110Gross Wt.");
                                newList.Add("421100001100110" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200140Net Wt.");
                                newList.Add("421100001100140" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200170Lot No.");
                                newList.Add("4d3103001100175" + cLot);
                                newList.Add("400005001100187" + cLot);
                                break;
                            //formerly outer label set 44
                            case "LAB-OC-HTLG-0031":
                                newList.Add("191100000800070" + PadCenter(cPo, 15));
                                newList.Add("191000000510200Ctn.no.");
                                newList.Add("191000000300200" + cCtn);
                                newList.Add("1D3100000150070" + cLot);
                                break;
                            //formerly outer label set 45
                            case "LAB-OC-HTLG-0032":
                                newList.Add("491000000400035Ctn.No.");
                                newList.Add("491000001300035" + cCtn);
                                newList.Add("491000000400055Mfg. Date.");
                                newList.Add("491100001300055" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("491000000400075Lot No.");
                                newList.Add("4d3102501300080" + cLot);
                                newList.Add("400002501300090" + PadCenter(cLot, 20));
                                newList.Add("401100000400095" + cPo);
                                break;
                            //formerly outer label set 47
                            case "LAB-OC-HTLG-0033":
                                newList.Add("491100000150030" + PadCenter(cPo, 15));
                                newList.Add("491000000150055Lot No.");
                                newList.Add("4d3102500150080" + cLot);
                                newList.Add("400002500150090" + PadCenter(cLot, 20));
                                newList.Add("491000001400050Ctn.No.");
                                newList.Add("491000002200050" + cCtn);
                                newList.Add("491000001400065Mfg.Date. " + dMfg.ToString("MMM-yyyy"));
                                newList.Add("491000001400080Exp.Date. " + dExp.ToString("MMM-yyyy"));
                                break;
                            //formerly outer label set 97
                            case "LAB-OC-IHCP-0001":
                                newList.Add("491000000400035Ctn.No.");
                                newList.Add("491000001300035" + cCtn);
                                newList.Add("491000000400055Mfg. Date.");
                                newList.Add("491100001300055" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("491000000400075Lot No.");
                                newList.Add("4d3102501300080" + cLot);
                                newList.Add("400002501300090" + cLot);
                                newList.Add("401100000400095" + cPo);
                                break;
                            //formerly outer label set 99
                            case "LAB-OC-HTLG-0066":
                                newList.Add("491100000200035" + "PO NO:");
                                newList.Add("491100000900035" + cPo);
                                newList.Add("431100002200060" + PadCenter(cCustSize, 3));
                                newList.Add("491000002200080Ctn.No.");
                                newList.Add("491000002200100" + cCtn);
                                newList.Add("4d3100000900078" + cLot);
                                newList.Add("491100000200100" + "LOT NO:");
                                newList.Add("491100000900100" + cLot);
                                break;
                            //formerly outer label set 56
                            case "LAB-OC-HTLG-0037":
                                newList.Add("111200000600020" + "Batch No.");
                                newList.Add("121100000650130" + cLot);
                                newList.Add("111100000100250" + cCtn);
                                break;
                            //formerly outer label set 57
                            case "LAB-OC-HTLG-0038":
                                newList.Add("1Y1100000200025LOT");
                                newList.Add("421100001100045" + cCustOrderLot);
                                newList.Add("411200000200080Gross Wt.");
                                newList.Add("421100001100080" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000200110Net Wt.");
                                newList.Add("421100001100110" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000200140PO");
                                newList.Add("421100001100140" + cPo);
                                newList.Add("411200000200170Case No.");
                                newList.Add("421100001100170" + cCtn);
                                newList.Add("401105002000190" + cLot);
                                break;
                            //formerly outer label set 85
                            case "LAB-OC-HTLG-0056":
                                //String[] aYear = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                                //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                                //if (nPos > -1)
                                //{
                                //    string cYear = DateTime.Today.ToString("yyyy").Substring(0, 3) + (nPos + 1).ToString();
                                //    DateTime.TryParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", null, DateTimeStyles.None, out dMfg);
                                //}
                                //dExp = dMfg.AddMonths(nExpMonth);
                                newList.Add("191000000650020" + "Lot No.");
                                newList.Add("191000000650100" + cCustOrderLot);
                                newList.Add("1Y1100000250020MFG_H");
                                newList.Add("191000000350100" + dMfg.ToString("MMM yyyy"));
                                newList.Add("101100000150100" + cCtn + "   " + cLot);
                                break;
                            //formerly outer label set 87
                            case "LAB-OC-OKMT-0001":
                                cGs1 = "01" + cOuterGtn14_Code + "10" + cLot;
                                cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cLot;
                                newList.Add("400005000150020" + cPo);
                                newList.Add("422300001600095" + cCustSize);
                                newList.Add("411200000150060Carton No:");
                                newList.Add("421100000150083" + cCtn);
                                newList.Add("411200000150120GS1 code:");
                                newList.Add("4e3103000150155C&G" + cGs1);
                                newList.Add("400005000150170" + cReadable);
                                break;
                            //formerly outer label set 107
                            case "LAB-OC-HTLG-0072":
                                newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                                newList.Add("111100000800240" + cCtn);
                                newList.Add("121100000550020" + "LOT NO.:");
                                newList.Add("141100000150020" + cLot);
                                break;
                            //formerly outer label set 36
                            case "LAB-OC-HTLG-0026":
                                newList.Add("4e2202500500040C" + cCustOrderLot);
                                newList.Add("411100000500055" + cCustOrderLot);
                                newList.Add("411100000500070" + cLot);
                                newList.Add("411100001700090" + cCtn);
                                break;
                            //formerly outer label set 89
                            case "LAB-OC-HTLG-0058":
                                newList.Add("100005000600040" + cOrderNum);
                                newList.Add("111000000300040" + cLot);
                                newList.Add("191000000500180Ctn.No.");
                                newList.Add("191000000270180" + cCtn);
                                break;
                            //formerly outer label set 90
                            case "LAB-OC-HTLG-0059":
                                //dMfg = dEtd;
                                //dExp = dMfg.AddMonths(nExpMonth);
                                newList.Add("1Y1100000150020LOT");
                                newList.Add("421100001000042" + cCustOrderLot);
                                newList.Add("411200000150070PO. No.");
                                newList.Add("421100001000067" + cPo);
                                newList.Add("411200000150095Ctn. No.");
                                newList.Add("421100001000092" + cCtn);
                                newList.Add("1Y1100000150100MFG");
                                newList.Add("421100001000125" + dMfg.ToString("yyyy-MM"));
                                newList.Add("1Y1100000150135EXP");
                                newList.Add("421100001000162" + dExp.ToString("yyyy-MM"));
                                newList.Add("410000001850185" + cLot);
                                break;
                            //formerly outer label set 92
                            case "LAB-OC-HTLG-0061":
                                cGs1 = "10" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                cReadable = "(10)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;
                                newList.Add("2e2105010350105C&G" + cGs1);
                                newList.Add("200000010350090" + cReadable);
                                newList.Add("242200007500100" + PadCenter(cCustSize, 3));
                                newList.Add("2X1110005350080" + "L001500");
                                newList.Add("201100010350070" + "PO No");
                                newList.Add("221100009850054" + cPo);
                                newList.Add("201100008150070" + "Mfg Date");
                                newList.Add("221100007550054" + dEtd.ToString("yyyy-MM")); //Shipment ETD date
                                newList.Add("201100006500070" + "Ctn No");
                                newList.Add("291100006050054" + cCtn);
                                newList.Add("200000006500020" + cLot);
                                newList.Add("2X1110005350050" + "L001500");
                                newList.Add("201100010350040" + "Lot No");
                                newList.Add("221100009850024" + cCustOrderLot);
                                newList.Add("201100008150040" + "Exp Date");
                                newList.Add("221100007550024" + dExp.ToString("yyyy-MM"));
                                newList.Add("2X1110005250010" + "L200001");
                                newList.Add("242200005000080" + PadCenter(cCustSize, 3));      // cCsize.Trim());
                                newList.Add("2e2105003250105C&G" + cGs1);
                                newList.Add("200000003250090" + cReadable);
                                newList.Add("2X1110000100080" + "L001500");
                                newList.Add("201100005100070" + "PO No");
                                newList.Add("221100004600054" + cPo);
                                newList.Add("201100002900070" + "Mfg Date");
                                newList.Add("221100002300054" + dEtd.ToString("yyyy-MM"));
                                newList.Add("201100001250070" + "Ctn No");
                                newList.Add("291100000800054" + cCtn);
                                newList.Add("200000001250020" + cLot);
                                newList.Add("2X1110000100050" + "L001500");
                                newList.Add("201100005100040" + "Lot No");
                                newList.Add("221100004600024" + cCustOrderLot);
                                newList.Add("201100002900040" + "Exp Date");
                                newList.Add("221100002300024" + dExp.ToString("yyyy-MM"));

                                objOuterLabelDTO.barcodeToValidate = dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                                objOuterLabelDTO.countToValidate = cGs1.Length;

                                break;
                            //formerly outer label set 17
                            case "LAB-OC-HTLG-0011":
                                cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4);
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4);
                                newList.Add("2e1109009850105C&G" + cGs1);
                                newList.Add("201100009850090" + cReadable);
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400007000110" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100007000110" + PadCenter(cCustSize, 5));

                                newList.Add("2X1110005350080L001500");
                                newList.Add("201100010350070Gross Wt");
                                newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100009050070Exp Date");
                                newList.Add("221100008350054" + dExp.ToString("MMM-yyyy"));
                                newList.Add("201100007200070PO No");
                                newList.Add("291100006700054" + cPo);

                                newList.Add("2X1110005350050L001500");
                                newList.Add("201100010350040Nett Wt");
                                newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100009050040Reorder No");
                                newList.Add("221100008350024" + cProdRefNo);
                                newList.Add("201100007200040Ctn No");
                                newList.Add("221100006700024" + cCtn);

                                newList.Add("2X1110005250010L200001");
                                if (cCustSize.Contains("½"))
                                    newList.Add("223400004500110" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                                else
                                    newList.Add("261100004500110" + PadCenter(cCustSize, 5));

                                newList.Add("2e1109002750105C&G" + cGs1);
                                newList.Add("201100002750090" + cReadable);

                                newList.Add("2X1110000100080L001500");
                                newList.Add("201100005100070Gross Wt");
                                newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                                newList.Add("201100003800070Exp Date");
                                newList.Add("221100003100054" + dExp.ToString("MMM-yyyy"));
                                newList.Add("201100001950070PO No");
                                newList.Add("291100001450054" + cPo);

                                newList.Add("2X1110000100050L001500");
                                newList.Add("201100005100040Nett Wt");
                                newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                                newList.Add("201100003800040Reorder No");
                                newList.Add("221100003100024" + cProdRefNo);
                                newList.Add("201100001950040Ctn No");
                                newList.Add("221100001450024" + cCtn);
                                break;
                            //formerly outer label set 117
                            case "LAB-OC-ANSL-0001":
                                cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                                newList.Add("410005002400030" + cCtn);
                                newList.Add("422400000300100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000200130PO No.");
                                newList.Add("421100001000130" + cPo);
                                newList.Add("411200000200165Lot No.");
                                newList.Add("4e1103001000170C&G" + cGs1);
                                newList.Add("410005001000187" + cReadable);
                                newList.Add("100000002800115" + cLot);
                                break;
                            //formerly outer label set 116
                            case "LAB-OC-HTLG-0078":
                                newList.Add("410005000100030" + cPo);
                                newList.Add("411200000100058Ctn. No.");
                                newList.Add("421100000820058" + cCtn);
                                newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000100060MFG");
                                newList.Add("421100000820085" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100095EXP");
                                newList.Add("421100000820121" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100130LOT");
                                newList.Add("421100000820149" + cCustOrderLot);
                                newList.Add("4d3103000820185" + cLot);
                                newList.Add("410005000820200" + cLot);
                                break;
                            //formerly outer label set 113
                            case "LAB-OC-HTLG-0076":
                                newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                                newList.Add("111100000800240" + cCtn);
                                newList.Add("111100000650020" + "LOT NO.:");
                                newList.Add("121100000600240" + PadCenter(cCustSize, 5));
                                newList.Add("141100000230020" + cLot);
                                newList.Add("111100000050020" + "Exp Date: " + dExp.ToString("MMM yyyy")); ;
                                break;
                            //formerly outer label set 41
                            case "LAB-OC-HTLG-0030":
                                newList.Add("410005000200020" + cPo);
                                newList.Add("422400000100117" + PadCenter(cCustSize, 11));
                                newList.Add("421100000000159" + PadCenter(cBrand, 25));
                                newList.Add("411200000100205Ctn. No.");
                                newList.Add("421100001100203" + cCtn);
                                newList.Add("421100001100248" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("421100001100294" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000100220LOGO");
                                newList.Add("4d3105001100373" + cLot);
                                newList.Add("410005001100388" + cLot);
                                break;
                            //formerly outer label set 96
                            case "LAB-OC-HTLG-0065":
                                //DateTime.TryParseExact(cCustOrderLot.Substring(0, 4) + "01", "yyMMdd", null, DateTimeStyles.None, out dExp);
                                cGs1 = "01" + cOuterGtn14_Code + "17" + cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                                cReadable = "(01)" + cOuterGtn14_Code + "(17)" + cCustOrderLot.Substring(0, 6) + "(10)" + Right(cCustOrderLot, 10);
                                //dMfg = dExp.AddMonths(-nExpMonth);

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200055Ctn. No.");
                                newList.Add("421100001000055" + cCtn);
                                newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150060EXP");
                                newList.Add("421100001000085" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150100LOT");
                                newList.Add("421105001000115" + Right(cCustOrderLot, 10));
                                newList.Add("410005000150140" + "GS1 code:");
                                newList.Add("4e1103000150180C&G" + cGs1);
                                newList.Add("400000000150190" + cReadable);

                                objOuterLabelDTO.barcodeToValidate = cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                                objOuterLabelDTO.countToValidate = cGs1.Length;
                                break;
                            //formerly outer label set 94
                            case "LAB-OC-HTLG-0063":
                                string cCSizeNumNewLabelSet = string.Empty, cCsizeStrNewLabelSet = string.Empty;
                                string sNewLabelSet = cCustSize;
                                foreach (char c in sNewLabelSet)
                                {
                                    if (char.IsDigit(c) && c != '.')
                                    {
                                        cCSizeNumNewLabelSet += c.ToString();
                                    }
                                    else
                                    {
                                        cCsizeStrNewLabelSet += c.ToString();
                                    }
                                }

                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000085" + PadCenter(cCSizeNumNewLabelSet, 5));
                                newList.Add("422300002000145" + PadCenter(cCsizeStrNewLabelSet, 5));
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                break;
                            //formerly outer label set 65
                            case "LAB-OC-HTLG-0044":
                                newList.Add("410005000200030" + cPo);
                                newList.Add("411200000200075Ctn. No.");
                                newList.Add("421100001000075" + cCtn);
                                newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                                newList.Add("1Y1100000150082MFG");
                                newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150119EXP");
                                newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                                newList.Add("1Y1100000150157LOT");
                                newList.Add("4d3103001000184" + cLot);
                                newList.Add("410005001000199" + cLot);
                                break;
                            //formerly outer label set 125
                            case "LAB-OC-HTLG-0082":
                                newList.Add("442200000500100" + PadCenter(cCustSize, 5));
                                newList.Add("411200000200145" + "Batch No.");
                                newList.Add("421100001100140" + cLot);
                                newList.Add("411100002200175" + cCtn);
                                break;
                            #endregion new label set
                            default:
                                objOuterLabelDTO.isLabelSetDoesnotExists = true;
                                break;

                        }
                        #endregion
                        //added by adamas for outer label print based on configuration of brand master
                        if (nooflabelprint > 1)
                        {
                            string nooflabeltoprint = nooflabelprint.ToString().PadLeft(4, '0');
                            string finalnooflabellabel = "Q" + nooflabeltoprint;
                            newList.Add(finalnooflabellabel);
                        }

                        newList.Add("E");
                        // Start printing process
                        if (WorkStationDataConfiguration.GetInstance().LHardwareIntegration == true)
                            objOuterLabelDTO.isPrintSuccess = LabelPrinterX2000LPT(newList.ToArray());
                        else
                        {
                            # region TestCode
                            //string filePath = @"\\192.168.9.47\fs\SIT\FinalPackingOuterLabel.txt";
                            //using (StreamWriter writer = new StreamWriter(filePath, true))
                            //{
                            //    writer.WriteLine("nExpMonth:" + nExpMonth);
                            //    writer.WriteLine("dMfg: " + dMfg);
                            //    writer.WriteLine("dExp: " + dExp);
                            //    writer.WriteLine("cGs1: " + cGs1);
                            //    writer.WriteLine("cReadable: " + cReadable);
                            //    writer.WriteLine("cLot: " + cLot);
                            //    writer.WriteLine("cProdRefNo:" + cProdRefNo);
                            //    writer.WriteLine("cPo: " + cPo);
                            //    writer.WriteLine("cCustSize: " + cCustSize);
                            //    writer.WriteLine("cCustOrderLot: " + cCustOrderLot);
                            //    writer.WriteLine("nGross: " + nGross);
                            //    writer.WriteLine("nNett" + nNett);
                            //    writer.WriteLine("cCustRefNo: " + cCustRefNo);
                            //    writer.WriteLine("cHartaSize: " + cHartaSize);
                            //    writer.WriteLine("cOrderNum: " + cOrderNum);
                            //    writer.WriteLine("cOuterGtn14_Code " + cOuterGtn14_Code);
                            //    writer.WriteLine("cDistBy " + cDistBy);
                            //    writer.WriteLine("cDistCountry " + cDistCountry);
                            //    writer.WriteLine("cBrand " + cBrand);
                            //    writer.WriteLine("dEtd " + dEtd);
                            //    writer.WriteLine("nInnerBox " + nInnerBox);
                            //    writer.WriteLine("cBatchTime " + cBatchTime);
                            //    writer.WriteLine("Case Number :" + objPurchaseOrderItemDTO.CaseNumber);
                            //    writer.WriteLine("InternalLotnumber: " + internalLotNumber);
                            //}
                            # endregion
                        }
                    }
                    // set isPrintSuccess=true; if success printing, else false
                    objOuterLabelDTO.isPrintSuccess = true;
                }
                return objOuterLabelDTO;
        }
        /// <summary>
        /// To Reprint Outer Label
        /// </summary>
        /// <param name="soNumber">SOLINE Number</param>
        /// <param name="itemNumber">ItemNumber</param>
        /// <param name="size">Item Size</param>
        /// <param name="startCase">Start case</param>
        /// <param name="endCase">End Case</param>
        /// <returns>returns Outer Label Print</returns>     
        public static OuterLabelDTO ReprintOuterLabelPrint(string soNumber, string itemNumber, string size, int startCase, int endCase, string _InternalLotNo = null, int NoCopy = 0,int nooflabelprint = 0)
        {
            OuterLabelDTO objOuterLabelDTO = new OuterLabelDTO();
            SOLineDTO objSOLineDTO = FinalPackingBLL.GetSOLineData(soNumber, itemNumber, size);
            List<PurchaseOrderItemDTO> lstPurchaseOrderItemDTO = new List<PurchaseOrderItemDTO>();
            FinalPackingDTO objFinalPackingDTO = new FinalPackingDTO();
            string itemType = string.Empty;
            itemType = FinalPackingBLL.GetItemType(soNumber, itemNumber, size);
            string stationNumber = WorkStationDataConfiguration.GetInstance().stationNumber;

            if (string.IsNullOrEmpty(_InternalLotNo))
            {
                lstPurchaseOrderItemDTO = FinalPackingBLL.GetPurchaseOderItemCaseforReprint(soNumber, itemNumber, size, startCase, endCase);    // reprint By Carton Size n Case
            }
            else
            {
                lstPurchaseOrderItemDTO = FinalPackingBLL.GetPurchaseOderItemCaseforReprint(soNumber, itemNumber, size, startCase, endCase, _InternalLotNo);  // Reprint By InternalLotNumber
                if (NoCopy > 0) // Print quantity
                    lstPurchaseOrderItemDTO.AddRange(Enumerable.Repeat(lstPurchaseOrderItemDTO[0], NoCopy - 1));
            }

            string cProdRefNo = string.Empty;
            string cPo = string.Empty;
            string cCustSize = string.Empty;
            string cCustOrderLot = string.Empty;
            string cPline = string.Empty;
            string cCustRefNo = string.Empty;
            string cHartaSize = string.Empty;
            string cOrderNum = string.Empty;
            string cInnerGtn14_Code = string.Empty;
            string cOuterGtn14_Code = string.Empty;
            string cDistBy = string.Empty;
            string cDistCountry = string.Empty;
            string cBrand = string.Empty;
            string cBatchTime = string.Empty;
            string c2ndLocation = string.Empty;
            string cCustSizeFull = string.Empty;
            string cPackSize = string.Empty;
            string cCustIntrnlPrd = string.Empty;
            string cTotalCarton = objSOLineDTO.ItemCases.ToString();
            string cSerial = string.Empty;
            string cItemNumber = objSOLineDTO.ItemNumber;
            string cHartaRfCode = string.Empty;
            string cPzn = string.Empty;
            string cPackDate = string.Empty;
            string cExpYear = string.Empty;
            int nExpMonth = objSOLineDTO.Expiry;
            int lettercount = 0;
            string cSubBrand2 = string.Empty;
            string[] separators = new string[1];
            string[] words = null;

            string cGs1 = string.Empty;
            string cReadable = string.Empty;
            string cLot = string.Empty;

            if (!string.IsNullOrEmpty(objSOLineDTO.Reference1))
            {
                cProdRefNo = objSOLineDTO.Reference1.Trim();
            }
            if (!string.IsNullOrEmpty(objSOLineDTO.CustomerSizeDesc))
            { cCustSize = objSOLineDTO.CustomerSizeDesc.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.CustomerLotNumber))
            { cCustOrderLot = objSOLineDTO.CustomerLotNumber.Trim(); }

            decimal nGross = objSOLineDTO.GrossWeight;
            decimal nNett = objSOLineDTO.NettWeight;

            if (!string.IsNullOrEmpty(objSOLineDTO.Reference1))
            { cCustRefNo = objSOLineDTO.Reference1.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.ItemSize))
            { cHartaSize = objSOLineDTO.ItemSize.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.InnerProductCode))
            { cInnerGtn14_Code = objSOLineDTO.InnerProductCode.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.CustomerRefernceNumber))
            { cOrderNum = objSOLineDTO.CustomerRefernceNumber.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.OuterProductCode))
            { cOuterGtn14_Code = objSOLineDTO.OuterProductCode.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.Reference1))
            { cDistBy = objSOLineDTO.Reference1.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.Reference2))
            { cDistCountry = objSOLineDTO.Reference2.Trim(); }

            if (!string.IsNullOrEmpty(objSOLineDTO.ItemName))
            { cBrand = objSOLineDTO.ItemName.Trim(); }

            DateTime dEtd = objSOLineDTO.SHIPPINGDATEREQUESTED;
            int nInnerBox = objSOLineDTO.CaseCapacity;

            // yiksiu SEP 2017 : Label Set Optimization
            string outerLabelSetDateFormat = FinalPackingBLL.GetLabelSetDateFormat(objSOLineDTO.OuterLabelSetDateFormat);

            foreach (PurchaseOrderItemDTO objPurchaseOrderItemDTO in lstPurchaseOrderItemDTO)
            {
                if (!string.IsNullOrEmpty(objPurchaseOrderItemDTO.internallotnumber))
                {
                    if (itemType == Convert.ToString(Constants.SIX))
                        objFinalPackingDTO = FinalPackingBLL.GetSecondGradeInternalLotNumberDetails(objPurchaseOrderItemDTO.internallotnumber);
                    else
                        objFinalPackingDTO = FinalPackingBLL.GetInternalLotNumberDetails(objPurchaseOrderItemDTO.internallotnumber);
                    cLot = objPurchaseOrderItemDTO.internallotnumber;
                    cSerial = objFinalPackingDTO.Serialnumber.ToString("#0");
                    DateTime dMfg = Convert.ToDateTime(objFinalPackingDTO.ManufacturingDate);
                    DateTime dExp = Convert.ToDateTime(objFinalPackingDTO.ExpiryDate);
                    List<BatchDTO> objBatchDTO = FinalPackingBLL.BatchCardDetailsbyInternalLotNumber(objPurchaseOrderItemDTO.internallotnumber);
                    if (objBatchDTO.Count > Constants.ZERO)
                    {
                        if (!string.IsNullOrEmpty(objBatchDTO[0].Line))
                        { cPline = objBatchDTO[0].Line.Trim(); }

                        if (!string.IsNullOrEmpty(objBatchDTO[0].ShortTime))
                        { cBatchTime = objBatchDTO[0].ShortTime; }

                    }

                    if (!string.IsNullOrEmpty(objFinalPackingDTO.locationId.ToString()))
                    {
                        c2ndLocation = objFinalPackingDTO.locationId.ToString("D" + 2);
                    }

                    if (!string.IsNullOrEmpty(objSOLineDTO.OrderNumber))
                    {
                        cPo = objSOLineDTO.OrderNumber.Trim();
                    }
                    List<String> newList = new List<string>();
                    newList.Add("f300");
                    newList.Add("L");
                    newList.Add("H07");
                    newList.Add("PC");
                    newList.Add("1e1101099999999C&G" + "                                                            "); // This to avoid print extra digit in GS1-128 barcode.
                    string cCtn = objPurchaseOrderItemDTO.CaseNumber.ToString("D" + 5);

                    if (objPurchaseOrderItemDTO.isPreshipment)
                    {
                        PreshipmentSticker(cPo, objFinalPackingDTO.PreshipmentPLTId, cCtn);
                    }
                    #region Outer Set
                    switch (objFinalPackingDTO.Outersetlayout)
                    {
                        #region Old Outer Label
                        #region Outer Label 300, LAB-OC-IHCP-0005
                        case "300":
                        case "LAB-OC-IHCP-0005":
                            newList.Add("491000000400035Ctn.No.");
                            newList.Add("491000001300035" + cCtn);
                            newList.Add("491000000400055Mfg. Date.");
                            newList.Add("491100001300055" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491000000400075Lot No.");
                            newList.Add("4d3102501300080" + cLot);
                            newList.Add("400002501300090" + cLot);
                            newList.Add("401100000400095" + cPo);
                            break;
                        #endregion
                        #region Outer Label LAB-OC-DESK-0002, Former 231
                        case "LAB-OC-DESK-0002":

                            String[] cMonthN1 = { "JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ" };
                            dExp = dMfg.AddMonths(nExpMonth);

                            cGs1 = "01" + cOuterGtn14_Code + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cCustOrderLot;

                            newList.Add("422200000150057" + PadCenter(cCustSize, 11));
                            newList.Add("490000000150090" + "Caixa No /");
                            newList.Add("491100000150110" + "Carton No :");
                            newList.Add("491100002000110" + cCtn);
                            newList.Add("491100000150140" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                            newList.Add("491100000150160" + "Manufacturing Date:");
                            newList.Add("491100000800180" + cMonthN1[Convert.ToInt32(dMfg.ToString("MM")) - 1] + "/" + dMfg.ToString("yyyy"));
                            newList.Add("491100000150210" + "Validade/Expiry Date:");
                            newList.Add("491100000800230" + cMonthN1[Convert.ToInt32(dExp.ToString("MM")) - 1] + "/" + dExp.ToString("yyyy"));
                            newList.Add("491100000150260" + "Lote:");
                            newList.Add("491100000800260" + cCustOrderLot);
                            newList.Add("401100000150275" + cPo + "  " + cLot);
                            newList.Add("4e2105000150340" + "C&G" + cGs1);
                            newList.Add("400000000150350" + cReadable.ToString());

                            break;
                        #endregion
                        #region Outer Label 299, LAB-OC-IHCP-0004
                        case "299":
                        case "LAB-OC-IHCP-0004":
                            newList.Add("491000000400050Ctn.No.");
                            newList.Add("491000001300050" + cCtn);
                            newList.Add("491000000400080Mfg. Date.");
                            newList.Add("491100001300080" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491000000400110Exp. Date.");
                            newList.Add("491100001300110" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("491000000400145Lot No.");
                            newList.Add("4d3103501300155" + cLot);
                            newList.Add("400002501300170" + cLot);
                            newList.Add("401100000400190" + cPo);
                            break;
                        #endregion
                        #region Outer Label 298, LAB-OC-HTLG-0157
                        case "298":
                        case "LAB-OC-HTLG-0157":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + cCustOrderLot.Substring(0, 6) + "(10)" + Right(cCustOrderLot, 10);

                            newList.Add("410005000600030" + cPo);
                            newList.Add("411200000600055Ctn. No.");
                            newList.Add("421100001600055" + cCtn);
                            newList.Add("422300002900080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000650060MFG");
                            newList.Add("421100001600085" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000650100EXP");
                            newList.Add("421100001600120" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000650140LOT");
                            newList.Add("421105001600158" + Right(cCustOrderLot, 10));
                            newList.Add("410005000650180" + "GS1 code:");
                            newList.Add("4e1106000650240C&G" + cGs1);
                            newList.Add("400000000650250" + cReadable);
                            break;
                        #endregion
                        #region Outer Label  LAB-OC-HTLG-0035, Former 50
                        case "LAB-OC-HTLG-0035":
                            newList.Add("191100000800015" + PadCenter(cPo, 15));
                            newList.Add("191000000500020" + "Lot No.");
                            newList.Add("1E3102500100020" + "C&G" + Right(cCustOrderLot, 12));
                            newList.Add("191000000600135" + "Ctn.No.");
                            newList.Add("191000000600229" + cCtn);
                            newList.Add("191000000400135" + "Mfg. Date.  " + dMfg.ToString("MMM-yyyy"));
                            newList.Add("191000000200135" + "Exp. Date.  " + dExp.ToString("MMM-yyyy"));
                            break;
                        #endregion
                        #region Outer Label 295, LAB-OC-HTLG-0155
                        case "295":
                        case "LAB-OC-HTLG-0155":
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100001000051" + cLot);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100001000095" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("421100001000141" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100001000179" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 296, LAB-OC-HTLG-0156
                        case "LAB-OC-HTLG-0156":
                        case "296":
                            cGs1 = "01" + cOuterGtn14_Code;
                            cReadable = "(01)" + cOuterGtn14_Code;
                            newList.Add("411100000150030" + "Batch No. ");
                            newList.Add("411100000950030" + cLot);
                            newList.Add("4e1107000800130" + "C&G" + cGs1);
                            newList.Add("411100000700150" + cReadable);
                            newList.Add("411100002500190" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 297, LAB-OC-HTLG-0154
                        case "297":
                        case "LAB-OC-HTLG-0154":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "30" + cCustRefNo + "&G" + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(30)" + cCustRefNo + "(10)" + cCustOrderLot;

                            newList.Add("410005000200035" + cPo);
                            newList.Add("410005003000035" + "CTN: " + cCtn);
                            newList.Add("423400002300140" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000250050" + "MFG");
                            newList.Add("421100000700075" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000250095" + "EXP");
                            newList.Add("421100000700120" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000250145" + "LOT");
                            newList.Add("421105000700165" + cCustOrderLot);
                            newList.Add("400000000600280" + cReadable);
                            newList.Add("4e1108000600270" + "C&G" + cGs1);

                            break;
                        #endregion
                        #region Outer Label 294, LAB-OC-HTLG-0153
                        case "294":
                        case "LAB-OC-HTLG-0153":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200055" + "Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060" + "EXP");
                            newList.Add("421100001000085" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150100" + "LOT");
                            newList.Add("421105001000115" + cCustOrderLot);
                            newList.Add("410005000150140" + "GS1 code:");
                            newList.Add("4e1103000150180" + "C&G" + cGs1);
                            newList.Add("400000000150190" + cReadable);

                            objOuterLabelDTO.barcodeToValidate = dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            objOuterLabelDTO.countToValidate = cGs1.Length;
                            break;
                        #endregion
                        #region Outer label 293, LAB-OC-HTLG-0152
                        case "LAB-OC-HTLG-0152":
                        case "293":

                            newList.Add("400000000150115" + "Size: " + cCustSize + "   " + cLot);
                            newList.Add("4e3102500150165" + cCustOrderLot);
                            newList.Add("400000000150175" + cCustOrderLot);

                            newList.Add("D11");
                            newList.Add("430000000150035" + cPo);
                            newList.Add("430000000150055" + "Ctn.: " + cCtn);
                            newList.Add("430000000150075" + "Mfg.: " + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("430000000150095" + "Exp.: " + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("430000000150135" + "Lot No.");

                            break;
                        #endregion
                        #region Outer Label 291, LAB-OC-HLYD-0012
                        case "LAB-OC-HLYD-0012":
                        case "291":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9);
                            cReadable = "(01)" + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cLot.Substring(0, 9);

                            newList.Add("211100003800076" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100002300076" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("211100001160076" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100003700063" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1105003790011" + "C&G" + cGs1);     //GS1 barcode - check paramater
                            newList.Add("201100000400010" + cCtn);     //GS1 barcode - check paramater
                            break;
                        #endregion
                        #region Outer Label 290, LAB-OC-HLYD-0011
                        case "LAB-OC-HLYD-0011":
                        case "290":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9);
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + " " + "(17)" + dExp.ToString("yyMMdd") + " " + "(10)" + cLot.Substring(0, 9);

                            newList.Add("211100003790076" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100002290076" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("211100001120076" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100003790063" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1105003790011" + "C&G" + cGs1);     //GS1 barcode - check paramater
                            newList.Add("201100000400010" + cCtn);     //GS1 barcode - check paramater
                            break;
                        #endregion
                        #region Outer Label 289, LAB-OC-HLYD-0010
                        case "LAB-OC-HLYD-0010"://Halyard
                        case "289"://Halyard

                            cGs1 = "~1" + "01" + cOuterGtn14_Code + "20" + cDistCountry + "11" + dMfg.ToString("yyMMdd") + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9) + "~1" + "30" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10);


                            newList.Add("D11");
                            newList.Add("290000101420074" + "(01)" + cOuterGtn14_Code + "(20)" + cDistCountry);
                            newList.Add("290000101420060" + "(11)" + dMfg.ToString("yyMMdd") + "(17)" + dExp.ToString("yyMMdd"));
                            newList.Add("290000101420046" + "(10)" + cLot.Substring(0, 9) + "(30)" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10));
                            newList.Add("D22");
                            newList.Add("2W1c44000019800402000000000" + cGs1);
                            newList.Add("211100003490082" + cLot.Substring(0, 9));
                            newList.Add("211100003490060" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("211100003490038" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("211100000680024" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 288, LAB-OC-VRDT-0001
                        case "LAB-OC-VRDT-0001":
                        case "288":

                            cCustOrderLot = dMfg.ToString("yyMMdd") + Right(cOrderNum, 6).Substring(0, 3);

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot;

                            newList.Add("410005000200030" + cLot);
                            newList.Add("411200000200055" + "Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060" + "EXP");
                            newList.Add("421100001000085" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150100" + "LOT");
                            newList.Add("421105001000115" + cCustOrderLot);
                            newList.Add("410005000150140" + "GS1 code:");
                            newList.Add("4e1103000150180" + "C&G" + cGs1);
                            newList.Add("400000000150190" + cReadable);

                            objOuterLabelDTO.barcodeToValidate = dExp.ToString("yyMMdd") + "00" + "10" + cCustOrderLot;
                            objOuterLabelDTO.countToValidate = cGs1.Length;

                            break;
                        #endregion
                        #region Outer label 286, LAB-OC-HTLG-0150
                        case "LAB-OC-HTLG-0150":
                        case "286":

                            newList.Add("191000000700015" + "Mfg.: " + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("191000000500015" + "Exp.: " + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("191000000300015" + "Ctn.: " + cCtn);
                            newList.Add("1e3104000400142" + "B" + cCustOrderLot);
                            newList.Add("101100000300162" + "LOT# " + cCustOrderLot);
                            newList.Add("101100000130015" + "Size: " + cCustSize + "   " + cLot);

                            break;
                        #endregion
                        #region Outer Label 283, LAB-OC-HTLG-0149
                        case "LAB-OC-HTLG-0149":
                        case "283":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 12);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 12);

                            newList.Add("201100010350185" + "DO NOT COVER THIS LABEL");
                            newList.Add("2e1107010350105C&G" + cGs1);
                            newList.Add("201100010350090" + cReadable);
                            if (cCustSize.Contains("½"))
                                newList.Add("223400007000125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100007000125" + PadCenter(cCustSize, 5));

                            newList.Add("201100007500107" + "LOT NO.");
                            newList.Add("2e1101807050107" + cLot);
                            newList.Add("201100007050097" + cLot);
                            newList.Add("201100007500083" + "Reorder No.");
                            newList.Add("201100006800083" + cProdRefNo);
                            newList.Add("2X1110005350078L001500");
                            newList.Add("201100010350068Gross Wt");
                            newList.Add("221100009850052" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100009050068Mfg Date");
                            newList.Add("221100008350052" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("201100007200068PO No");
                            newList.Add("291100006700052" + cPo);
                            newList.Add("2X1110005350048L001500");
                            newList.Add("201100010350038Nett Wt");
                            newList.Add("221100009850022" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100009050038Exp Date");
                            newList.Add("221100008350022" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100007200038Ctn No");
                            newList.Add("221100006700022" + cCtn);
                            newList.Add("2X1110005250010L200001");
                            if (cCustSize.Contains("½"))
                                newList.Add("223400004500125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100004500125" + PadCenter(cCustSize, 5));

                            newList.Add("201100005100107" + "LOT NO.");
                            newList.Add("2e1101804650107" + cLot);
                            newList.Add("201100004650097" + cLot);
                            newList.Add("201100005100083" + "Reorder No.");
                            newList.Add("201100004400083" + cProdRefNo);
                            newList.Add("201100002750185" + "DO NOT COVER THIS LABEL");
                            newList.Add("2e1107002750105C&G" + cGs1);
                            newList.Add("201100002750090" + cReadable);
                            newList.Add("2X1110000100078L001500");
                            newList.Add("201100005100068Gross Wt");
                            newList.Add("221100004600052" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100003800068Mfg Date");
                            newList.Add("221100003100052" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("201100001950068PO No");
                            newList.Add("291100001450052" + cPo);
                            newList.Add("2X1110000100048L001500");
                            newList.Add("201100005100038Nett Wt");
                            newList.Add("221100004600022" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100003800038Exp Date");
                            newList.Add("221100003100022" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100001950038Ctn No");
                            newList.Add("221100001450022" + cCtn);

                            break;
                        #endregion
                        #region Outer Label 287, LAB-OC-MEDL-0024
                        case "LAB-OC-MEDL-0024":
                        case "287":

                            cCustRefNo = "HTL" + dMfg.ToString("yyMM") + cCustOrderLot;
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                            newList.Add("D11");
                            newList.Add("490000202700108" + cCustRefNo);
                            newList.Add("490000202700126" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202700145" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202700160" + cPo);
                            newList.Add("490000202700172" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000202700184" + cCtn);
                            newList.Add("490000102700200" + cLot);
                            newList.Add("490000206700108" + cCustRefNo);
                            newList.Add("490000206700126" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206700145" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206700160" + cPo);
                            newList.Add("490000206700172" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000206700184" + cCtn);
                            newList.Add("490000106700200" + cLot);
                            newList.Add("D22");
                            newList.Add("4e1106000300340" + "C&G" + cGs1);
                            newList.Add("400000000570350" + cReadable);
                            newList.Add("4e1106004300340" + "C&G" + cGs1);
                            newList.Add("400000004570350" + cReadable);

                            break;
                        #endregion
                        #region Outer Label 285, LAB-OC-MEDL-0023
                        case "LAB-OC-MEDL-0023":
                        case "285":

                            cCustRefNo = Right(dMfg.ToString("yyMM"), 3) + cCustOrderLot;
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                            newList.Add("D11");
                            newList.Add("490000202100147" + cCustRefNo);
                            newList.Add("490000202100170" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202100192" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202100208" + cPo);
                            newList.Add("490000202100220" + nNett.ToString("0.0 Kg"));
                            newList.Add("490000202100231" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000202100244" + cCtn);
                            newList.Add("490000102100260" + cLot);
                            newList.Add("490000206100147" + cCustRefNo);
                            newList.Add("490000206100170" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206100192" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206100208" + cPo);
                            newList.Add("490000206100220" + nNett.ToString("0.0 Kg"));
                            newList.Add("490000206100231" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000206100244" + cCtn);
                            newList.Add("490000106100260" + cLot);
                            newList.Add("D22");
                            newList.Add("4e1106000600340" + "C&G" + cGs1);
                            newList.Add("400000000740350" + cReadable);
                            newList.Add("4e1106004400340" + "C&G" + cGs1);
                            newList.Add("400000004540350" + cReadable);

                            break;
                        #endregion
                        #region Outer Label 284, LAB-OC-HTLG-0148
                        case "LAB-OC-HTLG-0148":
                        case "284":

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075" + "Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            if (cCustSize.Contains("½"))
                                newList.Add("422300001950145" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("422300001950145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150082" + "MFG");
                            newList.Add("421100000950112" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150119" + "EXP");
                            newList.Add("421100000950145" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150157" + "LOT");
                            newList.Add("4d3103000950184" + cLot);
                            newList.Add("410005000950199" + cLot);
                            newList.Add("D11");
                            newList.Add("4e4102001750070" + cLot + cCtn);
                            newList.Add("410005001900080" + cLot + cCtn);
                            newList.Add("D22");
                            break;
                        #endregion
                        #region Outer Label 282, LAB-OC-MEDL-0022
                        case "LAB-OC-MEDL-0022":
                        case "282":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("2e2105013550105" + "C&G" + cGs1);
                            newList.Add("200000013550090" + cReadable);
                            newList.Add("242200009900100" + PadCenter(cCustSize, 3));
                            newList.Add("2X1110007180080" + "L001665");
                            newList.Add("201100013830070" + "PO No");
                            newList.Add("221100013360054" + cPo);
                            newList.Add("201100011750070" + "Mfg Date");
                            newList.Add("221100011200054" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("201100009900070" + "Gross Wt.");
                            newList.Add("221100009300054" + nGross.ToString("0.0 Kgs"));
                            newList.Add("201100008250070" + "Ctn No");
                            newList.Add("291100007800054" + cCtn);
                            newList.Add("200000008250020" + cLot);
                            newList.Add("2X1110007180050" + "L001665");
                            newList.Add("201100013830040" + "Lot No");
                            newList.Add("221100013360024" + cCustOrderLot);
                            newList.Add("201100011750040" + "Exp Date");
                            newList.Add("221100011200024" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100009900040" + "Nett Wt.");
                            newList.Add("221100009300024" + nNett.ToString("0.0 Kgs"));
                            newList.Add("2X1110007030010" + "L200001");
                            newList.Add("242200002700100" + PadCenter(cCustSize, 3));
                            newList.Add("2e2105006550105" + "C&G" + cGs1);
                            newList.Add("200000006550090" + cReadable);
                            newList.Add("2X1110000180080" + "L001665");
                            newList.Add("201100006830070" + "PO No");
                            newList.Add("221100006360054" + cPo);
                            newList.Add("201100004750070" + "Mfg Date");
                            newList.Add("221100004200054" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("201100002900070" + "Gross Wt.");
                            newList.Add("221100002300054" + nGross.ToString("0.0 Kgs"));
                            newList.Add("201100001250070" + "Ctn No");
                            newList.Add("291100000800054" + cCtn);
                            newList.Add("200000001250020" + cLot);
                            newList.Add("2X1110000180050" + "L001665");
                            newList.Add("201100006830040" + "Lot No");
                            newList.Add("221100006360024" + cCustOrderLot);
                            newList.Add("201100004750040" + "Exp Date");
                            newList.Add("221100004200024" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100002900040" + "Nett Wt.");
                            newList.Add("221100002300024" + nNett.ToString("0.0 Kgs"));

                            break;
                        #endregion
                        #region Outer Label 276, LAB-OC-MCKU-0002
                        case "LAB-OC-MCKU-0002":
                        case "276":
                            newList.Add("D11");
                            newList.Add("490000302760108" + cCustOrderLot);
                            newList.Add("421100202760116" + cLot);
                            newList.Add("421100202760126" + cCtn);
                            newList.Add("490000302760150" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000302760191" + dExp.ToString(outerLabelSetDateFormat));
                            break;
                        #endregion
                        #region Outer Label 281, LAB-OC-SHWA-0001
                        case "LAB-OC-SHWA-0001":
                        case "281":

                            cCustOrderLot = dMfg.ToString("yyMMdd") + stationNumber;
                            newList.Add("410005000200040" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100000950070" + cCtn);
                            newList.Add("422300001960136" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000200120LOT");
                            newList.Add("4d3103000950150" + cCustOrderLot);
                            newList.Add("410005000950165" + cLot);
                            break;
                        #endregion
                        #region Outer Label LAB-OC-HTLG-0036, Former 55
                        case "LAB-OC-HTLG-0036":
                            newList.Add("411205000200040" + "Lot No.");
                            newList.Add("421105001500040" + cPo);
                            newList.Add("411205000200080" + "Batch No.");
                            newList.Add("421105001500080" + cLot);
                            newList.Add("1Y1100000200100MFG");
                            newList.Add("400000000600105Manufacturing");
                            newList.Add("400000000600113date:");
                            newList.Add("400000000600123Date");
                            newList.Add("400000000600131de fabrication:");
                            newList.Add("421105001500130" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000200150EXP");
                            newList.Add("400000000600157Expiration");
                            newList.Add("400000000600165date:");
                            newList.Add("400000000600175Date");
                            newList.Add("400000000600183d' expiration:");
                            newList.Add("421105001500182" + dExp.ToString("yyyy-MM"));
                            newList.Add("400005002600190" + cCtn);
                            break;
                        #endregion
                        #region Outer label LAB-OC-CLIN-0001, Former 237
                        case "LAB-OC-CLIN-0001":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("410005000200025" + cPo);
                            newList.Add("410005001900025" + "CTN: " + cCtn);
                            newList.Add("400005001900035" + cLot);
                            newList.Add("422300002180100" + PadCenter(cCustSize, 3));
                            newList.Add("1Y1100000150030" + "MFG");
                            newList.Add("421100000700060" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150065" + "EXP");
                            newList.Add("421100000700090" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150100" + "LOT");
                            newList.Add("421105000700120" + cCustOrderLot);
                            newList.Add("4e1106000150185" + "C&G" + cGs1);
                            newList.Add("400000000150195" + cReadable);

                            break;
                        #endregion
                        #region Outer Label LAB-OC-HTLG-0135, Former 232
                        case "LAB-OC-HTLG-0135":

                            cGs1 = "01" + cOuterGtn14_Code + "10" + cCustOrderLot; // Outer Product Code + Customer Lot
                            cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cCustOrderLot; // Outer Product Code + Customer Lot 

                            newList.Add("410005000200040" + cPo); // Customer PO Number
                            newList.Add("411200000200070" + "Ctn. No.");
                            newList.Add("421100001000070" + cCtn); // Carton Number
                            newList.Add("422300001900070" + PadCenter(cCustSize, 5)); // Printing Size
                            newList.Add("1Y1100000150086" + "LOT");
                            newList.Add("421105001000105" + cCustOrderLot);//Customer Lot
                            newList.Add("410005000150130" + "GS1 code:");
                            newList.Add("4e1103000150165" + "C&G" + cGs1); // Outer Product Code + Customer Lot
                            newList.Add("400000000150175" + cReadable); // Outer Product Code + Customer Lot

                            break;
                        #endregion
                        #region Outer Label 280, LAB-OC-MEDL-0021
                        case "LAB-OC-MEDL-0021":
                        case "280":

                            cCustRefNo = "HTL" + dMfg.ToString("yyMM") + cCustOrderLot;
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                            newList.Add("D11");
                            newList.Add("490000202700112" + cCustRefNo);
                            newList.Add("490000202700131" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202700150" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202700166" + cPo);
                            newList.Add("490000202700180" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000202700193" + cCtn);
                            newList.Add("490000102700205" + cLot);
                            newList.Add("490000206700112" + cCustRefNo);
                            newList.Add("490000206700131" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206700150" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206700166" + cPo);
                            newList.Add("490000206700180" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000206700193" + cCtn);
                            newList.Add("490000106700205" + cLot);
                            newList.Add("D22");
                            newList.Add("4e1106000300340" + "C&G" + cGs1);
                            newList.Add("400000000570350" + cReadable);
                            newList.Add("4e1106004300340" + "C&G" + cGs1);
                            newList.Add("400000004570350" + cReadable);

                            break;
                        #endregion
                        #region Outer Label 279, LAB-OC-HLYD-0009
                        case "LAB-OC-HLYD-0009"://Halyard
                        case "279"://Halyard

                            cGs1 = "~1" + "01" + cOuterGtn14_Code + "20" + cDistCountry + "11" + dMfg.ToString("yyMMdd") + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9) + "~1" + "30" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10);

                            newList.Add("D11");
                            newList.Add("290000101420070" + "(01)" + cOuterGtn14_Code + "(20)" + cDistCountry);
                            newList.Add("290000101420056" + "(11)" + dMfg.ToString("yyMMdd") + "(17)" + dExp.ToString("yyMMdd"));
                            newList.Add("290000101420042" + "(10)" + cLot.Substring(0, 9) + "(30)" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10));
                            newList.Add("D22");
                            newList.Add("2W1c44000019700292000000000" + cGs1);
                            newList.Add("211100003470067" + cLot.Substring(0, 9));
                            newList.Add("211100003470045" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("211100003470023" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("211100000680020" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 278,LAB-OC-MEDL-0020
                        case "LAB-OC-MEDL-0020":
                        case "278":

                            newList.Add("1Y1100000200015LOT");
                            newList.Add("421100001100035" + cCustOrderLot);
                            newList.Add("411200000200065Gross Wt.");
                            newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200090Net Wt.");
                            newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200115PO.");
                            newList.Add("421100001100115" + cPo);
                            newList.Add("411200000200140Case No.");
                            newList.Add("421100001100140" + cCtn);
                            newList.Add("1Y1100000200145MFG");
                            newList.Add("421100001100170" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("401105002000190" + cLot);
                            break;
                        #endregion
                        #region Outer Label 272, LAB-OC-HLYD-0008
                        case "LAB-OC-HLYD-0008"://Halyard
                        case "272"://Halyard

                            cGs1 = "~1" + "01" + cOuterGtn14_Code + "20" + cDistCountry + "11" + dMfg.ToString("yyMMdd") + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9) + "~1" + "30" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10);

                            newList.Add("D11");
                            newList.Add("290000101420074" + "(01)" + cOuterGtn14_Code + "(20)" + cDistCountry);
                            newList.Add("290000101420060" + "(11)" + dMfg.ToString("yyMMdd") + "(17)" + dExp.ToString("yyMMdd"));
                            newList.Add("290000101420046" + "(10)" + cLot.Substring(0, 9) + "(30)" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10));
                            newList.Add("D22");
                            newList.Add("2W1c44000018800502000000000" + cGs1);
                            newList.Add("211100003470089" + cLot.Substring(0, 9));
                            newList.Add("211100003470067" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("211100003470045" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("211100000680024" + cCtn);
                            newList.Add("Q0002");

                            break;
                        #endregion
                        #region Outer Label 271, LAB-OC-HTLG-0147
                        case "LAB-OC-HTLG-0147":
                        case "271":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 12);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 12);

                            newList.Add("201100010350185" + "DO NOT COVER THIS LABEL");
                            newList.Add("2e1107010350105C&G" + cGs1);
                            newList.Add("201100010350090" + cReadable);
                            if (cCustSize.Contains("½"))
                                newList.Add("223400007000125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100007000125" + PadCenter(cCustSize, 5));

                            newList.Add("20110000750095" + "LOT NO.");
                            newList.Add("2e1101807100095" + cLot);
                            newList.Add("201100007100085" + cLot);
                            newList.Add("2X1110005350080L001500");
                            newList.Add("201100010350070Gross Wt");
                            newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100009050070Exp Date");
                            newList.Add("221100008350054" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100007200070PO No");
                            newList.Add("291100006700054" + cPo);

                            newList.Add("2X1110005350050L001500");
                            newList.Add("201100010350040Nett Wt");
                            newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100009050040Reorder No");
                            newList.Add("221100008350024" + cProdRefNo);
                            newList.Add("201100007200040Ctn No");
                            newList.Add("221100006700024" + cCtn);

                            newList.Add("2X1110005250010L200001");
                            if (cCustSize.Contains("½"))
                                newList.Add("223400004500125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100004500125" + PadCenter(cCustSize, 5));


                            newList.Add("201100005100095" + "LOT NO.");
                            newList.Add("2e1101804700095" + cLot);
                            newList.Add("201100004700085" + cLot);

                            newList.Add("201100002750185" + "DO NOT COVER THIS LABEL");
                            newList.Add("2e1107002750105C&G" + cGs1);
                            newList.Add("201100002750090" + cReadable);

                            newList.Add("2X1110000100080L001500");
                            newList.Add("201100005100070Gross Wt");
                            newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100003800070Exp Date");
                            newList.Add("221100003100054" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100001950070PO No");
                            newList.Add("291100001450054" + cPo);

                            newList.Add("2X1110000100050L001500");
                            newList.Add("201100005100040Nett Wt");
                            newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100003800040Reorder No");
                            newList.Add("221100003100024" + cProdRefNo);
                            newList.Add("201100001950040Ctn No");
                            newList.Add("221100001450024" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 273, LAB-OC-MEDL-0019
                        case "LAB-OC-MEDL-0019":
                        case "273":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("D11");
                            newList.Add("490000202700112" + cCustOrderLot);
                            newList.Add("490000202700131" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202700150" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202700166" + cPo);
                            newList.Add("490000202700180" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000202700193" + cCtn);
                            newList.Add("490000102700205" + cLot);
                            newList.Add("490000206700112" + cCustOrderLot);
                            newList.Add("490000206700131" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206700150" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206700166" + cPo);
                            newList.Add("490000206700180" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000206700193" + cCtn);
                            newList.Add("490000106700205" + cLot);
                            newList.Add("D22");
                            newList.Add("4e1106000300340" + "C&G" + cGs1);
                            newList.Add("400000000570350" + cReadable);
                            newList.Add("4e1106004300340" + "C&G" + cGs1);
                            newList.Add("400000004570350" + cReadable);

                            break;
                        #endregion
                        #region Outer Label 274, LAB-OC-FAST-0002
                        case "LAB-OC-FAST-0002":
                        case "274":

                            newList.Add("D11");
                            newList.Add("4o0000000150060" + cProdRefNo);
                            newList.Add("490000200150075" + cProdRefNo);
                            newList.Add("490000300150100" + cCustSize + " 4.0mil DispGlv");
                            newList.Add("490000300150120" + "GUANTES DE NITIRLO DESECHABLES");
                            newList.Add("4o0000001600170" + "1000");
                            newList.Add("490000300150150" + "Qty/Cantidad: " + "1000");
                            newList.Add("490000300150165" + "pieces/piezas");
                            newList.Add("4o0000000150225" + cPo);
                            newList.Add("490000200150240" + cPo);
                            newList.Add("490000301050260" + "Made in Malaysia");
                            newList.Add("490000301050280" + "Hecho en Malasia");
                            newList.Add("1Y1100000150310" + "LOT");
                            newList.Add("1Y1100000150333" + "MFG");
                            newList.Add("1Y1100000150360" + "EXP");
                            newList.Add("490000300500322" + cLot);
                            newList.Add("490000300500348" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000300500375" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000302000375" + "Ctn.: " + cCtn);

                            break;
                        #endregion
                        #region Outer Label 269, LAB-OC-KCGS-0003
                        case "LAB-OC-KCGS-0003":
                        case "269":

                            cGs1 = "~1" + "01" + cOuterGtn14_Code + "17" + cCustOrderLot.Substring(2, 6) + "~1" + "10" + cCustOrderLot.Substring(8, 9);

                            newList.Add("211100003900137" + cCustOrderLot.Substring(8, 9));
                            newList.Add("211100002550137" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("211100001330137" + cCustOrderLot.Substring(0, 4) + "-" + cCustOrderLot.Substring(4, 2) + "-" + cCustOrderLot.Substring(6, 2));
                            newList.Add("211100003900123" + cCtn);
                            newList.Add("201100003900103" + "(01)" + cOuterGtn14_Code);
                            newList.Add("201100003900093" + "(17)" + cCustOrderLot.Substring(2, 6));
                            newList.Add("201100003900083" + "(10)" + cCustOrderLot.Substring(8, 9));
                            newList.Add("2W1c44000039000212000000000" + cGs1);

                            break;
                        #endregion
                        #region Outer Label 270, LAB-OC-MEDL-0018
                        case "LAB-OC-MEDL-0018":
                        case "270":

                            newList.Add("D11");
                            newList.Add("490000202200208" + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MM") + cCustOrderLot);
                            newList.Add("490000202200228" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202200250" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202200270" + cPo);
                            newList.Add("490000202200282" + nNett.ToString("0.00 Kgs"));
                            newList.Add("490000202200294" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000202200306" + cCtn);
                            newList.Add("490000202800366" + cLot);
                            newList.Add("490000206200208" + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MM") + cCustOrderLot);
                            newList.Add("490000206200228" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206200250" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206200270" + cPo);
                            newList.Add("490000206200282" + nNett.ToString("0.00 Kgs"));
                            newList.Add("490000206200294" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000206200306" + cCtn);
                            newList.Add("490000206800366" + cLot);

                            break;
                        #endregion
                        #region Outer Label 267, LAB-OC-MEDL-0017
                        case "LAB-OC-MEDL-0017":
                        case "267":

                            newList.Add("1Y1100000200015LOT");
                            newList.Add("421100001100035" + cCustOrderLot);
                            newList.Add("411200000200065Gross Wt.");
                            newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200090Net Wt.");
                            newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200115PO.");
                            newList.Add("421100001100115" + cPo);
                            newList.Add("411200000200140Case No.");
                            newList.Add("421100001100140" + cCtn);
                            newList.Add("1Y1100000200145MFG");
                            newList.Add("421100001100170" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("401105002000190" + cLot);
                            break;
                        #endregion
                        #region Outer Label 266, LAB-OC-MEDL-0016
                        case "LAB-OC-MEDL-0016":
                        case "266":

                            newList.Add("1Y1100000200025LOT");
                            newList.Add("421100001100045" + cCustOrderLot);
                            newList.Add("411200000200080Gross Wt.");
                            newList.Add("421100001100080" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200110Net Wt.");
                            newList.Add("421100001100110" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200140PO");
                            newList.Add("421100001100140" + cPo);
                            newList.Add("411200000200170Case No.");
                            newList.Add("421100001100170" + cCtn);
                            newList.Add("401105002000190" + cLot);
                            break;
                        #endregion
                        #region Outer Label 265, LAB-OC-MEDL-0015
                        case "LAB-OC-MEDL-0015":
                        case "265":

                            newList.Add("D11");
                            newList.Add("421100000150020" + "Date of Manufacture/");
                            newList.Add("421100000150030" + "Date de Fabrication:");
                            newList.Add("421100000150053" + "Exp. Date:");
                            newList.Add("421100000150075" + "Gross Weight/");
                            newList.Add("421100000150085" + "Poids brut:");
                            newList.Add("421100000150125" + "Net Weight/");
                            newList.Add("421100000150135" + "Poids net:");
                            newList.Add("421100000150185" + "Case #/Caisse #:"); // change from 'Caisse no.' into 'Caisse #'
                            newList.Add("D22");
                            newList.Add("421100001350030" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("421100001350057" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("421100001350085" + nGross.ToString("0.0 Kg"));
                            newList.Add("1Y1100000150090" + "LOT");
                            newList.Add("421100001350110" + cCustOrderLot);
                            newList.Add("421100001350135" + nNett.ToString("0.0 Kg"));
                            newList.Add("411100000150158" + "P.O.:");
                            newList.Add("421100001350160" + cPo);
                            newList.Add("421100001350190" + cCtn);
                            newList.Add("401105002100190" + cLot);

                            break;
                        #endregion
                        #region Outer Label 264, LAB-OC-MEDL-0014
                        case "LAB-OC-MEDL-0014":
                        case "264":

                            newList.Add("D11");
                            newList.Add("421100000150050" + "Gross Weight/Poids");
                            newList.Add("421100000150060" + "brut/Peso bruto:");
                            newList.Add("421100000150078" + "Net Weight/Poids");
                            newList.Add("421100000150088" + "net/Peso neto:");
                            newList.Add("421100000150187" + "Case #/N de caisse:");
                            newList.Add("491100100150155" + "Date of Manufacture");
                            newList.Add("491100100150163" + "Date de Fabrication");
                            newList.Add("491100100150171" + "Fecha de Fabricaci" + Chr(162) + "n");
                            newList.Add("491100100620187" + Chr(167));
                            newList.Add("D22");
                            newList.Add("1Y1100000150015" + "LOT");
                            newList.Add("421100001350035" + cCustOrderLot);
                            newList.Add("421100001350060" + nGross.ToString("0.0 Kgs"));
                            newList.Add("421100001350085" + nNett.ToString("0.0 Kgs"));
                            newList.Add("411100000150108" + "P.O.:" + Chr(224));
                            newList.Add("421100001350110" + cPo);
                            newList.Add("1Y1100000150113" + "MFG");
                            newList.Add("421100001350150" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("421100001350190" + cCtn);
                            newList.Add("401105002200190" + cLot);

                            break;
                        #endregion
                        #region Outer Label 263, LAB-OC-MEDL-0013
                        case "LAB-OC-MEDL-0013":
                        case "263":

                            newList.Add("D11");
                            newList.Add("421100000150030" + "Date of Manufacture/");
                            newList.Add("421100000150040" + "Date de Fabrication:");
                            newList.Add("421100000150055" + "Gross Weight/");
                            newList.Add("421100000150065" + "Poids brut:");
                            newList.Add("421100000150105" + "Net Weight/");
                            newList.Add("421100000150115" + "Poids net:");
                            newList.Add("421100000150165" + "Case #/Caisse no.:");
                            newList.Add("D22");
                            newList.Add("421100001350040" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("421100001350065" + nGross.ToString("0.0 Kg"));
                            newList.Add("1Y1100000150070LOT");
                            newList.Add("421100001350090" + cCustOrderLot);
                            newList.Add("421100001350115" + nNett.ToString("0.0 Kg"));
                            newList.Add("411100000150138" + "P.O.:");
                            newList.Add("421100001350140" + cPo);
                            newList.Add("421100001350170" + cCtn);
                            newList.Add("401105002000190" + cLot);

                            break;
                        #endregion
                        #region Outer Label 268, LAB-OC-DASH-0002
                        case "268":
                        case "LAB-OC-DASH-0002":

                            cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "10" + cPo;
                            cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(10)" + cPo;

                            newList.Add("410005000150030" + cPo);
                            newList.Add("411200000150055" + "Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422200002250060" + PadCenter(cCustSize, 3));
                            newList.Add("1Y1100000100060" + "MFG");
                            newList.Add("421100001000085" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000100100" + "LOT");
                            newList.Add("421105001000120" + cPo);
                            newList.Add("4e1105000100180" + "C&G" + cGs1);
                            newList.Add("400000000100190" + cReadable);

                            break;
                        #endregion
                        #region Outer Label 261, LAB-OC-MEDL-0012
                        case "LAB-OC-MEDL-0012":
                        case "261":

                            cCustRefNo = "HTL" + dMfg.ToString("yyMM") + cCustOrderLot + "J";

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                            newList.Add("D11");
                            newList.Add("490000202700112" + cCustRefNo);
                            newList.Add("490000202700131" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202700150" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202700166" + cPo);
                            newList.Add("490000202700180" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000202700193" + cCtn);
                            newList.Add("490000102700205" + cLot);
                            newList.Add("490000206700112" + cCustRefNo);
                            newList.Add("490000206700131" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206700150" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206700166" + cPo);
                            newList.Add("490000206700180" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000206700193" + cCtn);
                            newList.Add("490000106700205" + cLot);
                            newList.Add("D22");
                            newList.Add("4e1106000300340" + "C&G" + cGs1);
                            newList.Add("400000000570350" + cReadable);
                            newList.Add("4e1106004300340" + "C&G" + cGs1);
                            newList.Add("400000004570350" + cReadable);

                            break;
                        #endregion
                        #region Outer Label 262, LAB-OC-FAST-0001
                        case "LAB-OC-FAST-0001":
                        case "262":

                            newList.Add("D11");
                            newList.Add("4o0000000150060" + cProdRefNo);
                            newList.Add("490000200150075" + cProdRefNo);
                            newList.Add("490000300150100" + cCustSize + " 3.5mil DispGlv");
                            newList.Add("490000300150120" + "GUANTES DE NITIRLO DESECHABLES");
                            newList.Add("4o0000001600170" + "1000");
                            newList.Add("490000300150150" + "Qty/Cantidad: " + "1000");
                            newList.Add("490000300150165" + "pieces/piezas");
                            newList.Add("4o0000000150225" + cPo);
                            newList.Add("490000200150240" + cPo);
                            newList.Add("490000301050260" + "Made in Malaysia");
                            newList.Add("490000301050280" + "Hecho en Malasia");
                            newList.Add("1Y1100000150310" + "LOT");
                            newList.Add("1Y1100000150333" + "MFG");
                            newList.Add("1Y1100000150360" + "EXP");
                            newList.Add("490000300500322" + cLot);
                            newList.Add("490000300500348" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000300500375" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000302000375" + "Ctn.: " + cCtn);

                            break;
                        #endregion
                        #region Outer Label 260, LAB-OC-S2SG-0001
                        case "LAB-OC-S2SG-0001":
                        case "260":

                            newList.Add("1Y1100000650020LOT_H");
                            newList.Add("191000000650100" + cCustOrderLot);
                            newList.Add("1Y1100000250020MFG_H");
                            newList.Add("191000000350100" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("101100000150100" + cCtn + "   " + cLot);

                            break;
                        #endregion
                        #region Outer Label 259, LAB-OC-MEDL-0011
                        case "LAB-OC-MEDL-0011":
                        case "259":

                            newList.Add("411100100150025Lot No.");
                            newList.Add("411100001400025" + cCustOrderLot);
                            newList.Add("411100000150045Gross Weight");
                            newList.Add("411100001400045" + nGross.ToString("0.0 Kgs"));
                            newList.Add("411100000150070Nett Weight");
                            newList.Add("411100001400070" + nNett.ToString("0.0 Kgs"));
                            newList.Add("411100000150095PO. No.");
                            newList.Add("411100001400095" + cPo);
                            newList.Add("411100000150120Ctn. No.");
                            newList.Add("411100001400120" + cCtn);
                            newList.Add("411100000150145Mfg. Date");
                            newList.Add("411100001400145" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("411100000150170Exp. Date");
                            newList.Add("411100001400170" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("410000001800187" + cLot);

                            break;
                        #endregion
                        #region Outer Label 257, LAB-OC-ANSL-0016
                        case "LAB-OC-ANSL-0016":
                        case "257":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot.Substring(0, 4) + Right(cCustOrderLot, 2) + "&G" + "92" + cDistCountry;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot.Substring(0, 4) + Right(cCustOrderLot, 2) + "(92)" + cDistCountry;

                            newList.Add("491100100150045" + "MICRO-TOUCH" + Chr(169) + " BLUE NITRILE (EMEA/APAC)");
                            newList.Add("491100000150095" + "SHIPPER BOX OF 2000");
                            newList.Add("491100000150120" + "SIZE:");
                            newList.Add("491100000700120" + cCustSize);
                            newList.Add("491100000150145" + "REF:");
                            newList.Add("491100000700145" + cCustRefNo);
                            newList.Add("491100000150170" + "INT:");
                            newList.Add("491100000700170" + cDistCountry);
                            newList.Add("490000102380095" + "LOT");
                            newList.Add("1X1100002330075" + "B020040002002");
                            newList.Add("1X1100002270100" + "B020048002002");
                            newList.Add("490000102880095" + cCustOrderLot.Substring(0, 4) + Right(cCustOrderLot, 2));
                            newList.Add("490000102880120" + cCustOrderLot);
                            newList.Add("491100002880145" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491100002880170" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250" + "C&G" + cGs1);
                            newList.Add("401100000150290" + "CTN#: " + cCtn + "                    MFG REF: " + cLot);
                            newList.Add("D11");
                            newList.Add("1Y1200002370128" + "MFG");
                            newList.Add("1Y1200002450153" + "EXP");
                            newList.Add("490000202330116" + "BATCH");
                            break;
                        #endregion
                        #region Outer Label 258, LAB-OC-MEDL-0010
                        case "LAB-OC-MEDL-0010":
                        case "258":

                            newList.Add("D11");
                            newList.Add("490000202200208" + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MM") + cCustOrderLot);
                            newList.Add("490000202200228" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202200250" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202200270" + cPo);
                            newList.Add("490000202200282" + nNett.ToString("0.00 Kgs"));
                            newList.Add("490000202200294" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000202200306" + cCtn);
                            newList.Add("490000202800366" + cLot);
                            newList.Add("490000206200208" + dMfg.ToString("yy").Substring(1, 1) + dMfg.ToString("MM") + cCustOrderLot);
                            newList.Add("490000206200228" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206200250" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206200270" + cPo);
                            newList.Add("490000206200282" + nNett.ToString("0.00 Kgs"));
                            newList.Add("490000206200294" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000206200306" + cCtn);
                            newList.Add("490000206800366" + cLot);

                            break;
                        #endregion
                        #region Outer Label 254, LAB-OC-HTLG-0146
                        case "LAB-OC-HTLG-0146":
                        case "254":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4);


                            newList.Add("2e1109009140105" + "C&G" + cGs1);
                            newList.Add("201100009140090" + cReadable);

                            newList.Add("261100006650125" + PadCenter(cCustSize, 3));   // Change Pad from 5 to 3
                            newList.Add("D11");
                            newList.Add("2e4102006500095" + "C&G" + cLot + cCtn);
                            newList.Add("210005006500085" + cLot + cCtn);
                            newList.Add("D22");
                            newList.Add("2X1110005350080" + "L001250");
                            newList.Add("201100007750070" + "Exp Date");
                            newList.Add("221100007750049" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100006200070" + "Gross Wt");
                            newList.Add("221100006200049" + nGross.ToString("0.0 Kg"));

                            newList.Add("2X1110005350045" + "L001250");
                            newList.Add("D11");
                            newList.Add("231100010350070" + "PO NO.:");
                            newList.Add("261100010350030" + PadCenter(cPo, 13));
                            newList.Add("231100010350150" + "CTN. NO.:");
                            newList.Add("260000010350110" + cCtn);
                            newList.Add("D22");
                            newList.Add("201100007750035" + "Reorder No");
                            newList.Add("221100007750014" + cProdRefNo);
                            newList.Add("201100006200035" + "Nett Wt");
                            newList.Add("221100006200014" + nNett.ToString("0.0 Kg"));

                            newList.Add("2X1110005220010" + "L200001");

                            newList.Add("261100004900125" + PadCenter(cCustSize, 3)); // Change Pad from 5 to 3, previously got space in code newList.Add("26110000 4900125"

                            newList.Add("2e1109003450105" + "C&G" + cGs1);
                            newList.Add("201100003450090" + cReadable);

                            newList.Add("D11");
                            newList.Add("2e4102004750095" + "C&G" + cLot + cCtn);
                            newList.Add("210005004750085" + cLot + cCtn);
                            newList.Add("D22");
                            newList.Add("2X1110002800080" + "L001230");
                            newList.Add("201100005100070" + "Gross Wt");
                            newList.Add("221100005100049" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100003800070" + "Exp Date");
                            newList.Add("221100003800049" + dExp.ToString("MMM-yyyy"));

                            newList.Add("D11");
                            newList.Add("231100000900070" + "PO NO.:");
                            newList.Add("261100002450030" + PadCenter(cPo, 13));//Add PadRight
                            newList.Add("231100000900150" + "CTN. NO.:");
                            newList.Add("261100001050110" + cCtn);
                            newList.Add("D22");

                            newList.Add("2X1110002800045" + "L001230");
                            newList.Add("201100005100035" + "Nett Wt");
                            newList.Add("221100005100014" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100003800035" + "Reorder No");
                            newList.Add("221100003800014" + cProdRefNo);

                            break;
                        #endregion
                        #region Outer Label 255, LAB-OC-HLYD-0007
                        case "LAB-OC-HLYD-0007":
                        case "255":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "&G" + "30" + cProdRefNo; // Included &G code
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                            newList.Add("211100003790076" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100002290076" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("211100001120076" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100003790063" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1105003790011" + "C&G" + cGs1);     //GS1 barcode - check paramater
                            newList.Add("201100000400010" + cCtn);     //GS1 barcode - check paramater
                            break;
                        #endregion
                        #region Outer Label 251, LAB-OC-MEDL-0008
                        case "LAB-OC-MEDL-0008":
                        case "251":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("2e2105013550105" + "C&G" + cGs1);
                            newList.Add("200000013550090" + cReadable);
                            newList.Add("242200009900100" + PadCenter(cCustSize, 3));
                            newList.Add("2X1110007100080" + "L001665");
                            newList.Add("201100013750070" + "PO No");
                            newList.Add("221100013250054" + cPo);
                            newList.Add("201100011550070" + "Mfg Date");
                            newList.Add("221100010950054" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("201100009900070" + "Gross Wt.");
                            newList.Add("221100009300054" + nGross.ToString("0.0 Kgs"));
                            newList.Add("201100008250070" + "Ctn No");
                            newList.Add("291100007800054" + cCtn);
                            newList.Add("200000008250020" + cLot);
                            newList.Add("2X1110007100050" + "L001665");
                            newList.Add("201100013750040" + "Lot No");
                            newList.Add("221100013250024" + cCustOrderLot);
                            newList.Add("201100011550040" + "Exp Date");
                            newList.Add("221100010950024" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100009900040" + "Nett Wt.");
                            newList.Add("221100009300024" + nNett.ToString("0.0 Kgs"));
                            newList.Add("2X1110006950010" + "L200001");
                            newList.Add("242200002700100" + PadCenter(cCustSize, 3));
                            newList.Add("2e2105006550105" + "C&G" + cGs1);
                            newList.Add("200000006550090" + cReadable);
                            newList.Add("2X1110000100080" + "L001665");
                            newList.Add("201100006750070" + "PO No");
                            newList.Add("221100006250054" + cPo);
                            newList.Add("201100004550070" + "Mfg Date");
                            newList.Add("221100003950054" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("201100002900070" + "Gross Wt.");
                            newList.Add("221100002300054" + nGross.ToString("0.0 Kgs"));
                            newList.Add("201100001250070" + "Ctn No");
                            newList.Add("291100000800054" + cCtn);
                            newList.Add("200000001250020" + cLot);
                            newList.Add("2X1110000100050" + "L001665");
                            newList.Add("201100006750040" + "Lot No");
                            newList.Add("221100006250024" + cCustOrderLot);
                            newList.Add("201100004550040" + "Exp Date");
                            newList.Add("221100003950024" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100002900040" + "Nett Wt.");
                            newList.Add("221100002300024" + nNett.ToString("0.0 Kgs"));

                            break;
                        #endregion
                        #region Outer Label 252, LAB-OC-MEDL-0009
                        case "LAB-OC-MEDL-0009":
                        case "252":

                            newList.Add("D11");
                            newList.Add("490000202200208" + cCustOrderLot);
                            newList.Add("490000202200228" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202200250" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000202200270" + cPo);
                            newList.Add("490000202200282" + nNett.ToString("0.00 Kgs"));
                            newList.Add("490000202200294" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000202200306" + cCtn);
                            newList.Add("490000202800366" + cLot);
                            newList.Add("490000206200208" + cCustOrderLot);
                            newList.Add("490000206200228" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206200250" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000206200270" + cPo);
                            newList.Add("490000206200282" + nNett.ToString("0.00 Kgs"));
                            newList.Add("490000206200294" + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000206200306" + cCtn);
                            newList.Add("490000206800366" + cLot);

                            break;
                        #endregion
                        #region Outer Label 253, LAB-OC-MCKU-0001
                        case "LAB-OC-MCKU-0001":
                        case "253":

                            newList.Add("191000000650020" + "Lot No.");
                            newList.Add("191000000650100" + cCustOrderLot);
                            newList.Add("1Y1100000250020" + "MFG_H");
                            newList.Add("191000000350100" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("101100000150100" + cCtn + "   " + cLot);

                            break;
                        #endregion
                        #region Outer Label 250, LAB-OC-IHCP-0003
                        case "LAB-OC-IHCP-0003":
                        case "250":

                            newList.Add("491100000700038" + "SIZE:");
                            newList.Add("1X1100001200020" + "L100150");
                            newList.Add("491100001660085" + "Reorder");
                            newList.Add("491100401400120" + cCustRefNo);
                            newList.Add("491100000800155" + cCustOrderLot);
                            newList.Add("491100000800192" + cLot);
                            newList.Add("491100002780155" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491100002780192" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1X1100000350172" + "B020032002002");
                            newList.Add("490000100410192" + "BN");
                            newList.Add("1Y1100000350135" + "LOT");
                            newList.Add("1Y1100002270128" + "MFG");
                            newList.Add("1Y1100002350165" + "EXP");
                            newList.Add("4e1107001250275" + "C&G" + "01" + cOuterGtn14_Code);
                            newList.Add("401100001350285" + "(01)" + cOuterGtn14_Code);
                            newList.Add("401100000200285" + "CTN#: " + cCtn);
                            newList.Add("D11");
                            newList.Add("460000001330060" + cCustSize);

                            break;
                        #endregion
                        #region Outer Label 249, LAB-OC-ANSL-0015
                        case "LAB-OC-ANSL-0015":
                        case "249":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "&G" + "92" + cDistCountry;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cDistCountry;

                            newList.Add("491100100150035" + "MICRO-TOUCH" + Chr(169) + " MICRO-THIN WHITE NITRILE");
                            newList.Add("491100100150055" + "GLOVES - INDIA");
                            newList.Add("491100000150095" + "OUTER CARTON OF 2000");  //Fixed qty
                            newList.Add("491100000150120" + "SIZE:");
                            newList.Add("491100000700120" + cCustSize);
                            newList.Add("491100000150145" + "REF:");
                            newList.Add("491100000700145" + cCustRefNo);
                            newList.Add("491100000150170" + "INT:");
                            newList.Add("491100000700170" + cDistCountry);
                            newList.Add("490000102380095" + "LOT");
                            newList.Add("1X1100002330075" + "B020040002002");
                            newList.Add("490000102880095" + cCustOrderLot);
                            newList.Add("491100002880120" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491100002880145" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250" + "C&G" + cGs1);
                            newList.Add("401100000150290" + "PO: " + cOrderNum + "    CTN#: " + cCtn + "    MFG REF: " + cLot);
                            newList.Add("D11");
                            newList.Add("1Y1200002370103" + "MFG");
                            newList.Add("1Y1200002450129" + "EXP");
                            break;
                        #endregion                        
                        #region Outer Label 247, LAB-OC-HTLG-0144
                        case "247":
                        case "LAB-OC-HTLG-0144":

                            newList.Add("442200000500095" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200130" + "Batch No.");
                            newList.Add("421100001100125" + cLot);
                            newList.Add("411200000200160" + "Lot No.");
                            newList.Add("421100001100155" + cCustOrderLot);
                            newList.Add("411100002200180" + cCtn);

                            break;
                        #endregion
                        #region Outer Label 248, LAB-OC-HTLG-0145
                        case "248":
                        case "LAB-OC-HTLG-0145":

                            newList.Add("421100000200045" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("421100000200085" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("421100000200125" + cCustOrderLot);
                            newList.Add("421100000200165" + cLot);
                            newList.Add("411100001900185" + "CTN: " + cCtn);

                            break;
                        #endregion
                        #region Outer Label 245, LAB-OC-HTLG-0142
                        case "LAB-OC-HTLG-0142":
                        case "245":

                            cGs1 = cOuterGtn14_Code + "$" + cCustOrderLot + "$" + dMfg.ToString("yyyyMMdd") + "$" + cProdRefNo + "$" + dExp.ToString("yyyyMMdd") + "$" + cDistCountry;

                            newList.Add("4W1DHH000003502912,L3M,A" + cGs1);
                            newList.Add("490000103050130" + cOrderNum);
                            newList.Add("492200503850110" + cCustSize);
                            newList.Add("FA+");
                            newList.Add("FB+");
                            newList.Add("490000203050180" + "Ctn. No.");
                            newList.Add("FB-U-I-");
                            newList.Add("490000204100180" + cCtn);
                            newList.Add("490000204100220" + dMfg.ToString("yyyyMMdd"));
                            newList.Add("490000204100255" + dExp.ToString("yyyyMMdd"));
                            newList.Add("490000204100295" + cCustOrderLot);
                            newList.Add("1Y1100003050190" + "MFG");
                            newList.Add("1Y1100003050230" + "EXP");
                            newList.Add("1Y1100003050270" + "LOT");
                            newList.Add("D11");
                            newList.Add("490000204600335" + cLot);
                            newList.Add("FA+");
                            newList.Add("FB+");
                            newList.Add("490000100200320" + cGs1);
                            newList.Add("FB-U-I-");

                            break;
                        #endregion
                        #region Outer Label 246, LAB-OC-HTLG-0143
                        case "LAB-OC-HTLG-0143":
                        case "246":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("421100000300030" + "Lot No.  :");
                            newList.Add("421100001700030" + cCustOrderLot);
                            newList.Add("421100000300060" + "Mfg. Date:");
                            newList.Add("421100001700060" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("421100000300090" + "Use By   :");
                            newList.Add("421100001700090" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("421100000300120" + "Case No. :");
                            newList.Add("421100001700120" + Right(cCtn, 4));
                            newList.Add("421100000300150" + cCustSize);
                            newList.Add("1Y1100001700130" + "REF");
                            newList.Add("421100002200150" + cProdRefNo);
                            newList.Add("110000003700020" + cLot);
                            newList.Add("4e1106000350220" + "C&G" + cGs1);
                            newList.Add("400000000500230" + cReadable);
                            break;
                        #endregion
                        #region Outer Label 242, LAB-OC-ANSL-0013
                        case "LAB-OC-ANSL-0013":
                        case "242":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "&G" + "92" + cDistCountry;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cDistCountry;

                            newList.Add("D11");
                            newList.Add("490000300550068" + cCustSize);
                            newList.Add("490000300550085" + cCustRefNo);
                            newList.Add("490000300550103" + cDistCountry);
                            newList.Add("490000302900049" + cCustOrderLot);
                            newList.Add("490000302900071" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("490000302900094" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("490000000900158" + "CTN#: " + cCtn + "                                                       " + "MFG REF: " + cLot);
                            newList.Add("D22");
                            newList.Add("4e1103000400134" + "C&G" + cGs1);
                            newList.Add("400000000600144" + cReadable);

                            break;
                        #endregion
                        #region Outer Label 243, LAB-OC-HLYD-0006
                        case "LAB-OC-HLYD-0006"://Halyard
                        case "243"://Halyard

                            cGs1 = "~1" + "01" + cOuterGtn14_Code + "20" + cDistCountry + "17" + dExp.ToString("yyMMdd") + "10" + cLot.Substring(0, 9) + "~1" + "30" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10);

                            newList.Add("D11");
                            newList.Add("290000102940063" + "(01)" + cOuterGtn14_Code + "(20)" + cDistCountry);
                            newList.Add("290000102940049" + "(17)" + dExp.ToString("yyMMdd"));
                            newList.Add("290000102940035" + "(10)" + cLot.Substring(0, 9) + "(30)" + Convert.ToInt16(Convert.ToInt16(cCustRefNo) * 10));
                            newList.Add("D22");
                            newList.Add("2W1c44000034700312000000000" + cGs1);
                            newList.Add("211100003470084" + cLot.Substring(0, 9));
                            newList.Add("211100001750084" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("211100000650020" + cCtn);
                            //newList.Add("Q0002"); // This code only apply at NGC

                            break;
                        #endregion
                        #region Outer Label 244, LAB-OC-JUBA-0001
                        case "LAB-OC-JUBA-0001":
                        case "244":
                            newList.Add("490000200200040" + "Ref. : " + cBrand);
                            newList.Add("490000100200055" + "Description:");
                            newList.Add("490000200200115" + "Size : " + cCustSize);
                            newList.Add("490000100200135" + "QUANTITY : " + cProdRefNo + " pcs");
                            newList.Add("490000100200155" + "CARTON N" + Chr(167) + ": " + cCtn);
                            newList.Add("490000100200175" + "P.O. NUMBER: " + cPo);
                            newList.Add("490000100200195" + "Measures: " + cInnerGtn14_Code);
                            newList.Add("490000100200215" + "Gross weight: " + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000100200235" + "Net weight: " + nNett.ToString("0.00 Kgs"));
                            newList.Add("4e1105000400295" + cOuterGtn14_Code);
                            newList.Add("401100000950305" + cOuterGtn14_Code);
                            newList.Add("4e1105000800365" + cPo.Substring(8) + dMfg.ToString("yy").Substring(1, 1) + "/" + cCustOrderLot);
                            newList.Add("401100001200375" + cPo.Substring(8) + dMfg.ToString("yy").Substring(1, 1) + "/" + cCustOrderLot);
                            newList.Add("111100002700280" + cLot);
                            newList.Add("D11");
                            newList.Add("490000200200070" + "GUANTES DESECHABLES DE NITRILO");
                            newList.Add("490000200200083" + "SIN POLVO, " + cDistCountry);
                            //newList.Add("Q0002"); // This code only apply at NGC

                            break;
                        #endregion
                        #region Outer Label 241, LAB-OC-HTLG-0136
                        case "LAB-OC-HTLG-0136":
                        case "241":

                            cCustOrderLot = dMfg.ToString("yyyyMM") + Right(cPline, 2) + cDistCountry;

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("2e1109009850105C&G" + cGs1);
                            newList.Add("201100009850090" + cReadable);
                            if (cCustSize.Contains("½"))
                                newList.Add("223400007000125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100007000125" + PadCenter(cCustSize, 5));

                            newList.Add("D11");
                            newList.Add("2e4102007050095" + cLot + cCtn);
                            newList.Add("210005006900085" + cLot + cCtn);
                            newList.Add("D22");

                            newList.Add("2X1110005350080L001500");
                            newList.Add("201100010350070Gross Wt");
                            newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100009050070Exp Date");
                            newList.Add("221100008350054" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100007200070PO No");
                            newList.Add("291100006700054" + cPo);

                            newList.Add("2X1110005350050L001500");
                            newList.Add("201100010350040Nett Wt");
                            newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100009050040Reorder No");
                            newList.Add("221100008350024" + cProdRefNo);
                            newList.Add("201100007200040Ctn No");
                            newList.Add("221100006700024" + cCtn);

                            newList.Add("2X1110005250010L200001");
                            if (cCustSize.Contains("½"))
                                newList.Add("223400004500125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100004500125" + PadCenter(cCustSize, 5));

                            newList.Add("2e1109002750105C&G" + cGs1);
                            newList.Add("201100002750090" + cReadable);

                            newList.Add("D11");
                            newList.Add("2e4102004550095" + cLot + cCtn);
                            newList.Add("210005004400085" + cLot + cCtn);
                            newList.Add("D22");

                            newList.Add("2X1110000100080L001500");
                            newList.Add("201100005100070Gross Wt");
                            newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100003800070Exp Date");
                            newList.Add("221100003100054" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100001950070PO No");
                            newList.Add("291100001450054" + cPo);

                            newList.Add("2X1110000100050L001500");
                            newList.Add("201100005100040Nett Wt");
                            newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100003800040Reorder No");
                            newList.Add("221100003100024" + cProdRefNo);
                            newList.Add("201100001950040Ctn No");
                            newList.Add("221100001450024" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 239, LAB-OC-IHCP-0002
                        case "LAB-OC-IHCP-0002":
                        case "239":

                            newList.Add("491100000700038" + "SIZE:");
                            newList.Add("1X1100001200020" + "L100150");
                            newList.Add("491100001660085" + "Reorder");
                            newList.Add("491100401400120" + cCustRefNo);
                            newList.Add("491100000800155" + cLot);
                            newList.Add("491100002780155" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491100002780192" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000350135" + "LOT");
                            newList.Add("1Y1100002270128" + "MFG");
                            newList.Add("1Y1100002350165" + "EXP");
                            newList.Add("4e1107001250275" + "C&G" + "01" + cOuterGtn14_Code);
                            newList.Add("401100001350285" + "(10)" + cOuterGtn14_Code);
                            newList.Add("401100000200285" + "CTN#: " + cCtn);
                            newList.Add("D11");
                            newList.Add("460000001330060" + cCustSize);

                            break;
                        #endregion
                        #region Outer Label 240, LAB-OC-ANSL-0012
                        case "LAB-OC-ANSL-0012":
                        case "240":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "&G" + "92" + cDistCountry;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cDistCountry;

                            newList.Add("421100100150035" + "PRODUCT:MICRO-TOUCH BLUE NITRILE");
                            newList.Add("421100000150075" + "SIZE:");
                            newList.Add("421100000800075" + cCustSize);
                            newList.Add("421100001850075" + "SHIPPER");
                            newList.Add("421100002720075" + "BOX");
                            newList.Add("421100003120075" + "OF");
                            newList.Add("421100003400075" + "2000");
                            newList.Add("421100000150115" + "REF");
                            newList.Add("421100000800115" + cCustRefNo);
                            newList.Add("1Y1100002200090" + "MFG");
                            newList.Add("421100002700115" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150135" + "LOT");
                            newList.Add("421100000800155" + cCustOrderLot);
                            newList.Add("1Y1100002200130" + "EXP");
                            newList.Add("421100002700155" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("411100000150178" + "INTERNAL PRODUCT ID:" + cDistCountry);
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250" + "C&G" + cGs1);
                            newList.Add("411100000150290" + "CTN#: " + cCtn);
                            newList.Add("411100001800290" + "MFG REF: " + cLot);

                            break;
                        #endregion
                        #region Outer label 238, LAB-OC-ANSL-0011
                        case "LAB-OC-ANSL-0011":
                        case "238":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + dMfg.ToString("yyMM") + "LJ" + "&G" + "92" + cDistCountry;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + dMfg.ToString("yyMM") + "LJ" + "(92)" + cDistCountry;

                            newList.Add("4e1107001200360" + "C&G" + cGs1);
                            newList.Add("401100001400370" + cReadable);
                            newList.Add("401100000400390" + "CTN#: " + cCtn);
                            newList.Add("401100004700390" + "REF: " + cLot);
                            newList.Add("D11");
                            newList.Add("440000004000075" + dMfg.ToString("yyMM") + "LJ");
                            newList.Add("440000004000105" + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                            newList.Add("440000004400148" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("440000004400180" + dMfg.ToString(outerLabelSetDateFormat));

                            break;
                        #endregion
                        #region Outer label 237
                        case "237":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("410005000200025" + cPo);
                            newList.Add("410005001900025" + "CTN: " + cCtn);
                            newList.Add("400005001900035" + cLot);
                            newList.Add("422300002180100" + PadCenter(cCustSize, 3));
                            newList.Add("1Y1100000150030" + "MFG");
                            newList.Add("421100000700060" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150065" + "EXP");
                            newList.Add("421100000700090" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150100" + "LOT");
                            newList.Add("421105000700120" + cCustOrderLot);
                            newList.Add("4e1106000150185" + "C&G" + cGs1);
                            newList.Add("400000000150195" + cReadable);

                            break;
                        #endregion
                        #region Outer label 233, LAB-OC-CMTS-0003
                        case "LAB-OC-CMTS-0003":
                        case "233":

                            newList.Add("191100000800015" + cPo);
                            newList.Add("191000000600015" + "Ctn.: " + cCtn);
                            newList.Add("191000000400015" + "Mfg.: " + dMfg.ToString("MMM-yyyy"));
                            newList.Add("191000000200015" + "Exp.: " + dExp.ToString("MMM-yyyy"));
                            newList.Add("191000000600140" + "Lot No.");
                            newList.Add("1E3102500200140" + "C&G" + cCustOrderLot);
                            newList.Add("101100000080015" + "Size: " + cCustSize + "   " + cLot);

                            break;
                        #endregion
                        #region Outer label 235, LAB-OC-HNCE-0001
                        case "LAB-OC-HNCE-0001":
                        case "235":

                            newList.Add("191000000700040" + "Lot: " + cCustOrderLot);
                            newList.Add("191000000500040" + "Mfg Date: " + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("191000000300040" + "PO NO.: " + cPo);
                            newList.Add("101100000200040" + "CTN. NO.: " + cCtn + "   " + cLot);

                            break;
                        #endregion
                        #region Outer label 236, LAB-OC-SFMH-0002
                        case "LAB-OC-SFMH-0002":
                        case "236":

                            newList.Add("121005004000020" + cPo);
                            newList.Add("122305003160020" + cCustOrderLot);
                            newList.Add("122205002430020" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("122205001720020" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("122205001010020" + nGross.ToString("0.00 Kg"));
                            newList.Add("122205000260020" + nNett.ToString("0.00 Kg"));
                            newList.Add("420005001120388" + cLot);
                            newList.Add("121005000250300" + cCtn);

                            break;
                        #endregion
                        #region Outer label 234, LAB-OC-ANSL-0010
                        case "LAB-OC-ANSL-0010":
                        case "234":

                            switch (cHartaSize.Trim()) //to add fixed condition of EMEA item ("2") and size indicator ("0-5") - Replace FG item code
                            {
                                case "XS":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "20" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                                case "S":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "21" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                                case "M":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "22" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                                case "L":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "23" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                                case "XL":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "24" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                                case "XXL":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "25" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                            }

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "&G" + "92" + cDistCountry;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cDistCountry;

                            newList.Add("491100100150035" + "MICRO-TOUCH" + Chr(169) + " MICRO-THIN WHITE NITRILE");
                            newList.Add("491100100150055" + "GLOVES - EMEA");
                            newList.Add("491100000150095" + "OUTER CARTON OF 2000");  //Fixed qty
                            newList.Add("491100000150120" + "SIZE:");
                            newList.Add("491100000700120" + cCustSize);
                            newList.Add("491100000150145" + "REF:");
                            newList.Add("491100000700145" + cCustRefNo);
                            newList.Add("491100000150170" + "INT:");
                            newList.Add("491100000700170" + cDistCountry);
                            newList.Add("490000102380095" + "LOT");
                            newList.Add("1X1100002330075" + "B020040002002");
                            newList.Add("490000102880095" + cCustOrderLot);
                            newList.Add("491100002880120" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491100002880145" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250" + "C&G" + cGs1);
                            newList.Add("401100000150290" + "PO: " + cOrderNum + "    CTN#: " + cCtn + "    MFG REF: " + cLot);
                            newList.Add("D11");
                            newList.Add("1Y1200002370103" + "MFG");
                            newList.Add("1Y1200002450129" + "EXP");
                            break;
                        #endregion
                        #region Outer Label 232
                        case "232":

                            cGs1 = "01" + cOuterGtn14_Code + "10" + cCustOrderLot; // Outer Product Code + Customer Lot
                            cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cCustOrderLot; // Outer Product Code + Customer Lot 

                            newList.Add("410005000200040" + cPo); // Customer PO Number
                            newList.Add("411200000200070" + "Ctn. No.");
                            newList.Add("421100001000070" + cCtn); // Carton Number
                            newList.Add("422300001900070" + PadCenter(cCustSize, 5)); // Printing Size
                            newList.Add("1Y1100000150086" + "LOT");
                            newList.Add("421105001000105" + cCustOrderLot);//Customer Lot
                            newList.Add("410005000150130" + "GS1 code:");
                            newList.Add("4e1103000150165" + "C&G" + cGs1); // Outer Product Code + Customer Lot
                            newList.Add("400000000150175" + cReadable); // Outer Product Code + Customer Lot

                            break;
                        #endregion
                        #region Outer Label 231
                        case "231":

                            String[] cMonth = { "JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ" };
                            dExp = dMfg.AddMonths(nExpMonth);

                            cGs1 = "01" + cOuterGtn14_Code + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cCustOrderLot;

                            newList.Add("422200000150057" + PadCenter(cCustSize, 11));
                            newList.Add("490000000150090" + "Caixa No /");
                            newList.Add("491100000150110" + "Carton No :");
                            newList.Add("491100002000110" + cCtn);
                            newList.Add("491100000150140" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                            newList.Add("491100000150160" + "Manufacturing Date:");
                            newList.Add("491100000800180" + cMonth[Convert.ToInt32(dMfg.ToString("MM")) - 1] + "/" + dMfg.ToString("yyyy"));
                            newList.Add("491100000150210" + "Validade/Expiry Date:");
                            newList.Add("491100000800230" + cMonth[Convert.ToInt32(dExp.ToString("MM")) - 1] + "/" + dExp.ToString("yyyy"));
                            newList.Add("491100000150260" + "Lote:");
                            newList.Add("491100000800260" + cCustOrderLot);
                            newList.Add("401100000150275" + cPo + "  " + cLot);
                            newList.Add("4e2105000150340" + "C&G" + cGs1);
                            newList.Add("400000000150350" + cReadable.ToString());

                            break;
                        #endregion  
                        #region Outer Label 230
                        case "230":

                            String[] bMonth = { "JAN", "FEV", "MAR", "ABR", "MAI", "JUN", "JUL", "AGO", "SET", "OUT", "NOV", "DEZ" };
                            dExp = dMfg.AddMonths(nExpMonth);

                            cGs1 = "01" + cOuterGtn14_Code + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cCustOrderLot;

                            newList.Add("422200000150057" + PadCenter(cCustSize, 11));
                            newList.Add("490000000150090" + "Caixa No /");
                            newList.Add("491100000150110" + "Carton No :");
                            newList.Add("491100002000110" + cCtn);
                            newList.Add("491100000150140" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                            newList.Add("491100000150160" + "Manufacturing Date:");
                            newList.Add("491100000800180" + cCustOrderLot + "-" + bMonth[Convert.ToInt32(dMfg.ToString("MM")) - 1] + "/" + dMfg.ToString("yyyy"));
                            newList.Add("491100000150210" + "Validade/Expiry Date:");
                            newList.Add("491100000800230" + cCustOrderLot + "-" + bMonth[Convert.ToInt32(dExp.ToString("MM")) - 1] + "/" + dExp.ToString("yyyy"));
                            newList.Add("491100000150260" + "Lote:");
                            newList.Add("491100000800260" + cCustOrderLot);
                            newList.Add("401100000150275" + cPo + "  " + cLot);
                            newList.Add("4e2105000150340" + "C&G" + cGs1);
                            newList.Add("400000000150350" + cReadable.ToString());

                            break;
                        #endregion
                        #region Outer Label 228
                        case "228":

                            switch (cHartaSize.Trim()) //to add fixed condition of EMEA item ("2") and size indicator ("0-5") - Replace FG item code
                            {
                                case "XS":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "20" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                                case "S":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "21" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                                case "M":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "22" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                                case "L":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "23" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                                case "XL":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "24" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                                case "XXL":
                                    cCustOrderLot = dMfg.ToString("yyMM") + "25" + Right(cOrderNum, 5).Substring(0, 2) + "LJ";
                                    break;
                            }

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "&G" + "92" + cDistCountry;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cDistCountry;

                            newList.Add("491100100150035" + "MICRO-TOUCH" + Chr(169) + " MICRO-THIN WHITE NITRILE");
                            newList.Add("491100100150055" + "GLOVES - EMEA");
                            newList.Add("491100000150095" + "OUTER CARTON OF 2000");  //Fixed qty
                            newList.Add("491100000150120" + "SIZE:");
                            newList.Add("491100000700120" + cCustSize);
                            newList.Add("491100000150145" + "REF:");
                            newList.Add("491100000700145" + cCustRefNo);
                            newList.Add("491100000150170" + "INT:");
                            newList.Add("491100000700170" + cDistCountry);
                            newList.Add("490000102380095" + "LOT");
                            newList.Add("1X1100002330075" + "B020040002002");
                            newList.Add("490000102880095" + cCustOrderLot);
                            newList.Add("491100002880120" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491100002880145" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250" + "C&G" + cGs1);
                            newList.Add("401100000150290" + "PO: " + cOrderNum + "    CTN#: " + cCtn + "    MFG REF: " + cLot);
                            newList.Add("D11");
                            newList.Add("1Y1200002370103" + "MFG");
                            newList.Add("1Y1200002450129" + "EXP");

                            break;
                        #endregion
                        #region Outer Label 229
                        case "229":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //This is for BB Code
                                                                                                           //cCustOrderLot = "AN" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //This is for NGC Code

                            newList.Add("D11");
                            newList.Add("421100000150020" + "Date of Manufacture/");
                            newList.Add("421100000150030" + "Date de Fabrication:");
                            newList.Add("421100000150053" + "Exp. Date:");
                            newList.Add("421100000150075" + "Gross Weight/");
                            newList.Add("421100000150085" + "Poids brut:");
                            newList.Add("421100000150125" + "Net Weight/");
                            newList.Add("421100000150135" + "Poids net:");
                            newList.Add("421100000150185" + "Case #/Caisse #:"); // change from 'Caisse no.' into 'Caisse #'
                            newList.Add("D22");
                            newList.Add("421100001350030" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("421100001350057" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("421100001350085" + nGross.ToString("0.0 Kg"));
                            newList.Add("1Y1100000150090" + "LOT");
                            newList.Add("421100001350110" + cCustOrderLot);
                            newList.Add("421100001350135" + nNett.ToString("0.0 Kg"));
                            newList.Add("411100000150158" + "P.O.:");
                            newList.Add("421100001350160" + cPo);
                            newList.Add("421100001350190" + cCtn);
                            newList.Add("401105002100190" + cLot);

                            break;
                        #endregion
                        #region Outer Label 223
                        case "223":
                            newList.Add("490000200200040" + "Ref. : " + cBrand);
                            newList.Add("490000100200055" + "Description:");
                            newList.Add("490000200200115" + "Size : " + cCustSize);
                            newList.Add("490000100200135" + "QUANTITY : " + cProdRefNo + " pcs");
                            newList.Add("490000100200155" + "CARTON N" + Chr(167) + ": " + cCtn);
                            newList.Add("490000100200175" + "P.O. NUMBER: " + cPo);
                            newList.Add("490000100200195" + "Measures: " + cInnerGtn14_Code);
                            newList.Add("490000100200215" + "Gross weight: " + nGross.ToString("0.00 Kgs"));
                            newList.Add("490000100200235" + "Net weight: " + nNett.ToString("0.00 Kgs"));
                            newList.Add("4e1105000400295" + cOuterGtn14_Code);
                            newList.Add("401100000950305" + cOuterGtn14_Code);
                            newList.Add("4e1105000800365" + cPo.Substring(8) + dMfg.ToString("yy").Substring(1, 1) + "/" + cCustOrderLot);
                            newList.Add("401100001200375" + cPo.Substring(8) + dMfg.ToString("yy").Substring(1, 1) + "/" + cCustOrderLot);
                            newList.Add("111100002700280" + cLot);
                            newList.Add("D11");
                            newList.Add("490000200200070" + "GUANTES DESECHABLES DE NITRILO");
                            newList.Add("490000200200083" + "SIN POLVO, " + cDistCountry);

                            break;
                        #endregion
                        #region Outer Label 224
                        case "224":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                            newList.Add("211100003690076" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100002190076" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("211100001020076" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100003690063" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1105003690011" + "C&G" + cGs1);     //GS1 barcode - check paramater
                            newList.Add("201100000400010" + cCtn);     //GS1 barcode - check paramater
                            break;
                        #endregion
                        #region Outer Label 222
                        case "222":

                            newList.Add("491100200200063" + "FBA");
                            newList.Add("1X1100000150060" + "l00050350");
                            newList.Add("1X1100000150133" + "l00090350");
                            newList.Add("3z2200003600320" + "F2002000" + cOuterGtn14_Code + cCtn);
                            newList.Add("4e1111000250260" + cOuterGtn14_Code + cCtn);
                            newList.Add("400000000900270" + cOuterGtn14_Code + cCtn);
                            newList.Add("1X1100000150280" + "l00050260");
                            newList.Add("D11");
                            newList.Add("420000001000030" + "PLEASE LEAVE THIS LABEL UNCOVERED");
                            newList.Add("491100200200080" + "SHIP FROM:");
                            newList.Add("491100200200090" + "Port of Los Angeles");
                            newList.Add("491100200200100" + "425 S. Palos Verdes St.");
                            newList.Add("491100200200110" + "San Pedro, CA 90731");
                            newList.Add("491100200200120" + "United States");
                            newList.Add("491100201800080" + "SHIP TO:");
                            newList.Add("491100201800090" + "FBA: Glovmart");
                            newList.Add("491100201800100" + "Amazon.com Services, Inc.");
                            newList.Add("491100201800110" + "24300 Nandina Ave");
                            newList.Add("491100201800120" + "Moreno Valley, CA 92551-9534");
                            newList.Add("491100201800130" + "United States");
                            newList.Add("491100202150300" + "Single SKU");
                            newList.Add("491100301750315" + cProdRefNo);
                            newList.Add("491100302350327" + "Qty 5");
                            newList.Add("491100200250317" + cOrderNum + "     " + cCustSize);
                            newList.Add("491100200250327" + "CTN:" + cCtn + "    " + cLot);

                            break;
                        #endregion
                        #region Outer Label 221
                        case "221":

                            String[] aYear = { "J", "A", "B", "C", "D", "E", "F", "G", "H", "I" };
                            cCustRefNo = cProdRefNo + aYear[Convert.ToInt32(Right(dMfg.ToString("yy"), 1))] + dMfg.ToString("MM") + "-" + cCustOrderLot;

                            newList.Add("191000000650020" + "Lot No.");
                            newList.Add("191000000650100" + cCustRefNo);
                            newList.Add("1Y1100000250020" + "MFG_H");
                            newList.Add("191000000350100" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("101100000150100" + cCtn + "   " + cLot);
                            break;

                        #endregion
                        #region Outer Label 220
                        case "220":

                            String[] aYear1 = { "J", "A", "B", "C", "D", "E", "F", "G", "H", "I" };
                            cCustRefNo = cProdRefNo + aYear1[Convert.ToInt32(Right(dMfg.ToString("yy"), 1))] + dMfg.ToString("MM") + "-" + cCustOrderLot;

                            newList.Add("191000000500020" + "Lot No.");
                            newList.Add("191000000500100" + cCustRefNo);
                            newList.Add("101100000300100" + cCtn + "   " + cLot);
                            break;
                        #endregion
                        #region Outer Label 219
                        case "219":

                            String[] aMonth = { "A", "B", "C", "D", "E", "H", "J", "K", "L", "N", "P", "S" };
                            cCustRefNo = cDistCountry + dMfg.ToString("yy") + aMonth[Convert.ToInt32(dMfg.ToString("MM")) - 1] + cCustOrderLot;

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustRefNo;
                            cReadable = "(01)" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustRefNo;

                            newList.Add("421100000300030" + "Lot No.  :");
                            newList.Add("421100001700030" + cCustRefNo);
                            newList.Add("421100000300060" + "Use By   :");
                            newList.Add("421100001700060" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("421100000300090" + "Case No. :");
                            newList.Add("421100001700090" + Right(cCtn, 4));
                            newList.Add("421100000300120" + cCustSize);
                            newList.Add("1Y1100001700100" + "REF");
                            newList.Add("421100002200120" + cProdRefNo);
                            newList.Add("110000003700020" + cLot);
                            newList.Add("4e1109000350220" + "C&G" + cGs1);
                            newList.Add("400000000500230" + cReadable);

                            break;
                        #endregion
                        #region Outer Label 218
                        case "218":

                            cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 6).Substring(0, 3) + cProdRefNo;

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot;

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200055" + "Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060" + "EXP");
                            newList.Add("421100001000085" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150100" + "LOT");
                            newList.Add("421105001000115" + cCustOrderLot);
                            newList.Add("410005000150140" + "GS1 code:");
                            newList.Add("4e1103000150180" + "C&G" + cGs1);
                            newList.Add("400000000150190" + cReadable);

                            objOuterLabelDTO.barcodeToValidate = dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot;
                            objOuterLabelDTO.countToValidate = cGs1.Length;

                            break;
                        #endregion
                        #region Outer Label 217
                        case "217":

                            newList.Add("410005000200035" + cPo);
                            newList.Add("411200000200065" + "Ctn.:");
                            newList.Add("421100000750065" + cCtn);
                            newList.Add("462200002050145" + cCustSize);
                            newList.Add("1Y1100000150072" + "MFG");
                            newList.Add("421100000750102" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150109" + "EXP");
                            newList.Add("421100000750135" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150147" + "LOT");
                            newList.Add("4d3103000750174" + cLot);
                            newList.Add("410005000750189" + cLot);
                            break;
                        #endregion
                        #region Outer Label 216
                        case "216":

                            cCustOrderLot = cPo.Substring(2, 3) + cProdRefNo;
                            newList.Add("D11");
                            newList.Add("491100100150061" + "Lot Number");
                            newList.Add("491100100150109" + "Date of");
                            newList.Add("491100100150116" + "Manufacture");
                            newList.Add("491100100150160" + "Date of");
                            newList.Add("491100100150167" + "Expiry");
                            newList.Add("D22");
                            newList.Add("410005000150025" + cPo);
                            newList.Add("1Y1100000150030" + "LOT");
                            newList.Add("421100000650051" + cCustOrderLot);
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150068" + "MFG");
                            newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150120" + "EXP");
                            newList.Add("421100000650147" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("411200000150193" + "Case.");
                            newList.Add("421100000650191" + cCtn);
                            newList.Add("410005001850188" + cLot);

                            break;
                        #endregion
                        #region Outer Label 215
                        case "215":

                            cGs1 = "02" + cOuterGtn14_Code + "10" + cCustOrderLot + "17" + dExp.ToString("yyMMdd") + "37" + cProdRefNo;
                            cReadable = "(02)" + cOuterGtn14_Code + "(10)" + cCustOrderLot + "(17)" + dExp.ToString("yyMMdd") + "(37)" + cProdRefNo;

                            newList.Add("1Y1100000200020" + "LOT");
                            newList.Add("1Y1100000200050" + "MFG");
                            newList.Add("1Y1100001850050" + "EXP");
                            newList.Add("491100100700040" + cCustOrderLot);
                            newList.Add("491100100700080" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491100102300080" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("4e1105000200150" + "C&G" + cGs1);
                            newList.Add("400000000200160" + cReadable);
                            newList.Add("4e1105000200230" + "C&G" + cOuterGtn14_Code);
                            newList.Add("400000000200240" + cOuterGtn14_Code);
                            newList.Add("411100000200280" + "CTN: " + cCtn + "   " + cLot + "   " + cCustSize);

                            break;
                        #endregion
                        #region Outer Label 214
                        case "214":

                            newList.Add("H15");
                            newList.Add("401100000150040" + "RDNMD-METAL DETECTABLE NITRILE");
                            newList.Add("D22");
                            newList.Add("421100002500050" + "RDNMD");
                            newList.Add("491100000150075" + "SIZE");
                            newList.Add("491100001200075" + cCustSize);
                            newList.Add("491100002500075" + "PO NO.: " + cPo);
                            newList.Add("4e1105002500135" + "C&G" + cDistCountry);
                            newList.Add("400000002650145" + cDistCountry);
                            newList.Add("491100000150100" + "MFG DATE");
                            newList.Add("491100001200100" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491100000150125" + "EXP DATE");
                            newList.Add("491100001200125" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("491100000150150" + "LOT");
                            newList.Add("491100001200150" + cLot);
                            newList.Add("491100000150175" + "QTY");
                            newList.Add("491100001200175" + "(10 inner x " + cProdRefNo + " pcs) by weight");
                            newList.Add("491100000150280" + "CTN. NO.");
                            newList.Add("491100001200280" + cCtn);
                            newList.Add("4e1105001200235" + "C&G" + "01" + cOuterGtn14_Code);
                            newList.Add("400000001350245" + "(01)" + cOuterGtn14_Code);
                            newList.Add("491100001050075" + ":");
                            newList.Add("491100001050100" + ":");
                            newList.Add("491100001050125" + ":");
                            newList.Add("491100001050150" + ":");
                            newList.Add("491100001050175" + ":");
                            newList.Add("491100001050280" + ":");
                            newList.Add("Q0002");

                            break;
                        #endregion
                        #region Outer Label 213
                        case "213":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                            newList.Add("D11");
                            newList.Add("421100000150050" + "Gross Weight/Poids");
                            newList.Add("421100000150060" + "brut/Peso bruto:");
                            newList.Add("421100000150078" + "Net Weight/Poids");
                            newList.Add("421100000150088" + "net/Peso neto:");
                            newList.Add("421100000150187" + "Case #/N de caisse:");
                            newList.Add("491100100150155" + "Date of Manufacture");
                            newList.Add("491100100150163" + "Date de Fabrication");
                            newList.Add("491100100150171" + "Fecha de Fabricaci" + Chr(162) + "n");
                            newList.Add("491100100620187" + Chr(167));
                            newList.Add("D22");
                            newList.Add("1Y1100000150015" + "LOT");
                            newList.Add("421100001350035" + cCustOrderLot);
                            newList.Add("421100001350060" + nGross.ToString("0.0 Kgs"));
                            newList.Add("421100001350085" + nNett.ToString("0.0 Kgs"));
                            newList.Add("411100000150108" + "P.O.:" + Chr(224));
                            newList.Add("421100001350110" + cPo);
                            newList.Add("1Y1100000150113" + "MFG");
                            newList.Add("421100001350150" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("421100001350190" + cCtn);
                            newList.Add("401105002200190" + cLot);

                            break;
                        #endregion
                        #region Outer Label 212
                        case "212":

                            newList.Add("410005000150025" + cPo);
                            newList.Add("1Y1100000150040" + "LOT_T_V");
                            newList.Add("421100001000062" + cCustOrderLot);
                            newList.Add("422300002300138" + cCustSize);
                            newList.Add("1Y1100000150080" + "MFG_T_V");
                            newList.Add("421100001000110" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("411200000150173" + "Case.");
                            newList.Add("421100001000170" + cCtn);
                            newList.Add("410005001850188" + cLot);

                            break;
                        #endregion
                        #region Outer Label 211
                        case "211":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyyyMM") + "10" + cPo;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyyyMM") + "(10)" + cPo;

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200055Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060EXP");
                            newList.Add("421100001000085" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150100LOT");
                            newList.Add("421105001000115" + cLot);
                            newList.Add("410005000150140" + "GS1 code:");
                            newList.Add("4e1103000150180C&G" + cGs1);
                            newList.Add("400000000150190" + cReadable);

                            break;
                        #endregion
                        #region Outer Label 210
                        case "210":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                            newList.Add("211100003690145" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100002190145" + dMfg.ToString("yyyy-MM"));
                            newList.Add("211100001020145" + dExp.ToString("yyyy-MM"));
                            newList.Add("211100003690128" + cCtn);
                            newList.Add("201100003690113" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1105003690061" + "C&G" + cGs1);     //GS1 barcode - check paramater
                            newList.Add("Q0002");
                            break;
                        #endregion
                        #region Outer Label 209
                        case "209":

                            switch (cCustSize.Trim())
                            {
                                case "XS":
                                    cCustRefNo = "N30";
                                    break;
                                case "S":
                                    cCustRefNo = "N31";
                                    break;
                                case "M":
                                    cCustRefNo = "N32";
                                    break;
                                case "L":
                                    cCustRefNo = "N33";
                                    break;
                                case "XL":
                                    cCustRefNo = "N34";
                                    break;
                            }

                            cCustOrderLot = dMfg.ToString("yyMM") + "GA" + cCustRefNo + cCustOrderLot;


                            newList.Add("421100000150030" + "LOT NO:");
                            newList.Add("421100001050030" + cCustOrderLot);
                            newList.Add("1Y1100000200040" + "MFG");
                            newList.Add("421100001050065" + dMfg.ToString("yyyy") + "-" + dMfg.ToString("MM") + "-" + dMfg.ToString("dd"));
                            newList.Add("431100002200070" + PadCenter(cCustSize, 5));
                            newList.Add("411100001050090" + cCtn);
                            newList.Add("411100001700090" + cLot);
                            break;

                        #endregion
                        #region Outer Label 208
                        case "208":

                            cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "10" + cPo;
                            cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(10)" + cPo;

                            newList.Add("410005000150030" + cPo);
                            newList.Add("411200000150055" + "Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000100060" + "MFG");
                            newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100100" + "LOT");
                            newList.Add("421105001000120" + cPo);
                            newList.Add("4e1105000100180" + "C&G" + cGs1);
                            newList.Add("400000000100190" + cReadable);
                            break;
                        #endregion
                        #region Outer Label 207
                        case "207":

                            cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 6).Replace("/", "") + "1";

                            newList.Add("410005000200020" + cPo);
                            newList.Add("1Y1100000150030" + "LOT");
                            newList.Add("421100000700051" + cCustOrderLot);
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070" + "MFG");
                            newList.Add("421100000700095" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150115" + "EXP");
                            newList.Add("421100000700141" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("411200000150183" + "Case.");
                            newList.Add("421100000700179" + cCtn);
                            newList.Add("410005001850188" + cLot);

                            break;
                        #endregion
                        #region Outer Label 206
                        case "206":

                            newList.Add("411200000200060" + "LOT NO.");
                            newList.Add("4e1106001050080" + "C&G" + Right(cPo, 5));
                            newList.Add("410005001050095" + Right(cPo, 5));
                            newList.Add("411200000200120" + "CTN. NO.");
                            newList.Add("421100001050120" + cCtn);
                            newList.Add("411200000200150" + "MFG.");
                            newList.Add("421100001050148" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("411100000200173" + "MFG. REF.");
                            newList.Add("411100001050173" + cLot);
                            newList.Add("422200001300190" + PadCenter(cCustSize, 11));
                            break;
                        #endregion
                        #region Outer Label 202
                        case "202": //Ansell/Microflex

                            cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            newList.Add("411200000200040" + "PO No.");
                            newList.Add("421100001150038" + cPo);
                            newList.Add("411200000200070" + "Ctn.No.");
                            newList.Add("421100001150068" + cCtn);
                            newList.Add("411200000200099" + "Mfg. Date.");
                            newList.Add("421100001150097" + dMfg.ToString("yyyy-MM"));
                            newList.Add("411200000200130" + "Exp. Date.");
                            newList.Add("421100001150128" + dExp.ToString("yyyy-MM"));
                            newList.Add("422300001850125" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200160" + "Lot No.");
                            newList.Add("421100001150158" + dMfg.ToString("yyMM") + "LJ");
                            newList.Add("411200000200187" + "Batch");
                            newList.Add("421100001150185" + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                            newList.Add("100000002800115" + cLot);
                            break;
                        #endregion
                        #region Outer Label 201
                        case "201"://OBP

                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150132" + "PO No.");
                            newList.Add("421100001100130" + cPo);
                            newList.Add("411200000150162" + "Mfg. Date");
                            newList.Add("421100001100160" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150192" + "Exp. Date");
                            newList.Add("421100001100190" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150222" + "Ctn. No.");
                            newList.Add("421100001100220" + cCtn);
                            newList.Add("411200000150252" + "Gross Wt.");
                            newList.Add("421100001100250" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150282" + "Net Wt.");
                            newList.Add("421100001100280" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150310" + "Lot No.");
                            newList.Add("421100001100308" + cLot);
                            newList.Add("421100000500343" + cHartaSize);
                            newList.Add("4e3105001100374" + cCustOrderLot);
                            newList.Add("401105001100384" + cCustOrderLot);
                            break;
                        #endregion
                        #region Outer Label 203
                        case "203":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4);
                            newList.Add("2e1109009850105C&G" + cGs1);
                            newList.Add("201100009850090" + cReadable);
                            if (cCustSize.Contains("½"))
                                newList.Add("223400007000125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100007000125" + PadCenter(cCustSize, 5));

                            newList.Add("D11");
                            newList.Add("2e4102007050095" + cLot + cCtn);
                            newList.Add("210005006900085" + cLot + cCtn);
                            newList.Add("D22");

                            newList.Add("2X1110005350080L001500");
                            newList.Add("201100010350070Gross Wt");
                            newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100009050070Exp Date");
                            newList.Add("221100008350054" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100007200070PO No");
                            newList.Add("291100006700054" + cPo);

                            newList.Add("2X1110005350050L001500");
                            newList.Add("201100010350040Nett Wt");
                            newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100009050040Reorder No");
                            newList.Add("221100008350024" + cProdRefNo);
                            newList.Add("201100007200040Ctn No");
                            newList.Add("221100006700024" + cCtn);

                            newList.Add("2X1110005250010L200001");
                            if (cCustSize.Contains("½"))
                                newList.Add("223400004500125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100004500125" + PadCenter(cCustSize, 5));

                            newList.Add("2e1109002750105C&G" + cGs1);
                            newList.Add("201100002750090" + cReadable);

                            newList.Add("D11");
                            newList.Add("2e4102004550095" + cLot + cCtn);
                            newList.Add("210005004400085" + cLot + cCtn);
                            newList.Add("D22");

                            newList.Add("2X1110000100080L001500");
                            newList.Add("201100005100070Gross Wt");
                            newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100003800070Exp Date");
                            newList.Add("221100003100054" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100001950070PO No");
                            newList.Add("291100001450054" + cPo);

                            newList.Add("2X1110000100050L001500");
                            newList.Add("201100005100040Nett Wt");
                            newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100003800040Reorder No");
                            newList.Add("221100003100024" + cProdRefNo);
                            newList.Add("201100001950040Ctn No");
                            newList.Add("221100001450024" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 204
                        case "204":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075" + "Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150082" + "MFG");
                            newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150119" + "EXP");
                            newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150157" + "LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            newList.Add("D11");
                            newList.Add("4e4102001750070" + cLot + cCtn);
                            newList.Add("410005001900080" + cLot + cCtn);
                            newList.Add("D22");
                            break;
                        #endregion
                        #region Outer Label 200
                        case "200":
                            newList.Add("411200000200055" + "Lot No.");
                            newList.Add("421100001150055" + dMfg.ToString("yyMM") + "LJ");
                            newList.Add("411200000200085" + "Batch");
                            newList.Add("421100001150085" + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                            newList.Add("411200000200115" + "Mfg. Date.");
                            newList.Add("421100001150115" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("411200000200145" + "Case No");
                            newList.Add("421100001150143" + cCtn);
                            newList.Add("411100000200168" + "    Ref.");
                            newList.Add("411100001150168" + cPo);
                            newList.Add("400000001150181" + cLot);
                            newList.Add("422200001200185" + PadCenter(cCustSize, 11));
                            break;
                        #endregion
                        #region Outer Label 199
                        case "199":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                            newList.Add("211100003500067" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100001650067" + dExp.ToString("yyyy-MM"));
                            newList.Add("211100000650067" + cCtn);
                            newList.Add("201100003690050" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1104003690010" + "C&G" + cGs1);     //GS1 barcode - check paramater
                            newList.Add("Q0002");
                            break;
                        #endregion
                        #region Outer Label 198
                        case "198":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //This is for BB Code

                            newList.Add("D11");
                            newList.Add("421100000150030" + "Date of Manufacture/");
                            newList.Add("421100000150040" + "Date de Fabrication:");
                            newList.Add("421100000150055" + "Gross Weight/");
                            newList.Add("421100000150065" + "Poids brut:");
                            newList.Add("421100000150105" + "Net Weight/");
                            newList.Add("421100000150115" + "Poids net:");
                            newList.Add("421100000150165" + "Case #/Caisse no.:");
                            newList.Add("D22");
                            newList.Add("421100001350040" + dMfg.ToString("MM-yyyy"));
                            newList.Add("421100001350065" + nGross.ToString("0.0 Kg"));
                            newList.Add("1Y1100000150070LOT");
                            newList.Add("421100001350090" + cCustOrderLot);
                            newList.Add("421100001350115" + nNett.ToString("0.0 Kg"));
                            newList.Add("411100000150138" + "P.O.:");
                            newList.Add("421100001350140" + cPo);
                            newList.Add("421100001350170" + cCtn);
                            newList.Add("401105002000190" + cLot);

                            break;
                        #endregion
                        #region Outer Label 193
                        case "193":

                            newList.Add("D10");
                            newList.Add("490000303100145" + "LOT #: " + dMfg.ToString("yyMM") + "LJ");
                            newList.Add("490000304300145" + "Batch: " + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                            newList.Add("490000303100165" + "Mfg Ref: " + cLot);
                            newList.Add("490000303100185" + "Expiration Date");
                            newList.Add("490000303100200" + "Date d'expiration:");
                            newList.Add("490000303100220" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("490000304300185" + "Manufacturing Date");
                            newList.Add("490000304300200" + "Date de fabrication:");
                            newList.Add("490000304300220" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("490000303100240" + "Ctn. No: " + cCtn);
                            newList.Add("D10");
                            //newList.Add("Q0002"); 
                            break;
                        #endregion
                        #region Outer Label 194
                        case "194":

                            newList.Add("410005000200023" + cPo);
                            newList.Add("422400002000090" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200080Ctn. No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("411200000200110Gross Wt.");
                            newList.Add("421100001100110" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200140Net Wt.");
                            newList.Add("421100001100140" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200170Lot No.");
                            newList.Add("4d3103001100175" + cLot);
                            newList.Add("400005001100187" + cLot);
                            break;
                        #endregion
                        #region Outer Label 195
                        case "195":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                            newList.Add("1Y1100000200025LOT");
                            newList.Add("421100001100045" + cCustOrderLot);
                            newList.Add("411200000200080Gross Wt.");
                            newList.Add("421100001100080" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200110Net Wt.");
                            newList.Add("421100001100110" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200140PO");
                            newList.Add("421100001100140" + cPo);
                            newList.Add("411200000200170Case No.");
                            newList.Add("421100001100170" + cCtn);
                            newList.Add("401105002000190" + cLot);
                            break;
                        #endregion
                        #region Outer Label 196
                        case "196":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                            newList.Add("1Y1100000200015LOT");
                            newList.Add("421100001100035" + cCustOrderLot);
                            newList.Add("411200000200065Gross Wt.");
                            newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200090Net Wt.");
                            newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200115PO.");
                            newList.Add("421100001100115" + cPo);
                            newList.Add("411200000200140Case No.");
                            newList.Add("421100001100140" + cCtn);
                            newList.Add("1Y1100000200145MFG");
                            newList.Add("421100001100170" + dMfg.ToString("MM-yyyy"));
                            newList.Add("401105002000190" + cLot);
                            break;
                        #endregion
                        #region Outer Label 197
                        case "197":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                            newList.Add("411100100150025Lot No.");
                            newList.Add("411100001400025" + cCustOrderLot);
                            newList.Add("411100000150045Gross Weight");
                            newList.Add("411100001400045" + nGross.ToString("0.0 Kgs"));
                            newList.Add("411100000150070Nett Weight");
                            newList.Add("411100001400070" + nNett.ToString("0.0 Kgs"));
                            newList.Add("411100000150095PO. No.");
                            newList.Add("411100001400095" + cPo);
                            newList.Add("411100000150120Ctn. No.");
                            newList.Add("411100001400120" + cCtn);
                            newList.Add("411100000150145Mfg. Date");
                            newList.Add("411100001400145" + dMfg.ToString("yyyy-MM"));
                            newList.Add("411100000150170Exp. Date");
                            newList.Add("411100001400170" + dExp.ToString("yyyy-MM"));
                            newList.Add("410000001800187" + cLot);
                            break;
                        #endregion
                        #region Outer Label 191
                        case "191":

                            newList.Add("121005004000020" + cPo);
                            newList.Add("122305003160020" + cCustOrderLot);
                            newList.Add("122205002430020" + dMfg.ToString("MM-yyyy"));
                            newList.Add("122205001720020" + dExp.ToString("MM-yyyy"));
                            newList.Add("122205001010020" + nGross.ToString("0.00 Kg"));
                            newList.Add("122205000260020" + nNett.ToString("0.00 Kg"));
                            newList.Add("420005001120388" + cLot);
                            newList.Add("121005000250300" + cCtn);
                            break;

                        #endregion
                        #region Outer Label 192
                        case "192":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("421100000300030" + "Lot No.  :");
                            newList.Add("421100001700030" + cCustOrderLot);
                            newList.Add("421100000300060" + "Use By   :");
                            newList.Add("421100001700060" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("421100000300090" + "Case No. :");
                            newList.Add("421100001700090" + Right(cCtn, 4));
                            newList.Add("421100000300120" + cCustSize);
                            newList.Add("1Y1100001700100" + "REF");
                            newList.Add("421100002200120" + cProdRefNo);
                            newList.Add("110000003700020" + cLot);
                            newList.Add("4e1109000350220" + "C&G" + cGs1);
                            newList.Add("400000000500230" + cReadable);
                            break;
                        #endregion
                        #region Outer Label 190
                        case "190":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "30" + cCustRefNo + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(30)" + cCustRefNo + "(10)" + cCustOrderLot;

                            newList.Add("410005000200025" + cPo);
                            newList.Add("410005002000025" + "CTN: " + cCtn);
                            newList.Add("422300002000090" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150030" + "MFG");
                            newList.Add("421100000700055" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("1Y1100000150065" + "EXP");
                            newList.Add("421100000700090" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("1Y1100000150100" + "LOT");
                            newList.Add("421105000700120" + cCustOrderLot);
                            newList.Add("4e1106000150185" + "C&G" + cGs1);
                            newList.Add("400000000080195" + cReadable);
                            break;
                        #endregion
                        #region Outer Label 189
                        case "189": //Microflex

                            cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            newList.Add("411200000200045PO No.");
                            newList.Add("421100001000045" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000107" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("422300001850140" + PadCenter(cCustSize, 5));
                            newList.Add("421100001000140" + dExp.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4e1103001000175C&G" + cGs1);
                            newList.Add("410005001000190" + cReadable);
                            newList.Add("100000002800115" + cLot);
                            break;
                        #endregion  
                        #region Outer Label 187
                        case "187":
                            newList.Add("421100000400033" + "Gross Wt: " + nGross.ToString("0.0 Kg"));
                            newList.Add("421100000400058" + "Nett  Wt: " + nNett.ToString("0.0 Kg"));
                            newList.Add("411100000400078" + "PO No.: " + cPo);
                            newList.Add("411100000400093" + cLot);
                            newList.Add("411100001900093" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 40
                        case "40":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("410005001800020" + cLot);
                            newList.Add("422400000100120" + PadCenter(cCustSize, 11));
                            newList.Add("411200000100200" + "Ctn. No.");
                            newList.Add("421100001100198" + cCtn);
                            newList.Add("421100001100245" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100001100300" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100220" + "LOGO");
                            newList.Add("420005001100348" + cPo);
                            break;
                        #endregion
                        #region Outer Label 186
                        case "186":
                            cGs1 = "010" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + cCustOrderLot;
                            cReadable = "(01)0" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + cCustOrderLot;
                            cPackDate = dMfg.ToString("MM/yyyy");

                            newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize); //Customer size
                            newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA"); //Product and packing size
                            newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS"); //Product and packing size
                            newList.Add("440000001950130" + Right(cOuterGtn14_Code, 6)); //SKU code
                            newList.Add("4d3104000150130" + cCustRefNo); //DUN14 barcode
                            newList.Add("400000000150140" + cCustRefNo); //DUN14 HMR text
                            newList.Add("4e1103002650180C" + cCustOrderLot); //Customer lot (YYMMDDLN) barcode
                            newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg")); //Gross weigh
                            newList.Add("410000002150195" + "LOTE: " + cCustOrderLot); //Customer lot (YYMMDDLN) HMR text
                            newList.Add("4X1110000150198" + "L002330"); //Draw Line
                            newList.Add("4X1110001950184" + "L030002"); //Draw Line
                            newList.Add("410000000150215" + "FAB.: " + cPackDate + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                            newList.Add("410000002150215" + "VAL.: " + dExp.ToString("MM-yyyy")); //Exp Date
                            newList.Add("4e1106000150280C&G" + cGs1); //GS1-128 barcode
                            newList.Add("400000000150290" + cReadable); //GS1-128 HMR text
                            newList.Add("300000003650270" + cOrderNum); // Work order number
                            newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize); //Hartalega internal lot, Carton number, Hartalega internal size
                            break;
                        #endregion

                        #region Outer Label 185
                        case "185":
                            cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200055Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060MFG");
                            newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150100LOT");
                            newList.Add("421105001000115" + cCustOrderLot);
                            newList.Add("4e1105000150180C&G" + cGs1);
                            newList.Add("400000000080190" + cReadable);
                            break;
                        #endregion

                        #region Outer Label 184
                        case "184":
                            newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                            newList.Add("111100000800240" + cCtn);
                            newList.Add("121100000550020" + "LOT NO.:");
                            newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                            newList.Add("141100000100020" + cLot);
                            // newList.Add("Q0002"); 
                            break;
                        #endregion

                        #region Label Set Optimzation - Custom Date

                        /* yiksiu Sep 2017 : Label Set Optimzation
                         *  138 --> 178
                         *   59 --> 179
                         *   65 --> 180
                         *  101 --> 181
                         *  108 --> 182
                         */

                        #region Outer Set 178 (138)
                        case "178":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075" + "Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000080" + cCustSize);
                            newList.Add("1Y1100000150114" + "EXP");
                            newList.Add("421100001000140" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150157" + "LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            break;
                        #endregion

                        #region Outer Set 179 (59)
                        case "179":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("422300001800080" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200080Ctn. No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("1Y1100000150100MFG");
                            newList.Add("421100001100125" + (dMfg.ToString(outerLabelSetDateFormat)));
                            newList.Add("1Y1100000150150LOT");
                            newList.Add("4d3103001100175" + cLot);
                            newList.Add("410005001100187" + cLot);
                            break;
                        #endregion

                        #region Outer Set 180 (65)
                        case "180":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000112" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("421100001000145" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            break;
                        #endregion

                        #region Outer Set 181 (101)
                        case "181":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100000650051" + cCustOrderLot); //Lot by Size
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100000650179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;
                        #endregion

                        #region Outer Set 182 (108)
                        case "182":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100000650051" + cCustOrderLot);
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("421100000650141" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100000650179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;
                        #endregion

                        #endregion

                        /* --------------------------------------- HSB Floor Upgrade Code Start  ---------------------------------------------------------- */
                        #region Outer Label 109
                        case "109": //CREMER POWDERED
                            cGs1 = "010" + cOuterGtn14_Code + "12" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                            cReadable = "(01)0" + cOuterGtn14_Code + "(12)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                            cPackDate = dMfg.ToString("dd/MM/yyyy");
                            cExpYear = (Convert.ToInt16((dExp - dMfg).TotalDays / 365)).ToString();

                            newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize);
                            newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA");
                            newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS");
                            newList.Add("440000001950130" + Right(cOuterGtn14_Code, 6));
                            newList.Add("4d3104000150130" + cProdRefNo);
                            newList.Add("400000000150140" + cProdRefNo);
                            newList.Add("4e1103002650180" + "C" + dMfg.ToString("yyMMdd") + Right(cPline, 2));
                            newList.Add("410000000150160" + "Data de embalagem");
                            newList.Add("410000000150175" + cPackDate);
                            newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg"));
                            newList.Add("410000002150195" + "LOTE: " + dMfg.ToString("yyMMdd") + Right(cPline, 2));
                            newList.Add("4X1110000150198" + "L002330");
                            newList.Add("4X1110001950184" + "L030002");
                            newList.Add("410000000150215" + "FAB.: " + dMfg.ToString("MM") + "/" + dMfg.ToString("yyyy") + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                            newList.Add("410000002150215" + "VAL.: " + cExpYear + " ANOS");
                            newList.Add("4e1106000150280" + "C&G" + cGs1);
                            newList.Add("400000000150290" + cReadable);
                            newList.Add("300000003650270" + cOrderNum);
                            newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize);
                            break;
                        #endregion

                        #region Outer Label 103
                        case "103":
                            cGs1 = "010" + cOuterGtn14_Code + "12" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                            cReadable = "(01)0" + cOuterGtn14_Code + "(12)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                            cPackDate = dMfg.ToString("dd/MM/yyyy");
                            cExpYear = (Convert.ToInt16((dExp - dMfg).TotalDays / 365)).ToString();

                            newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize);
                            newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA");
                            newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS");
                            newList.Add("440000001950130" + Right(cOuterGtn14_Code, 6));
                            newList.Add("4d3104000150130" + cProdRefNo);
                            newList.Add("400000000150140" + cProdRefNo);
                            newList.Add("4e1103002650180" + "C" + dMfg.ToString("yyMMdd") + Right(cPline, 2));
                            newList.Add("410000000150160" + "Data de embalagem");
                            newList.Add("410000000150175" + cPackDate);
                            newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg"));
                            newList.Add("410000002150195" + "LOTE: " + dMfg.ToString("yyMMdd") + Right(cPline, 2));
                            newList.Add("4X1110000150198" + "L002330");
                            newList.Add("4X1110001950184" + "L030002");
                            newList.Add("410000000150215" + "FAB.: " + dMfg.ToString("MM") + "/" + dMfg.ToString("yyyy") + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                            newList.Add("410000002150215" + "VAL.: " + cExpYear + " ANOS");
                            newList.Add("4e1106000150280" + "C&G" + cGs1);
                            newList.Add("400000000150290" + cReadable);
                            newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize);
                            break;
                        #endregion

                        #region Outer Label 102
                        case "102":
                            cGs1 = "010" + cOuterGtn14_Code + "12" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                            cReadable = "(01)0" + cOuterGtn14_Code + "(12)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + dMfg.ToString("yyMMdd") + Right(cPline, 2);
                            cPackDate = dMfg.ToString("dd/MM/yyyy");
                            cExpYear = (Convert.ToInt16((dExp - dMfg).TotalDays / 365)).ToString();

                            newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize);  //Customer size
                            newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA"); //Product and packing size
                            newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS");   //Product and packing size
                            newList.Add("440000001950130" + Right(cOuterGtn14_Code, 6));          //SKU code
                            newList.Add("4d3104000150130" + cProdRefNo);             //DUN14 barcode
                            newList.Add("400000000150140" + cProdRefNo);                                    //DUN14 HMR text
                            newList.Add("4e1103002650180" + "C" + dMfg.ToString("yyMMdd") + Right(cPline, 2));        //Customer lot (YYMMDDLN) barcode
                            newList.Add("410000000150160" + "Data de embalagem");         //Packing date Description
                            newList.Add("410000000150175" + cPackDate);           //Packing date
                            newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg")); //Gross weigh  
                            newList.Add("410000002150195" + "LOTE: " + dMfg.ToString("yyMMdd") + Right(cPline, 2));   //Customer lot (YYMMDDLN) HMR text
                            newList.Add("4X1110000150198" + "L002330");  //Draw Line
                            newList.Add("4X1110001950184" + "L030002");    //Draw Line
                            newList.Add("410000000150215" + "FAB.: " + dMfg.ToString("MM") + "/" + dMfg.ToString("yyyy") + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                            newList.Add("410000002150215" + "VAL.: " + cExpYear + " ANOS");  //Number of expiry years
                            newList.Add("4e1106000150280" + "C&G" + cGs1);       //GS1-128 barcode
                            newList.Add("400000000150290" + cReadable);       //GS1-128 HMR text
                            newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize);  //Hartalega internal lot, Carton number, Hartalega internal size
                            break;
                        #endregion

                        #region Outer Label 25
                        case "25":
                            lettercount = 0;
                            cSubBrand2 = string.Empty;
                            separators[0] = " ";
                            words = cBrand.Split(separators, StringSplitOptions.RemoveEmptyEntries);
                            foreach (var word in words)
                            {
                                lettercount += word.Length;
                                if (lettercount >= 25)
                                {
                                    cSubBrand2 = word;
                                }
                            }

                            if (cSubBrand2 != string.Empty)
                            {
                                newList.Add("421100000000035" + PadCenter(cBrand.Replace(cSubBrand2, "").Trim(), 25));
                                newList.Add("421100000150065" + PadCenter(cSubBrand2.Trim(), 25));
                                newList.Add("411200000150115" + "Size.");
                                newList.Add("421200001100113" + cCustSize);
                                newList.Add("411200000150145" + "PO No.");
                                newList.Add("421100001100143" + cPo);
                                newList.Add("411200000150175" + "Ctn. No.");
                                newList.Add("421100001100173" + cCtn);
                                newList.Add("411200000150205" + "Mfg. Date.");
                                newList.Add("421100001100203" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150235" + "Exp. Date.");
                                newList.Add("421100001100233" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150265" + "Gross Wt.");
                                newList.Add("421100001100263" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150295" + "Net Wt.");
                                newList.Add("421100001100293" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150325" + "Dist. By.");
                                newList.Add("421100001100323" + cDistBy);//Distributtion reference
                                newList.Add("411200000150355" + "Lot No.");
                                newList.Add("421100002500353" + cHartaSize);
                                newList.Add("4d3102501100364" + cLot);
                                newList.Add("401105001100374" + cLot);
                            }
                            else
                            {
                                newList.Add("421100000150065" + PadCenter(cBrand, 25));
                                newList.Add("411200000150115" + "Size.");
                                newList.Add("421200001100113" + cCustSize);
                                newList.Add("411200000150145" + "PO No.");
                                newList.Add("421100001100143" + cPo);
                                newList.Add("411200000150175" + "Ctn. No.");
                                newList.Add("421100001100173" + cCtn);
                                newList.Add("411200000150205" + "Mfg. Date.");
                                newList.Add("421100001100203" + dMfg.ToString("MMM-yyyy"));
                                newList.Add("411200000150235" + "Exp. Date.");
                                newList.Add("421100001100233" + dExp.ToString("MMM-yyyy"));
                                newList.Add("411200000150265" + "Gross Wt.");
                                newList.Add("421100001100263" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150295" + "Net Wt.");
                                newList.Add("421100001100293" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150325" + "Dist. By.");
                                newList.Add("421100001100323" + cDistBy);
                                newList.Add("411200000150355" + "Lot No.");
                                newList.Add("421100002500353" + cHartaSize);
                                newList.Add("4d3102501100364" + cLot);
                                newList.Add("401105001100374" + cLot);
                            }
                            break;
                        #endregion

                        #region Outer Label 176
                        case "176":
                            newList.Add("421100000400050" + "Gross Wt: " + nGross.ToString("0.0 Kg"));
                            newList.Add("421100000400075" + "Nett  Wt: " + nNett.ToString("0.0 Kg"));
                            newList.Add("411100000400100" + cLot);
                            newList.Add("411100001900100" + cCtn);
                            break;
                        #endregion

                        #region Outer Label 50
                        case "50":
                            newList.Add("191100000800015" + PadCenter(cPo, 15));
                            newList.Add("191000000500020" + "Lot No.");
                            newList.Add("1E3102500100020" + "C&G" + Right(cCustOrderLot, 12));
                            newList.Add("191000000600135" + "Ctn.No.");
                            newList.Add("191000000600229" + cCtn);
                            newList.Add("191000000400135" + "Mfg. Date.  " + dMfg.ToString("MMM-yyyy"));
                            newList.Add("191000000200135" + "Exp. Date.  " + dExp.ToString("MMM-yyyy"));
                            break;
                        #endregion

                        #region Outer Label 39
                        case "39":
                            newList.Add("1Y1100000200050" + "LOT");
                            newList.Add("421100001100070" + cPo);
                            newList.Add("411200000200125" + "Gross Wt.");
                            newList.Add("421100001100125" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200175" + "Net Wt.");
                            newList.Add("421100001100175" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200225" + "PO.");
                            newList.Add("421100001100225" + cPo);
                            newList.Add("411200000200275" + "Case No.");
                            newList.Add("421100001100275" + cCtn);
                            newList.Add("1Y1100000200305" + "MFG");
                            newList.Add("421100001100330" + dMfg.ToString("MM-yyyy"));
                            newList.Add("401105000200390" + cLot);
                            break;
                        #endregion

                        #region Outer Label 38
                        case "38":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150140" + "PO No.");
                            newList.Add("421100001100138" + cPo);
                            newList.Add("411200000150180" + "Ctn. No.");
                            newList.Add("421100001100178" + cCtn);
                            newList.Add("411200000150220" + "Gross Wt.");
                            newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150260" + "Net Wt.");
                            newList.Add("421100001100258" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150300" + "Lot No.");
                            newList.Add("421100001100298" + cCustOrderLot);
                            newList.Add("421100002500340" + cHartaSize);
                            newList.Add("4d3105001100371" + cLot);
                            newList.Add("401105001100381" + cLot);
                            break;
                        #endregion

                        #region Outer Label 37
                        case "37":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150135" + "PO No.");
                            newList.Add("421100001100133" + cPo);
                            newList.Add("411200000150170" + "Mfg. Date");
                            newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150205" + "Ctn. No.");
                            newList.Add("421100001100203" + cCtn);
                            newList.Add("411200000150240" + "Gross Wt.");
                            newList.Add("421100001100238" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150275" + "Net Wt.");
                            newList.Add("421100001100273" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150310" + "Lot No.");
                            newList.Add("421100001100308" + cPo);
                            newList.Add("421100002500343" + cHartaSize);
                            newList.Add("4d3105001100374" + cLot);
                            newList.Add("401105001100384" + cLot);
                            break;
                        #endregion

                        #region Outer Label 31 TODO
                        case "31":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cLot;

                            newList.Add("191100002700015" + "EAN N" + Chr(584));//check Chr condition: "EAN N" + Chr(167) + "Data de Fabrica" + +Chr(135) + " "+ Chr(131) + "o/" + Chr(162) + "n:";
                            newList.Add("191100002700240" + cOuterGtn14_Code);
                            newList.Add("191100002400015" + "Quantidade/Cantidad:");
                            newList.Add("191100002400240" + "1.000 unds");
                            newList.Add("191100002100015" + "Data de Fabrica" + Chr(309) + Chr(305) + "o/");
                            newList.Add("191100002000240" + dMfg.ToString("dd/MM/yyyy"));
                            newList.Add("191100001900015" + "Fecha de Fabricaci" + Chr(354) + "n:");
                            newList.Add("191100001600015" + "Validade/Validad:");
                            newList.Add("191100001600240" + dExp.ToString("dd/MM/yyyy"));
                            newList.Add("191100001300015" + "Lote:");
                            newList.Add("191100001300240" + cLot);
                            newList.Add("1e1110000200015" + "C&G" + cGs1);
                            newList.Add("101100000100015" + cReadable);
                            newList.Add("401100000120390" + cPo + " " + cCtn);
                            break;
                        #endregion

                        #region Outer Label 24
                        case "24":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000100135" + "PO No.");
                            newList.Add("4e1100001100155" + "B" + cPo);
                            newList.Add("401100001100165" + cPo);
                            newList.Add("411200000100200" + "Ctn. No.");
                            newList.Add("421100001100198" + cCtn);
                            newList.Add("421100001100245" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100001100300" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100220" + "LOGO");
                            newList.Add("4d3105001100373" + cLot);
                            newList.Add("410005001100388" + cLot);
                            break;
                        #endregion

                        #region Outer Label 23
                        case "23":
                            cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("421100000200125" + "PO No.");
                            newList.Add("4e1100001100145" + "B" + cPo);
                            newList.Add("401100001100155" + cPo);
                            newList.Add("411200000200190" + "Ctn. No.");
                            newList.Add("421100001100188" + cCtn);
                            newList.Add("411200000200220" + "Gross Wt.");
                            newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200255" + "Net Wt.");
                            newList.Add("421100001100253" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200290" + "Mfg. Date.");
                            newList.Add("421100001100288" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100000200325" + "Lot No.");
                            newList.Add("4e1105001100355" + "C&G" + "10" + cGs1);
                            newList.Add("410005000800370" + "(10)" + cGs1);
                            break;
                        #endregion

                        #region Outer Label 19
                        case "19":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000100135" + "PO No.");
                            newList.Add("4e1100001100155" + "B" + cPo);
                            newList.Add("401100001100165" + cPo);
                            newList.Add("411200000100200" + "Ctn. No.");
                            newList.Add("421100001100198" + cCtn);
                            newList.Add("421100001100245" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100001100300" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100220" + "LOGO");
                            newList.Add("4e1105000450373" + "B" + cLot);
                            newList.Add("401105000450383" + cLot);
                            break;
                        #endregion

                        #region Outer Label 4
                        case "4":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150135" + "PO No.");
                            newList.Add("421100001100133" + cPo);
                            newList.Add("411200000150170" + "Mfg. Date");
                            newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150205" + "Exp. Date");
                            newList.Add("421100001100203" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150240" + "Ctn. No.");
                            newList.Add("421100001100238" + cCtn);
                            newList.Add("411200000150275" + "Gross Wt.");
                            newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));//gross wt
                            newList.Add("411200000150310" + "Net Wt.");
                            newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));//nett wt
                            newList.Add("411200000150345" + "Lot No.");
                            newList.Add("421100002500343" + cHartaSize);//internal sz
                            newList.Add("4d3105001100374" + cLot);
                            newList.Add("401105001100384" + cLot);
                            break;
                        #endregion

                        #region Outer Label 10
                        case "10":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150140" + "PO No.");
                            newList.Add("421100001100138" + cPo);
                            newList.Add("411200000150180" + "Exp. Date");
                            newList.Add("421100001100178" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150220" + "Ctn. No.");
                            newList.Add("421100001100218" + cCtn);
                            newList.Add("411200000150260" + "Gross Wt.");
                            newList.Add("421100001100258" + nGross.ToString("0.0 Kg"));//gross wt
                            newList.Add("411200000150300" + "Net Wt.");
                            newList.Add("421100001100298" + nNett.ToString("0.0 Kg"));//nett wt
                            newList.Add("411200000150340" + "Lot No.");
                            newList.Add("421100002500338" + cHartaSize);//internal size
                            newList.Add("4d3105001100369" + cLot);
                            newList.Add("401105001100379" + cLot);
                            break;
                        #endregion

                        #region Outer Label 11
                        case "11":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150140" + "PO No.");
                            newList.Add("421100001100138" + cPo);
                            newList.Add("411200000150180" + "Ctn. No.");
                            newList.Add("421100001100178" + cCtn);
                            newList.Add("411200000150220" + "Gross Wt.");
                            newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));//gross wt
                            newList.Add("411200000150260" + "Net Wt.");
                            newList.Add("421100001100258" + nNett.ToString("0.0 Kg"));//nett wt
                            newList.Add("411200000150300" + "Lot No.");
                            newList.Add("421100001100298" + cCustOrderLot);
                            newList.Add("421100002500340" + cHartaSize); // internal sz
                            newList.Add("4d3105001100371" + cLot);
                            newList.Add("401105001100381" + cLot);
                            break;
                        #endregion

                        #region Outer Label 12
                        case "12":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150140" + "PO No.");
                            newList.Add("421100001100138" + cPo);
                            newList.Add("411200000150180" + "Ctn. No.");
                            newList.Add("421100001100178" + cCtn);
                            newList.Add("411200000150220" + "Gross Wt.");
                            newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));//gross wt
                            newList.Add("411200000150260" + "Net Wt.");
                            newList.Add("421100001100258" + nNett.ToString("0.0 Kg"));//nett wt
                            newList.Add("411200000150300" + "Ref. No.");
                            newList.Add("421100001100298" + cCustRefNo);//Reference
                            newList.Add("411200000150340" + "Lot No.");
                            newList.Add("421100002500338" + cHartaSize);//internal sz
                            newList.Add("4d3105001100369" + cLot);
                            newList.Add("401105001100379" + cLot);
                            break;
                        #endregion

                        #region Outer Label 14
                        case "14":
                            newList.Add("410005000150020" + cPo);
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150160" + "Ctn. No.");
                            newList.Add("421100001100158" + cCtn);
                            newList.Add("411200000150220" + "Gross Wt.");
                            newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));//gross wt
                            newList.Add("411200000150280" + "Net Wt.");
                            newList.Add("421100001100278" + nNett.ToString("0.0 Kg"));//nett wt
                            newList.Add("411200000150340" + "Lot No.");
                            newList.Add("421100002500338" + cHartaSize);//internal size
                            newList.Add("4d3105001100369" + cLot);
                            newList.Add("401105001100379" + cLot);
                            break;
                        #endregion

                        #region Outer Label 20
                        case "20":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("421100000200125" + "PO No.");
                            newList.Add("4e1100001100145" + "B" + cPo); // Check code 128 B Barcode
                            newList.Add("401100001100155" + cPo);
                            newList.Add("411200000200190" + "Ctn. No.");
                            newList.Add("421100001100188" + cCtn);
                            newList.Add("411200000200220" + "Gross Wt.");
                            newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));// Gross weight
                            newList.Add("411200000200255" + "Net Wt.");
                            newList.Add("421100001100253" + nNett.ToString("0.0 Kg"));// Nett weight
                            newList.Add("411200000200290" + "Mfg. Date.");
                            newList.Add("421100001100288" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100000200315" + "Lot No.");
                            newList.Add("4e1105000200373" + "B" + cLot);// Check code 128 B Barcode - follow inner lot
                            newList.Add("401105000200383" + cLot); // - follow inner lot
                            break;
                        #endregion

                        #region Outer Label 21
                        case "21":
                            cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("421100000200145" + "PO No.");
                            newList.Add("4e1100001100165" + "B" + cPo); // Check code 128 B Barcode
                            newList.Add("401100001100175" + cPo);
                            newList.Add("411200000200210" + "Ctn. No.");
                            newList.Add("421100001100208" + cCtn);
                            newList.Add("411200000200245" + "Gross Wt.");
                            newList.Add("421100001100243" + nGross.ToString("0.0 Kg"));//gross wt
                            newList.Add("411200000200280" + "Net Wt.");
                            newList.Add("421100001100278" + nNett.ToString("0.0 Kg"));//nett wt
                            newList.Add("421100000200315" + "Lot No.");
                            newList.Add("4e1105001100345" + "C&G" + "10" + cGs1);//GS1 brcode
                            newList.Add("410005000800360" + "(10)" + cGs1);//Readable brcode
                            break;
                        #endregion

                        #region Outer Label 22
                        case "22":
                            cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000100135" + "PO No.");
                            newList.Add("4e1100001100155" + "B" + cPo); // Check code 128 B Barcode
                            newList.Add("401100001100165" + cPo);
                            newList.Add("411200000100200" + "Ctn. No.");
                            newList.Add("421100001100198" + cCtn);
                            newList.Add("421100001100245" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100001100300" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100220" + "LOGO");
                            newList.Add("4e1105001100373" + "C&G" + "10" + cGs1);//GS1 brcode
                            newList.Add("410005000800388" + "(10)" + cGs1);//Readable brcode
                            break;
                        #endregion

                        #region Outer Label 26
                        case "26":
                            cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                            newList.Add("410005002300020" + cCtn);
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("421100000200145" + "PO No.");
                            newList.Add("4e1100001100165" + "B" + cPo); // Check code 128 B Barcode
                            newList.Add("401100001100175" + cPo);
                            newList.Add("411200000200220" + "Gross Wt.");
                            newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));// Gross weight
                            newList.Add("411200000200255" + "Net Wt.");
                            newList.Add("421100001100253" + nNett.ToString("0.0 Kg")); //Nett weight 
                            newList.Add("421100000200325" + "Lot No.");
                            newList.Add("4e1105001100355" + "C&G" + "10" + cGs1); //GS1 barcode
                            newList.Add("410005000600370" + "(10)" + cGs1);//Readable barcode	
                            break;
                        #endregion

                        #region Outer Label 27
                        case "27":
                            cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                            newList.Add("410005002300020" + cCtn);
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000100155" + "PO No.");
                            newList.Add("4e1100001100175" + "B" + cPo); // Check code 128 B Barcode
                            newList.Add("401100001100185" + cPo);
                            newList.Add("421100001100245" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100001100300" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100220" + "LOGO");
                            newList.Add("4e1105001100373" + "C&G" + "10" + cGs1); //GS1 barcode
                            newList.Add("410005000600388" + "(10)" + cGs1);//Readable barcode	
                            break;
                        #endregion

                        #region Outer Label 28
                        case "28":
                            cGs1 = "1101" + Right(cPline, 2) + Right("00" + dMfg.DayOfYear.ToString(), 3) + dMfg.ToString("yy").Substring(1, 1) + cOuterGtn14_Code;

                            newList.Add("410005002300020" + cCtn);
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("421100000200145" + "PO No.");
                            newList.Add("4e1100001100165" + "B" + cPo);
                            newList.Add("401100001100175" + cPo);
                            newList.Add("411200000200220" + "Gross Wt.");
                            newList.Add("421100001100218" + nGross.ToString("0.0 Kg"));// Gross weight
                            newList.Add("411200000200255" + "Net Wt.");
                            newList.Add("421100001100253" + nNett.ToString("0.0 Kg")); //Nett weight 
                            newList.Add("411200000200290" + "Mfg. Date.");
                            newList.Add("421100001100288" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100000200325" + "Lot No.");
                            newList.Add("4e1105001100355" + "C&G" + "10" + cGs1); //GS1 barcode
                            newList.Add("410005000600370" + "(10)" + cGs1);//Readable barcode	
                            break;
                        #endregion

                        #region Outer Label 29
                        case "29":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150135" + "PO No.");
                            newList.Add("421100001100133" + cPo);
                            newList.Add("411200000150170" + "Mfg. Date.");
                            newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150205" + "Ctn. No.");
                            newList.Add("421100001100203" + cCtn);
                            newList.Add("411200000150240" + "Gross Wt.");
                            newList.Add("421100001100238" + nGross.ToString("0.0 Kg")); // Gross Weight
                            newList.Add("411200000150275" + "Net Wt.");
                            newList.Add("421100001100273" + nNett.ToString("0.0 Kg")); // Nett weight
                            newList.Add("411200000150310" + "B Serial.");
                            newList.Add("421100001100308" + cSerial); //check Serial number prmtr
                            newList.Add("411200000150345" + "Lot No.");
                            newList.Add("421100002500343" + cHartaSize); // harta internal size
                            newList.Add("4d3105001100374" + cLot);
                            newList.Add("401105001100384" + cLot);
                            break;
                        #endregion

                        #region Outer Label 48
                        case "48":
                            newList.Add("411200000150067" + "Lot No.");
                            newList.Add("4d3105001400070" + cLot);
                            newList.Add("401105001600080" + cLot);
                            newList.Add("411200000150117" + "Exp. Date.");
                            newList.Add("421105001450115" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150167" + "Quantity:");
                            newList.Add("421100001450165" + "1000 PCS");
                            newList.Add("411200000150217" + "Gross Wt.");
                            newList.Add("421100001450215" + nGross.ToString("0.0 Kg"));//Gross weight
                            newList.Add("411200000150267" + "Net Wt.");
                            newList.Add("421100001450265" + nNett.ToString("0.0 Kg"));// Nett weight
                            newList.Add("411200000150317" + "Master:");
                            newList.Add("421100001450315" + cCustSize);
                            newList.Add("411200000150353" + "No. of");
                            newList.Add("411200000150377" + "Stowage Unit:");
                            newList.Add("421100001450375" + cCtn);
                            break;
                        #endregion

                        #region Outer Label 64
                        case "64":
                            cGs1 = cCustOrderLot + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1);//StrZero(Month(dDate), 2) + Right(Str(Year(dDate), 4), 1)

                            newList.Add("410005002400030" + cCtn);
                            newList.Add("422300000300090" + PadCenter(cCustSize, 11));
                            newList.Add("411200000200115" + "PO No.");
                            newList.Add("421100001150115" + cPo);
                            newList.Add("411200000200140" + "Mfg. Date.");
                            newList.Add("421100001150140" + dMfg.ToString("MMM-yyyy"));//Fix to prod date
                            newList.Add("411200000200175" + "Lot No.");
                            newList.Add("4e1103001150184" + "C&G" + "10" + cGs1);
                            newList.Add("410005001150199" + "(10)" + cGs1);
                            newList.Add("100000002800125" + cLot);
                            break;
                        #endregion

                        #region Outer Label 68
                        case "68":
                            //newList.Add("410005000200020" + cPo);
                            newList.Add("421200001800075" + PadCenter(cCustSize, 10));
                            newList.Add("411200000200060" + "Ctn. No.");
                            newList.Add("421100001100060" + cCtn);
                            newList.Add("1Y1100000150075" + "MFG");
                            newList.Add("421100001100105" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000200135" + "Cat. No.");
                            newList.Add("421100001100135" + cCustRefNo); //check reference table paramater
                            newList.Add("1Y1100000150150" + "LOT");
                            newList.Add("4d3103001100175" + cLot);
                            newList.Add("410005001100187" + cLot);
                            break;
                        #endregion

                        #region Outer Label 74
                        case "74":
                            newList.Add("410005000200020" + cOrderNum);            //cust order number
                            newList.Add("422400002000090" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200080" + "Ctn. No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("1Y1100000150100" + "MFG");
                            newList.Add("421100001100125" + dMfg.ToString("MM-yyyy"));
                            newList.Add("1Y1100000150150" + "LOT");
                            newList.Add("421105001100168" + cPo);
                            newList.Add("401105001100190" + cLot);
                            break;
                        #endregion

                        #region Outer Label 77
                        case "77":
                            DateTime dExpLastDayOfMonth = new DateTime(dExp.Year, dExp.Month, 1);
                            dExpLastDayOfMonth = dExpLastDayOfMonth.AddMonths(1).AddDays(-1);

                            switch (cItemNumber)
                            {
                                case "FG-P027-001":
                                    switch (cCustSize)
                                    {
                                        case "XS":
                                            cPzn = "3539159";
                                            cHartaRfCode = "9422001";
                                            break;
                                        case "S":
                                            cPzn = "3539171";
                                            cHartaRfCode = "9422011";
                                            break;
                                        case "M":
                                            cPzn = "3539188";
                                            cHartaRfCode = "9422021";
                                            break;
                                        case "L":
                                            cPzn = "3539194";
                                            cHartaRfCode = "9422031";
                                            break;
                                        default: //XL
                                            cPzn = "3539202";
                                            cHartaRfCode = "9422041";
                                            break;
                                    }
                                    break;

                                case "FG-P027-002":
                                    switch (cCustSize)
                                    {
                                        case "XS":
                                            cPzn = "3538409";
                                            cHartaRfCode = "9421951";
                                            break;
                                        case "S":
                                            cPzn = "3538415";
                                            cHartaRfCode = "9421961";
                                            break;
                                        case "M":
                                            cPzn = "3538421";
                                            cHartaRfCode = "9421971";
                                            break;
                                        case "L":
                                            cPzn = "3538438";
                                            cHartaRfCode = "9421981";
                                            break;
                                        default: //XL
                                            cPzn = "3538444";
                                            cHartaRfCode = "9421991";
                                            break;
                                    }
                                    break;

                                case "FG-P027-003":
                                    switch (cCustSize)
                                    {
                                        case "XS":
                                            cPzn = "3539343";
                                            cHartaRfCode = "9421952";
                                            break;
                                        case "S":
                                            cPzn = "3539455";
                                            cHartaRfCode = "9421962";
                                            break;
                                        case "M":
                                            cPzn = "3539509";
                                            cHartaRfCode = "9421972";
                                            break;
                                        case "L":
                                            cPzn = "3539722";
                                            cHartaRfCode = "9421982";
                                            break;
                                        default: //XL
                                            cPzn = "3539774";
                                            cHartaRfCode = "9421992";
                                            break;
                                    }
                                    break;

                                default: //not found. Example new brand
                                    cPzn = "NOT SET";
                                    cHartaRfCode = "NOT SET";
                                    break;
                            }

                            newList.Add("491100100200035" + "EAN " + cOuterGtn14_Code);
                            newList.Add("491100102300035" + "REF. " + cHartaRfCode);
                            newList.Add("1Y1100000200055" + "LOT");
                            newList.Add("491100200600078" + cCustOrderLot.Substring(0, 2));
                            newList.Add("491100400900080" + cCustOrderLot.Substring(2, 2));
                            newList.Add("491100201250078" + cCustOrderLot.Substring(4, 5));
                            newList.Add("1Y1100002200050" + "EXP");
                            newList.Add("491100202600078" + dExp.ToString("yyyy-MM"));
                            newList.Add("4e1110000200205" + "C&G" + "010" + cOuterGtn14_Code);
                            newList.Add("401100000350215" + "(01)0" + cOuterGtn14_Code);
                            newList.Add("491100202000130" + "SIZE:");
                            newList.Add("491100502700133" + cCustSize);
                            newList.Add("491100202000175" + "PZN:");
                            newList.Add("491100202500175" + "10 x " + cPzn);
                            newList.Add("491100202000205" + "10 x " + cCustRefNo);
                            newList.Add("4e1110000200330" + "C&G" + "92" + cHartaRfCode + "17" + dExpLastDayOfMonth.ToString("yyMMdd") + "10" + cCustOrderLot);//check End of month
                            newList.Add("401100000200340" + "(92)" + cHartaRfCode + "(17)" + dExpLastDayOfMonth.ToString("yyMMdd") + "(10)" + cCustOrderLot);//check End of month
                            newList.Add("301100004000340" + cLot + "  " + cCtn);
                            // newList.Add("Q0002"); 
                            break;
                        #endregion

                        #region Outer Label 78
                        case "78":
                            newList.Add("411205000200040" + "Lot No.");
                            newList.Add("421105001500040" + cPo);
                            newList.Add("411205000200080" + "Batch No.");
                            newList.Add("421105001500080" + cLot);
                            newList.Add("1Y1100000200100" + "MFG");
                            newList.Add("400000000600105" + "Manufacturing");
                            newList.Add("400000000600113" + "date:");
                            newList.Add("400000000600123" + "Date");
                            newList.Add("400000000600131" + "de fabrication:");
                            newList.Add("421105001500130" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000200150" + "EXP");
                            newList.Add("400000000600157" + "Expiration");
                            newList.Add("400000000600165" + "date:");
                            newList.Add("400000000600175" + "Date");
                            newList.Add("400000000600183" + "d' expiration:");
                            newList.Add("421105001500182" + "N/A");
                            newList.Add("400005002600190" + cCtn);
                            break;
                        #endregion

                        #region Outer Label 81
                        case "81":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150135" + "PO No.");
                            newList.Add("421100001100133" + cPo);
                            newList.Add("411200000150170" + "Mfg. Date");
                            newList.Add("421100001100168" + dMfg.ToString("yyyy-MM"));
                            newList.Add("411200000150205" + "Exp. Date");
                            newList.Add("421100001100203" + dExp.ToString("yyyy-MM"));
                            newList.Add("411200000150240" + "Ctn. No.");
                            newList.Add("421100001100238" + cCtn);
                            newList.Add("411200000150275" + "Gross Wt.");
                            newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150310" + "Net Wt.");
                            newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150345" + "Lot No.");
                            newList.Add("421105001100345" + cLot + " " + cHartaSize);
                            break;
                        #endregion

                        #region Outer Label 84
                        case "84":
                            newList.Add("411200000200050" + "PO No.");
                            newList.Add("421100001000046" + cCustOrderLot.Substring(0, 4));
                            newList.Add("411200000200080" + "Lot No.");
                            newList.Add("421100001000076" + cLot);
                            newList.Add("411200000200110" + "Ctn. No.");
                            newList.Add("421100001000106" + cCtn);
                            newList.Add("1Y1100000200118" + "MFG");
                            newList.Add("421100001000140" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000200158" + "EXP");
                            newList.Add("422300002200140" + PadCenter(cCustSize, 5));
                            newList.Add("421100001000180" + dExp.ToString("MMM-yyyy"));
                            break;
                        #endregion

                        #region Outer Label 88
                        case "88":
                            newList.Add("421100000150060" + "Lot No.     :");
                            newList.Add("421100001800060" + cCustOrderLot);
                            newList.Add("421100000150100" + "Use Before. :");
                            newList.Add("421100001800100" + dExp.ToString("yyyy-MM"));
                            newList.Add("421100000150140" + "Case No.    :");
                            newList.Add("421100001800140" + Right(cCtn, 4));
                            newList.Add("410000001800185" + cLot);
                            break;
                        #endregion

                        #region Outer Label 95
                        case "95":
                            newList.Add("191100000830009" + PadCenter(cPo, 15));
                            newList.Add("191000000670135" + "Ctn.No.");
                            newList.Add("191000000670220" + cCtn);
                            newList.Add("191000000470135" + "Mfg. Date.");
                            newList.Add("191000000470220" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("191000000270135" + "Exp. Date.");
                            newList.Add("191000000270220" + dExp.ToString("MMM-yyyy"));
                            newList.Add("191000000200009" + "Lot No.");
                            newList.Add("110000000080009" + cLot);
                            break;
                        #endregion

                        #region Outer Label 126
                        case "126":
                            cGs1 = "02" + cProdRefNo + "15" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot;
                            cReadable = "(02)" + cProdRefNo + "(15)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot;

                            newList.Add("411200000200130" + "Ctn. No.");
                            newList.Add("421100001000130" + cCtn);
                            newList.Add("422400001500090" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150135" + "EXP");
                            newList.Add("421100001000160" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150175" + "LOT");
                            newList.Add("421105001000190" + cCustOrderLot);
                            newList.Add("410005000150215" + "GS1 code:");
                            newList.Add("4e1105000150270" + "C&G" + cGs1); //GS1 barcode - check paramater
                            newList.Add("400000000150280" + cReadable); //Readable barcode - check paramater

                            break;
                        #endregion

                        #region Outer Label 129
                        case "129":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yy") + "00" + "10" + cLot;
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                          + " " + cOuterGtn14_Code.Substring(13, 1) + "(17) " + dExp.ToString("yy") + "00" + "(10) " + cLot;

                            newList.Add("211100003580140" + cLot.Substring(0, 9)); //Check substr;
                            newList.Add("211100002200140" + dMfg.ToString("yyyy-MM"));
                            newList.Add("211100001150140" + dExp.ToString("yyyy-MM"));
                            newList.Add("201100003690086" + cReadable);//Readable barcode - check paramater
                            newList.Add("2e1105003690034C&G" + cGs1);//GS1 barcode - check paramater
                                                                     // newList.Add("Q0002"); 
                            break;
                        #endregion

                        #region Outer Label 135
                        case "135":
                            newList.Add("221100002800070" + "Carton No: ");
                            newList.Add("221100001600070" + Right(cCtn, 4) + "/" + cTotalCarton); // xxxx/yyyy - xxxx : running carton , yyyy : total carton per 1 SIZE
                            newList.Add("221100000580050" + PadCenter(cCustSize, 5));
                            newList.Add("211100001600038" + cLot);
                            break;
                        #endregion

                        #region Outer Label 138
                        case "138":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075" + "Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150114" + "EXP");
                            newList.Add("421100001000140" + dExp.ToString("MMM-yyyy"));//check default date format
                            newList.Add("1Y1100000150157" + "LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            break;
                        #endregion

                        #region Outer Label 142
                        case "142":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                            newList.Add("211100003690076" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100002190076" + dMfg.ToString("yyyy-MM"));
                            newList.Add("211100001020076" + dExp.ToString("yyyy-MM"));
                            newList.Add("201100003690063" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1105003690011C&G" + cGs1);     //GS1 barcode - check paramater
                                                                          //newList.Add("Q0002");
                            break;
                        #endregion

                        #region Outer Label 143
                        case "143":
                            newList.Add("1Y1100000150015" + "MFG");
                            newList.Add("421100001000040" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150080" + "EXP");
                            newList.Add("421100001000105" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150155" + "LOT");
                            newList.Add("4e1105000100230" + "C&G" + "100000000000" + cPo.Substring(0, 10) + "21000000000000");  //check C&G and Substr
                            newList.Add("410005000150245" + "100000000000" + cPo.Substring(0, 10) + "21000000000000");          //check Substr      
                            newList.Add("410005002600280" + cLot);
                            break;
                        #endregion

                        #region Outer Label 144, 127
                        case "144":
                        case "127":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cLot.Substring(0, 9);
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                  + " " + cOuterGtn14_Code.Substring(13, 1) + "(17) " + dExp.ToString("yyMM") + "00" + "(10) " + cLot.Substring(0, 9);

                            newList.Add("211100003690076" + cLot.Substring(0, 9)); //Check substr;
                            newList.Add("211100002190076" + dMfg.ToString("yyyy-MM"));
                            newList.Add("211100001020076" + dExp.ToString("yyyy-MM"));
                            newList.Add("201100003690063" + cReadable); //Readable barcode - check paramater
                            newList.Add("2e1105003690011C&G" + cGs1); //GS1 barcode - check paramater
                                                                      //newList.Add("Q0002");
                            break;
                        #endregion

                        #region Outer Label 151
                        case "151":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("421200001800090" + PadCenter(cCustSize, 10));
                            newList.Add("411200000200080" + "Ctn.No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("1Y1100000150100" + "MFG");
                            newList.Add("421100001100125" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150150" + "LOT");
                            newList.Add("4d3103001100175" + cLot);
                            newList.Add("410005001100187" + cLot);
                            break;
                        #endregion

                        #region Outer Label 156
                        case "156":
                            newList.Add("410005000150025" + cPo);
                            newList.Add("1Y1100000150040" + "LOT_T_V");
                            newList.Add("421100001000062" + cCustOrderLot); //product code by size - check parameter TODO cOuterGtn14_Code or cPline
                            newList.Add("422300002300138" + cCustSize);
                            newList.Add("1Y1100000150080" + "MFG_T_V");
                            newList.Add("421100001000110" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150173" + "Case.");
                            newList.Add("421100001000170" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;
                        #endregion

                        #region Outer Label 157
                        case "157":
                            newList.Add("410005000150020" + cPo);
                            newList.Add("1Y1100000150027" + "LOT_T_V");
                            newList.Add("421100001000051" + cCustOrderLot); //product code by size
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150065" + "MFG_T_V");
                            newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150122" + "EXP");
                            newList.Add("421100001000143" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150183" + "Case.");
                            newList.Add("421100001000179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;
                        #endregion

                        #region Outer Label 161
                        case "161":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cLot;

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200060" + "Ctn.No.");
                            newList.Add("421100001000060" + cCtn);
                            newList.Add("1Y2100000150070" + "LOT_UTSU");
                            newList.Add("421100001000092" + cLot);
                            newList.Add("1Y2100000150102" + "EXP_UTSU");
                            newList.Add("421105001000120" + dExp.ToString("yyyy.MM"));
                            newList.Add("4e1105000150180C&G" + cGs1); //GS1 barcode - check paramater
                            newList.Add("400000000150190" + cReadable); //Readable barcode - check paramater"
                            break;
                        #endregion

                        #region Outer Label 162
                        case "162":
                            newList.Add("421100100150035" + "BATCH");
                            newList.Add("421100001000035" + cLot);
                            newList.Add("1Y1100000150045" + "MFG");
                            newList.Add("421100001000070" + dMfg.ToString("MM-yyyy"));
                            newList.Add("1Y1100000150085" + "EXP");
                            newList.Add("421100001000110" + dExp.ToString("MM-yyyy"));
                            newList.Add("1Y1100000150130" + "LOT");
                            newList.Add("421100001000150" + cCustOrderLot);//double check cust lot parameter
                            newList.Add("421100000150185" + "CTN.");
                            newList.Add("421100001000185" + cCtn);
                            break;
                        #endregion

                        #region Outer Label 164
                        case "164":
                            newList.Add("420000000200030" + cProdRefNo); // change from cCustSize
                            newList.Add("411100000200048" + "Greenpath Studios");
                            newList.Add("411100000200063" + "CleanPro Powder - Free");
                            newList.Add("411100000200078" + "Blue Nitrile Gloves");
                            newList.Add("411100000200093" + "Qty: 10 pk.(100ea / pk)");
                            newList.Add("411100000200110" + "LOT: ");
                            newList.Add("411100000600110" + cLot);
                            newList.Add("411100001970110" + "CTN: ");
                            newList.Add("411100002370110" + cCtn);
                            newList.Add("4X0000000400116" + "L011222");
                            newList.Add("4X0000000400127" + "L040012");
                            newList.Add("410005000870190" + cOuterGtn14_Code); //Product code
                            newList.Add("4d4104000700167" + cOuterGtn14_Code); //Product code
                            newList.Add("4X0000000400167" + "L011222");
                            newList.Add("4X0000002500127" + "L040012");
                            break;
                        #endregion

                        #region Outer Label 165
                        case "165":
                            newList.Add("421100000200045" + cPo);
                            newList.Add("421100000200085" + cLot);
                            newList.Add("421100000200125" + dMfg.ToString("yyyy-MM"));
                            newList.Add("421100000200165" + dExp.ToString("yyyy-MM"));
                            newList.Add("411100001500165" + "CTN: " + cCtn);
                            break;
                        #endregion

                        /* --------------------------------------- HSB Floor Upgrade Code End  ---------------------------------------------------------- */

                        #region Outer Label 159
                        case "159":
                            newList.Add("421100000150060" + "Lot No.  :");
                            newList.Add("421100001600060" + cCustOrderLot);
                            newList.Add("421100000150100" + "Use By   :");
                            newList.Add("421100001600100" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("421100000150140" + "Case No. :");
                            newList.Add("421100001600140" + Right(cCtn, 4));
                            newList.Add("410000001800185" + cLot);
                            break;
                        #endregion

                        #region Outer Label 150
                        case "150":
                            newList.Add("111200000650015" + "Lot No.  :");
                            newList.Add("111200000650105" + cCustOrderLot);
                            newList.Add("111200000380015" + "Mfg Date : ");
                            newList.Add("111200000380105" + dMfg.ToString("yyyy-MM"));
                            newList.Add("111200000100015" + "Case No. :");
                            newList.Add("111200000100105" + cCtn);
                            newList.Add("111100000050175" + cLot);
                            break;
                        #endregion

                        #region Outer Label 141
                        case "141":
                            newList.Add("421100000150060" + "Lot No.     :");
                            newList.Add("421100001800060" + cCustOrderLot);
                            newList.Add("421100000150100" + "Mfg Date.   :");
                            newList.Add("421100001800100" + dMfg.ToString("yyyy-MM"));
                            newList.Add("421100000150140" + "Case No.    :");
                            newList.Add("421100001800140" + Right(cCtn, 4));
                            newList.Add("410000001800185" + cLot);
                            break;
                        #endregion

                        #region Outer Label 175
                        case "175":
                            newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                            newList.Add("111100000800240" + cCtn);
                            newList.Add("121100000550020" + "LOT NO.:");
                            newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                            newList.Add("141100000100020" + cLot);
                            // newList.Add("Q0004");
                            break;
                        #endregion

                        #region Outer Label 174
                        case "174":
                            newList.Add("421100000150030" + "LOT NO:");
                            newList.Add("421100001050030" + cCustOrderLot);
                            newList.Add("1Y1100000200040" + "MFG");
                            newList.Add("421100001050065" + dMfg.ToString("yyyy") + "-" + dMfg.ToString("MM") + "-" + dMfg.ToString("dd"));
                            newList.Add("431100002200070" + PadCenter(cCustSize, 5));
                            newList.Add("411100001050090" + cCtn);
                            newList.Add("411100001700090" + cLot);
                            break;
                        #endregion

                        #region Outer Label 173
                        case "173":
                            switch (cCustSize.Trim())
                            {
                                case "XS":
                                    cCustSizeFull = "X-SMALL";
                                    cCustRefNo = "313041060";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410603";
                                    cCustIntrnlPrd = "827388";
                                    break;
                                case "S":
                                    cCustSizeFull = "SMALL";
                                    cCustRefNo = "313041065";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410658";
                                    cCustIntrnlPrd = "827389";
                                    break;
                                case "M":
                                    cCustSizeFull = "MEDIUM";
                                    cCustRefNo = "313041070";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410702";
                                    cCustIntrnlPrd = "827390";
                                    break;
                                case "L":
                                    cCustSizeFull = "LARGE";
                                    cCustRefNo = "313041075";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410757";
                                    cCustIntrnlPrd = "827391";
                                    break;
                                case "XL":
                                    cCustSizeFull = "X-LARGE";
                                    cCustRefNo = "313041080";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410801";
                                    cCustIntrnlPrd = "827392";
                                    break;
                            }

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                            newList.Add("421100100150035" + "PRODUCT:MICRO-TOUCH BLUE NITRILE");
                            newList.Add("421100000150075" + "SIZE:");
                            newList.Add("421100000800075" + cCustSizeFull);
                            newList.Add("421100001850075" + "SHIPPER");
                            newList.Add("421100002720075" + "BOX");
                            newList.Add("421100003120075" + "OF");
                            newList.Add("421100003400075" + cPackSize);
                            newList.Add("421100000150115" + "REF");
                            newList.Add("421100000800115" + cCustRefNo);
                            newList.Add("1Y1100002200090" + "MFG");
                            newList.Add("421100002700115" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("1Y1100000150135" + "LOT");
                            newList.Add("421100000800155" + cCustOrderLot);
                            newList.Add("1Y1100002200130" + "EXP");
                            newList.Add("421100002700155" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("411100000150178" + "INTERNAL PRODUCT ID:" + cCustIntrnlPrd);
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250" + "C&G" + cGs1);
                            newList.Add("411100000150290" + "CTN#: " + cCtn);
                            newList.Add("411100001800290" + "MFG REF: " + cLot);
                            break;
                        #endregion

                        #region Outer Label 172
                        case "172":

                            switch (cCustSize.Trim())
                            {
                                case "L":
                                    cCustSizeFull = "LARGE";
                                    cCustRefNo = "6034303";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210752";
                                    cCustIntrnlPrd = "826402";
                                    break;
                                case "M":
                                    cCustSizeFull = "MEDIUM";
                                    cCustRefNo = "6034302";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210707";
                                    cCustIntrnlPrd = "826401";
                                    break;
                                case "S":
                                    cCustSizeFull = "SMALL";
                                    cCustRefNo = "6034301";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210653";
                                    cCustIntrnlPrd = "826400";
                                    break;
                                case "XL":
                                    cCustSizeFull = "X-LARGE";
                                    cCustRefNo = "6034304";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210806";
                                    cCustIntrnlPrd = "826403";
                                    break;
                                case "XS":
                                    cCustSizeFull = "X-SMALL";
                                    cCustRefNo = "6034300";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210608";
                                    cCustIntrnlPrd = "826399";
                                    break;
                                case "XXL":
                                    cCustSizeFull = "XX-LARGE";
                                    cCustRefNo = " 6034305";
                                    cPackSize = "1800";
                                    cOuterGtn14_Code = "30884792210851";
                                    cCustIntrnlPrd = "826404";
                                    break;
                            }

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                            newList.Add("421100100150035" + "PRODUCT : MICRO-TOUCH NITRILE");
                            newList.Add("421100000150075" + "SIZE:");
                            newList.Add("421100000800075" + cCustSizeFull);
                            newList.Add("421100001850075" + "SHIPPER");
                            newList.Add("421100002720075" + "BOX");
                            newList.Add("421100003120075" + "OF");
                            newList.Add("421100003400075" + cPackSize);
                            newList.Add("421100000150115" + "REF");
                            newList.Add("421100000800115" + cCustRefNo);
                            newList.Add("1Y1100002200090" + "MFG");
                            newList.Add("421100002700115" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("1Y1100000150135" + "LOT");
                            newList.Add("421100000800155" + cCustOrderLot);
                            newList.Add("1Y1100002200130" + "EXP");
                            newList.Add("421100002700155" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("411100000150178" + "INTERNAL PRODUCT ID:" + cCustIntrnlPrd);
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250" + "C&G" + cGs1);
                            newList.Add("411100000150290" + "CTN#: " + cCtn);
                            newList.Add("411100001800290" + "MFG REF: " + cLot);
                            break;
                        #endregion

                        #region Outer Label 170
                        case "170":
                            cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            newList.Add("411200000200045PO No.");
                            newList.Add("421100001000045" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000107" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("422300001850140" + PadCenter(cCustSize, 5));
                            newList.Add("421100001000140" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4e1103001000175C&G" + cGs1);
                            newList.Add("410005001000190" + cReadable);
                            newList.Add("100000002800115" + cLot);
                            break;
                        #endregion

                        #region Outer Label 169 & 183
                        case "169":
                        case "183":
                            cGs1 = "10" + cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            cReadable = "(10)" + cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            newList.Add("411200000200060" + "Lot No.");
                            newList.Add("4e1106001150080" + "C&G" + cGs1);
                            newList.Add("410005001150095" + cReadable);
                            newList.Add("411200000200120" + "Mfg. Date.");
                            newList.Add("421100001150120" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("411200000200150" + "Case No");
                            newList.Add("421100001150148" + cCtn);
                            newList.Add("411100000200173" + "    Ref.");
                            newList.Add("411100001150173" + cPo);
                            newList.Add("400000001150186" + cLot);
                            newList.Add("422200001200190" + PadCenter(cCustSize, 11));
                            break;
                        #endregion

                        #region Outer Label 168
                        case "168":
                            cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "30" + cCustRefNo + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(30)" + cCustRefNo + "(10)" + cCustOrderLot;

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200055Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060MFG");
                            newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150100LOT");
                            newList.Add("421105001000115" + cCustOrderLot);
                            newList.Add("4e1105000150180C&G" + cGs1);
                            newList.Add("400000000080190" + cReadable);
                            break;
                        #endregion

                        #region Set 171 - 25/05/2017
                        case "171":
                            newList.Add("410005000200020" + cPo.Trim());
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100001000051" + cCustOrderLot); //Lot By Size
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100001000179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            // newList.Add("Q0002");  // to include 2 printing in 1 time
                            break;
                        #endregion 171 

                        #region Outer Label 167
                        case "167":
                            newList.Add("411200000200037" + "Lot No.  :");
                            newList.Add("411200001200037" + cLot);
                            newList.Add("411200000200067" + "Exp Date : ");
                            newList.Add("411200001200067" + dExp.ToString("MMM yyyy"));
                            newList.Add("411200000200098" + "Ctn No.  :");
                            newList.Add("411200001200098" + cCtn);
                            newList.Add("431100002200085" + cHartaSize);
                            break;
                        #endregion

                        #region Set 166
                        case "166":
                            switch (cCustSize.Trim())
                            {
                                case "XS":
                                    cCustSizeFull = "X-SMALL";
                                    cCustRefNo = "313041060";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410603";
                                    cCustIntrnlPrd = "827388";
                                    break;
                                case "S":
                                    cCustSizeFull = "SMALL";
                                    cCustRefNo = "313041065";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410658";
                                    cCustIntrnlPrd = "827389";
                                    break;
                                case "M":
                                    cCustSizeFull = "MEDIUM";
                                    cCustRefNo = "313041070";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410702";
                                    cCustIntrnlPrd = "827390";
                                    break;
                                case "L":
                                    cCustSizeFull = "LARGE";
                                    cCustRefNo = "313041075";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410757";
                                    cCustIntrnlPrd = "827391";
                                    break;
                                case "XL":
                                    cCustSizeFull = "X-LARGE";
                                    cCustRefNo = "313041080";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410801";
                                    cCustIntrnlPrd = "827392";
                                    break;
                            }

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                            newList.Add("421100100150035" + "PRODUCT:MICRO-TOUCH BLUE NITRILE");
                            newList.Add("421100000150075" + "SIZE:");
                            newList.Add("421100000800075" + cCustSizeFull);
                            newList.Add("421100001850075" + "SHIPPER");
                            newList.Add("421100002720075" + "BOX");
                            newList.Add("421100003120075" + "OF");
                            newList.Add("421100003400075" + cPackSize);
                            newList.Add("421100000150115" + "REF");
                            newList.Add("421100000800115" + cCustRefNo);
                            newList.Add("1Y1100002200090" + "MFG");
                            newList.Add("421100002700115" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150135" + "LOT");
                            newList.Add("421100000800155" + cCustOrderLot);
                            newList.Add("1Y1100002200135" + "EXP");
                            newList.Add("421100002700155" + dExp.ToString("yyyy-MM"));
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250" + "C&G" + cGs1);
                            newList.Add("411100000150290" + "CTN#: " + cCtn);
                            newList.Add("411100001800290" + "MFG REF: " + cLot);
                            break;

                        #endregion

                        case "163":
                            newList.Add("411100000250030Batch:");
                            newList.Add("411100000250047" + cLot);
                            newList.Add("1Y1100000250055MFG");
                            newList.Add("411100000650080" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411100001600030CTN.:");
                            newList.Add("411100001950030" + cCtn);
                            newList.Add("4d3103001600070" + cCustOrderLot);
                            newList.Add("410005001600085" + cCustOrderLot);
                            break;

                        case "160":
                            switch (cCustSize.Trim())
                            {
                                case "L":
                                    cCustSizeFull = "LARGE";
                                    cCustRefNo = "6034303";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210752";
                                    cCustIntrnlPrd = "826402";
                                    break;
                                case "M":
                                    cCustSizeFull = "MEDIUM";
                                    cCustRefNo = "6034302";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210707";
                                    cCustIntrnlPrd = "826401";
                                    break;
                                case "S":
                                    cCustSizeFull = "SMALL";
                                    cCustRefNo = "6034301";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210653";
                                    cCustIntrnlPrd = "826400";
                                    break;
                                case "XL":
                                    cCustSizeFull = "X-LARGE";
                                    cCustRefNo = "6034304";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210806";
                                    cCustIntrnlPrd = "826403";
                                    break;
                                case "XS":
                                    cCustSizeFull = "X-SMALL";
                                    cCustRefNo = "6034300";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210608";
                                    cCustIntrnlPrd = "826399";
                                    break;
                                case "XXL":
                                    cCustSizeFull = "XX-LARGE";
                                    cCustRefNo = "6034305";
                                    cPackSize = "1800";
                                    cOuterGtn14_Code = "30884792210851";
                                    cCustIntrnlPrd = "826404";
                                    break;
                            }
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                            newList.Add("421100100150035PRODUCT : MICRO-TOUCH NITRILE");
                            newList.Add("421100000150075SIZE:");
                            newList.Add("421100000800075" + cCustSizeFull);
                            newList.Add("421100001850075SHIPPER");
                            newList.Add("421100002720075BOX");
                            newList.Add("421100003120075OF");
                            newList.Add("421100003400075" + cPackSize);
                            newList.Add("421100000150115REF");
                            newList.Add("421100000800115" + cCustRefNo);
                            newList.Add("1Y1100002200090MFG");
                            newList.Add("421100002700115" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150135LOT");
                            newList.Add("421100000800155" + cCustOrderLot);
                            newList.Add("1Y1100002200135EXP");
                            newList.Add("421100002700155" + dExp.ToString("yyyy-MM"));
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250C&G" + cGs1);
                            newList.Add("411100000150290CTN#: " + cCtn);
                            newList.Add("411100001800290MFG REF: " + cLot);
                            break;

                        case "130":
                            newList.Add("411100000150043Ctn. No.: " + cCtn);
                            newList.Add("411100000150058Gross Weight: " + nGross.ToString("0.0 Kg"));
                            newList.Add("411100000150075Net Weight: " + nNett.ToString("0.0 Kg"));
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150080MFG");
                            newList.Add("421100001000108" + dMfg.ToString("MMM yyyy"));
                            newList.Add("1Y1100000150116EXP");
                            newList.Add("421100001000141" + dExp.ToString("MMM yyyy"));
                            newList.Add("1Y1100000150156LOT");
                            newList.Add("4d3103001000178" + cLot);
                            newList.Add("410005001000193" + cLot);
                            break;

                        case "158":
                            //dExp = dMfg.AddDays(-1).AddMonths(nExpMonth);
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002400145" + cCustSize);
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000112" + dMfg.ToString("dd-MMM-yyyy"));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("421100001000145" + dExp.ToString("dd-MMM-yyyy"));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            break;

                        case "155":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("2e2105013550105C&G" + cGs1);
                            newList.Add("200000013550090" + cReadable);
                            newList.Add("242200009900100" + PadCenter(cCustSize, 3));
                            newList.Add("2X1110007100080" + "L001665");
                            newList.Add("201100013750070" + "PO No");
                            newList.Add("221100013250054" + cPo);
                            newList.Add("201100011550070" + "Mfg Date");
                            newList.Add("221100010950054" + dEtd.ToString("yyyy-MM")); //Shipment ETD date
                            newList.Add("201100009900070" + "Gross Wt.");
                            newList.Add("221100009300054" + nGross.ToString("0.0 Kgs"));
                            newList.Add("201100008250070" + "Ctn No");
                            newList.Add("291100007800054" + cCtn);
                            newList.Add("200000008250020" + cLot);
                            newList.Add("2X1110007100050" + "L001665");
                            newList.Add("201100013750040" + "Lot No");
                            newList.Add("221100013250024" + cCustOrderLot);
                            newList.Add("201100011550040" + "Exp Date");
                            newList.Add("221100010950024" + dExp.ToString("yyyy-MM"));
                            newList.Add("201100009900040" + "Nett Wt.");
                            newList.Add("221100009300024" + nNett.ToString("0.0 Kgs"));
                            newList.Add("2X1110006950010" + "L200001");
                            newList.Add("242200005050100" + PadCenter(cCustSize, 3));
                            newList.Add("2e2105003600105C&G" + cGs1);
                            newList.Add("200000003600090" + cReadable);
                            newList.Add("2X1110000100080" + "L001665");
                            newList.Add("201100006750070" + "PO No");
                            newList.Add("221100006250054" + cPo);
                            newList.Add("201100004550070" + "Mfg Date");
                            newList.Add("221100003950054" + dEtd.ToString("yyyy-MM"));
                            newList.Add("201100002900070" + "Gross Wt.");
                            newList.Add("221100002300054" + nGross.ToString("0.0 Kgs"));
                            newList.Add("201100001250070" + "Ctn No");
                            newList.Add("291100000800054" + cCtn);
                            newList.Add("200000001250020" + cLot);
                            newList.Add("2X1110000100050" + "L001665");
                            newList.Add("201100006750040" + "Lot No");
                            newList.Add("221100006250024" + cCustOrderLot);
                            newList.Add("201100004550040" + "Exp Date");
                            newList.Add("221100003950024" + dExp.ToString("yyyy-MM"));
                            newList.Add("201100002900040" + "Nett Wt.");
                            newList.Add("221100002300024" + nNett.ToString("0.0 Kgs"));

                            break;

                        case "154":
                            newList.Add("421100002450100" + dExp.ToString("yyyy-MM"));
                            newList.Add("411100002000350" + cPo);
                            newList.Add("411100003750350" + "LOT " + cLot);
                            newList.Add("411100006100350" + "CTN# " + cCtn);
                            break;

                        case "153":
                            newList.Add("191000000500020" + "Lot No.");
                            newList.Add("191000000500100" + cCustOrderLot);
                            newList.Add("101100000300100" + cCtn + "   " + cLot);
                            break;

                        case "146":
                            newList.Add("421100001500100" + dExp.ToString("yyyy-MM"));
                            newList.Add("411100000200350" + cPo);
                            newList.Add("411100001300350" + "LOT " + cLot);
                            newList.Add("411100003000350" + "CTN# " + cCtn);
                            break;

                        case "105":
                            newList.Add("111200000600020" + "LOT NO.:");
                            newList.Add("121100000600110" + cLot);
                            newList.Add("111100000100240" + cCtn);
                            break;

                        case "152":
                            newList.Add("411100100150025Lot No.");
                            newList.Add("411100001400025" + cCustOrderLot);
                            newList.Add("411100000150045Gross Weight");
                            newList.Add("411100001400045" + nGross.ToString("0.0 Kgs"));
                            newList.Add("411100000150070Nett Weight");
                            newList.Add("411100001400070" + nNett.ToString("0.0 Kgs"));
                            newList.Add("411100000150095PO. No.");
                            newList.Add("411100001400095" + cPo);
                            newList.Add("411100000150120Ctn. No.");
                            newList.Add("411100001400120" + cCtn);
                            newList.Add("411100000150145Mfg. Date");
                            newList.Add("411100001400145" + dMfg.ToString("yyyy-MM"));
                            newList.Add("411100000150170Exp. Date");
                            newList.Add("411100001400170" + dExp.ToString("yyyy-MM"));
                            newList.Add("410000001800187" + cLot);
                            break;

                        case "998":
                            newList.Add("422200000800050" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000200060LOT");
                            newList.Add("421105000800080" + cLot);
                            newList.Add("1Y1100000200085MFG");
                            newList.Add("421100000800110" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000200119EXP");
                            newList.Add("421100000800140" + dExp.ToString("MMM-yyyy"));
                            newList.Add("4d3103000800180" + c2ndLocation.Trim() + dMfg.ToString("yyMMddHHmmss"));
                            newList.Add("410005000800195" + c2ndLocation.Trim() + dMfg.ToString("yyMMddHHmmss"));
                            newList.Add("300000002850185" + "Ctn: " + cCtn);
                            break;

                        case "149":
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("411200000800053" + cCustOrderLot);
                            newList.Add("422300001950138" + PadCenter(cCustSize, 5));
                            newList.Add("421100000150095PO: ");
                            newList.Add("411200000800100" + cPo);
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("411200000800143" + dExp.ToString("yyyy-MM"));
                            newList.Add("411200000150183Case.");
                            newList.Add("411200000800183" + cCtn);
                            newList.Add("410005001700188" + cLot);
                            break;

                        case "148":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100001000051" + cCustOrderLot);
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150145Case.");
                            newList.Add("421100001000141" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;

                        case "79":
                            newList.Add("411200000200058Ctn. No.");
                            newList.Add("421100001000058" + cCtn);
                            newList.Add("422300002000108" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150070EXP");
                            newList.Add("421100001000095" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150115LOT");
                            newList.Add("421100001000135" + cCustOrderLot);
                            newList.Add("4d3103001000180" + cLot);
                            newList.Add("410005001000195" + cLot);
                            break;

                        case "136":
                            newList.Add("1Y1100000650020LOT_H");
                            newList.Add("191000000650100" + cCustOrderLot);
                            newList.Add("1Y1100000250020MFG_H");
                            newList.Add("191000000350100" + dMfg.ToString("yyyy-MM"));
                            newList.Add("101100000150100" + cCtn + "   " + cLot);
                            // newList.Add("Q0002"); 
                            break;

                        case "147":
                            newList.Add("1Y1100000150015LOT");
                            newList.Add("421100000800030" + cCustOrderLot);
                            newList.Add("421100000150080" + "Gross Weight:  " + nGross.ToString("0.0 Kgs"));
                            newList.Add("421100000150125" + "Net Weight:    " + nNett.ToString("0.0 Kgs"));
                            newList.Add("421100000150170" + "PO:      " + cPo);
                            newList.Add("1Y1100000150190MFG_T_V");
                            newList.Add("421100001200230" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150260EXP_T_V");
                            newList.Add("421100001200290" + dExp.ToString("yyyy-MM"));
                            newList.Add("421100000150340" + "Case #:");
                            newList.Add("421100001200340" + cCtn);
                            newList.Add("411100001900380" + cLot);
                            break;

                        case "134": //HENRY SCHEIN CHINA/PDT - LPF
                            newList.Add("411100000200030" + "PO NO.:" + cOrderNum);
                            newList.Add("411100002400030" + cCtn);
                            newList.Add("421100000200060" + "LOT NO.:" + cLot);
                            newList.Add("1Y1100000150070NETT1");
                            newList.Add("421100000700090" + nNett.ToString("0.0 Kgs"));
                            newList.Add("1Y1100000150100GROSS1");
                            newList.Add("421100000700120" + nGross.ToString("0.0 Kgs"));
                            newList.Add("431100000600180" + "LPF" + " - " + cCustSize);
                            break;

                        case "133": //HENRY SCHEIN CHINA/PDT - NPF
                            newList.Add("411100000200030" + "PO NO.:" + cOrderNum);
                            newList.Add("411100002400030" + cCtn);
                            newList.Add("421100000200060" + "LOT NO.:" + cLot);
                            newList.Add("1Y1100000150070NETT1");
                            newList.Add("421100000700090" + nNett.ToString("0.0 Kgs"));
                            newList.Add("1Y1100000150100GROSS1");
                            newList.Add("421100000700120" + nGross.ToString("0.0 Kgs"));
                            newList.Add("431100000600180" + "NPF" + " - " + cCustSize);
                            break;

                        case "132": //HENRY SCHEIN CHINA/PDT - LP
                            newList.Add("411100000200030" + "PO NO.:" + cOrderNum);
                            newList.Add("411100002400030" + cCtn);
                            newList.Add("421100000200060" + "LOT NO.:" + cLot);
                            newList.Add("1Y1100000150070NETT1");
                            newList.Add("421100000700090" + nNett.ToString("0.0 Kgs"));
                            newList.Add("1Y1100000150100GROSS1");
                            newList.Add("421100000700120" + nGross.ToString("0.0 Kgs"));
                            newList.Add("431100000600180" + "LP" + " - " + cCustSize);
                            break;

                        case "128":
                            //cCustOrderLot = dEtd.ToString("ddMMyyyy") + cProdRefNo;
                            newList.Add("411200000200058Ctn. No.");
                            newList.Add("421100001000058" + cCtn);
                            newList.Add("422300002000108" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150070EXP");
                            newList.Add("421100001000095" + dExp.ToString("MMM yyyy"));
                            newList.Add("1Y1100000150115LOT");
                            newList.Add("421100001000135" + cCustOrderLot);
                            newList.Add("4d3103001000180" + cLot);
                            newList.Add("410005001000195" + cLot);
                            break;

                        case "104":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411100000200050Ctn. No.");
                            newList.Add("421100001000052" + cCtn);
                            newList.Add("411100000200072Date of");
                            newList.Add("411100000200082Import:");
                            newList.Add("421100001000080" + dEtd.ToString("MMM-yyyy"));
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000200085MFG");
                            newList.Add("421100001000110" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000200119EXP");
                            newList.Add("421100001000140" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000200154LOT");
                            newList.Add("4d3103001000180" + cLot);
                            newList.Add("410005001000195" + cLot);
                            break;

                        case "145":
                            dMfg = DateTime.ParseExact(cCustOrderLot.Substring(4, 2) + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                            dExp = dMfg.AddMonths(nExpMonth);
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;
                            newList.Add("422200000150065" + PadCenter(cCustSize, 11));
                            newList.Add("490000000150110Caixa No /");
                            newList.Add("491100000150130Carton No :");
                            newList.Add("491100002000130" + cCtn);
                            newList.Add("491100000150160" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                            newList.Add("491100000150180Manufacturing Date:");
                            newList.Add("491100002000185" + dMfg.ToString("MM/yyyy"));
                            newList.Add("491100000150210Validade/Expiry Date:");
                            newList.Add("491100002000210" + dExp.ToString("MM/yyyy"));
                            newList.Add("491100000150240Lote:");
                            newList.Add("491100002000240" + cCustOrderLot);
                            newList.Add("401100000150255" + cPo + "  " + cLot);
                            newList.Add("4e2105000150320C&G" + cGs1);
                            newList.Add("400000000150330" + cReadable.ToString());
                            break;

                        case "91":
                            newList.Add("411100000150026PO NO: " + cPo);
                            newList.Add("411100000150043Ctn. No.: " + cCtn);
                            newList.Add("411100000150058Gross Weight: " + nGross.ToString("0.0 Kg"));
                            newList.Add("411100000150075Net Weight: " + nNett.ToString("0.0 Kg"));
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150080MFG");
                            newList.Add("421100001000108" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150116EXP");
                            newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150156LOT");
                            newList.Add("4d3103001000178" + cLot);
                            newList.Add("410005001000193" + cLot);
                            break;

                        case "139":
                            cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 5).Replace("/", "");
                            newList.Add("410005000200025" + cPo);
                            newList.Add("422400000100117" + PadCenter(cCustSize, 11));
                            newList.Add("421100000000159" + PadCenter(cBrand, 25));
                            newList.Add("411200000100205Ctn. No.");
                            newList.Add("421100001100203" + cCtn);
                            newList.Add("421100001100248" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100001100294" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100220LOGO");
                            newList.Add("420000001100340" + cCustOrderLot);
                            newList.Add("410000001700388" + cLot);
                            break;

                        case "137":
                            newList.Add("191000000500030Ctn.No. " + cCtn);
                            newList.Add("141100000400190" + PadCenter(cCustSize, 5));
                            newList.Add("111000000200030" + cOrderNum);
                            newList.Add("111000000200150" + cLot);
                            break;

                        case "118":
                            cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            newList.Add("411200000200045PO No.");
                            newList.Add("421100001000045" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000107" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("422300001850140" + PadCenter(cCustSize, 5));
                            newList.Add("421100001000140" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4e1103001000175C&G" + cGs1);
                            newList.Add("410005001000190" + cReadable);
                            newList.Add("100000002800115" + cLot);
                            break;

                        case "119":
                            cGs1 = "10" + cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            cReadable = "(10)" + cProdRefNo.Trim() + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            newList.Add("410005002400030" + cCtn);
                            newList.Add("422300000300085" + PadCenter(cCustSize, 11));
                            newList.Add("411200000200110PO No.");
                            newList.Add("421100001150110" + cPo);
                            newList.Add("411200000200135Mfg. Date.");
                            newList.Add("421100001150135" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000200165Lot No.");
                            newList.Add("4e1103001150175C&G" + cGs1);
                            newList.Add("410005001150190" + cReadable);
                            newList.Add("100000002800115" + cLot);
                            break;

                        case "120":
                            cCustOrderLot = dMfg.ToString("yyMM") + "01" + cPline;
                            newList.Add("422200000100045" + PadCenter(cCustSize, 11));
                            newList.Add("491100000150070Caixa No /");
                            newList.Add("491100000150090Carton No :");
                            newList.Add("491100002000080" + cCtn);
                            newList.Add("491100000150110Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                            newList.Add("491100000150130Manufacturing Date:");
                            newList.Add("491100002000125" + dMfg.ToString("MM/yyyy"));
                            newList.Add("491100000150150Validade/Expiry Date:");
                            newList.Add("491100002000150" + dExp.ToString("MM/yyyy"));
                            newList.Add("491100000150170Lote:");
                            newList.Add("491100002000170" + cCustOrderLot);
                            newList.Add("401100000150185" + cPo + "  " + cLot);
                            break;

                        case "2":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150135PO No.");
                            newList.Add("421100001100133" + cPo);
                            newList.Add("411200000150170Mfg. Date");
                            newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150205Ctn. No.");
                            newList.Add("421100001100203" + cCtn);
                            newList.Add("411200000150240Gross Wt.");
                            newList.Add("421100001100238" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150275Net Wt.");
                            newList.Add("421100001100273" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150310Reorder No.");
                            newList.Add("421100001100308" + cCustRefNo);
                            newList.Add("411200000150345Lot No.");
                            newList.Add("421100002500343" + cHartaSize);
                            newList.Add("4d3105001100374" + cLot);
                            newList.Add("401105001100384" + cLot);
                            break;

                        case "5":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150135PO No.");
                            newList.Add("421100001100133" + cPo);
                            newList.Add("411200000150170Mfg. Date");
                            newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150205Ctn. No.");
                            newList.Add("421100001100203" + cCtn);
                            newList.Add("411200000150240Gross Wt.");
                            newList.Add("421100001100238" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150275Net Wt.");
                            newList.Add("421100001100273" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150310Lot No.");
                            newList.Add("421100001100308" + cCustOrderLot);
                            newList.Add("421100002500343" + cHartaSize);
                            newList.Add("4d3105001100374" + cLot);
                            newList.Add("401105001100384" + cLot);
                            break;

                        case "75":
                            newList.Add("110000000800135" + PadCenter(cPo, 15));
                            newList.Add("110000000650115Ctn.No.");
                            newList.Add("110000000650210" + cCtn);
                            newList.Add("110000000500115Mfg. Date.");
                            newList.Add("110000000500210" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("110000000350115Lot No.");
                            newList.Add("1d3102500200180" + cLot);
                            newList.Add("110002500050180" + cLot);
                            newList.Add("123300000250010" + PadCenter(cCustSize, 3));  // <--- I have change the print position. Original position : 123300000250020
                            break;

                        case "80":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150089EXP");
                            newList.Add("421100001000112" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150140LOT");
                            newList.Add("4d3103001000170" + cLot);
                            newList.Add("410005001000185" + cLot);
                            break;

                        case "82":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200058Ctn. No.");
                            newList.Add("421100001000058" + cCtn);
                            newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060MFG");
                            newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150095EXP");
                            newList.Add("421100001000121" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150130LOT");
                            newList.Add("421100001000149" + cCustOrderLot + "-" + cProdRefNo);
                            newList.Add("4d3103001000185" + cLot);
                            newList.Add("410005001000200" + cLot);
                            break;

                        case "100":
                            newList.Add("410005000200020" + cPo.Trim());
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100001000051" + cCustOrderLot); //Lot By Size
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100001000179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;

                        case "101":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100001000051" + cCustOrderLot); //Lot by Size
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100001000179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;

                        case "121":
                            newList.Add("421100000150035" + cLot);
                            newList.Add("411100001900035" + cOrderNum);
                            newList.Add("421100000150090" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411100001900090" + cCtn);
                            newList.Add("421100000150130" + dExp.ToString("MMM-yyyy"));
                            newList.Add("422300001900160" + cCustSize);
                            newList.Add("421100000150160" + nGross.ToString("0.0 Kg"));
                            newList.Add("421100000150190" + nNett.ToString("0.0 Kg"));
                            break;

                        case "122":
                            //DateTime.TryParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", null, DateTimeStyles.None, out dMfg);
                            //dExp = dMfg.AddMonths(nExpMonth);
                            newList.Add("191100002700015EAN N" + Chr(Convert.ToInt32("248")));
                            newList.Add("191100002700240" + cOuterGtn14_Code);
                            newList.Add("191100002400015Quantidade:");
                            newList.Add("1911000024002401.000 unds");
                            newList.Add("191100002100015Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o:");
                            newList.Add("191100002100240" + dMfg.ToString("MM/yyyy"));
                            newList.Add("191100001800015Lote:");
                            newList.Add("191100001800240" + cCustOrderLot);
                            newList.Add("191100001500015Prazo de Validade:");
                            newList.Add("191100001500240" + dExp.ToString("MM/yyyy"));
                            newList.Add("1e1110000200015C&G" + ("01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "00" + "10" + cCustOrderLot));
                            newList.Add("101100000100015(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMM") + "00" + "(10)" + cCustOrderLot);
                            newList.Add("401100000120385" + cPo + " " + cCtn + " " + cLot);
                            break;

                        case "7":
                            if (cDistBy.Length > 0)
                            {
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150135PO No.");
                                newList.Add("421100001100133" + cPo);
                                newList.Add("411200000150170Ctn. No.");
                                newList.Add("421100001100168" + cCtn);
                                newList.Add("411200000150205Gross Wt.");
                                newList.Add("421100001100203" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150240Net Wt.");
                                newList.Add("421100001100238" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150275Dist. By");
                                newList.Add("421100001100273" + cDistBy);
                                newList.Add("421100001100308" + cDistCountry);
                            }
                            else
                            {
                                newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                                newList.Add("411200000150155PO No.");
                                newList.Add("421100001100153" + cPo);
                                newList.Add("411200000150200Ctn. No.");
                                newList.Add("421100001100198" + cCtn);
                                newList.Add("411200000150245Gross Wt.");
                                newList.Add("421100001100243" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150290Net Wt.");
                                newList.Add("421100001100288" + nNett.ToString("0.0 Kg"));
                            }
                            newList.Add("411200000150345Lot No.");
                            newList.Add("421100002500343" + cHartaSize);
                            newList.Add("4d3105001100374" + cLot);
                            newList.Add("401105001100384" + cLot);
                            break;

                        case "15":
                            lettercount = 0;
                            cSubBrand2 = string.Empty;
                            separators[0] = " ";
                            words = cBrand.Split(separators, StringSplitOptions.RemoveEmptyEntries);
                            foreach (var word in words)
                            {
                                lettercount += word.Length;
                                if (lettercount >= 25)
                                {
                                    cSubBrand2 = word;
                                }
                            }
                            if (cSubBrand2 != string.Empty)
                            {
                                newList.Add("421200000000055" + PadCenter(cBrand.Replace(cSubBrand2, "").Trim(), 25));
                                newList.Add("421200000150100" + PadCenter(cSubBrand2.Trim(), 25));
                                newList.Add("411200000150170Size");
                                newList.Add("422200001100168" + cCustSize);
                                newList.Add("411200000150205PO No.");
                                newList.Add("421100001100203" + cPo);
                                newList.Add("411200000150240Ctn. No.");
                                newList.Add("421100001100238" + cCtn);
                                newList.Add("411200000150275Gross Wt.");
                                newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));
                                newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150345Lot No.");
                                newList.Add("421100002500343" + cHartaSize);
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                            }
                            else
                            {
                                newList.Add("421200000150055" + PadCenter(cBrand, 25));
                                newList.Add("411200000150120Size");
                                newList.Add("422200001100118" + cCustSize);
                                newList.Add("411200000150165PO No.");
                                newList.Add("421100001100163" + cPo);
                                newList.Add("411200000150210Ctn. No.");
                                newList.Add("421100001100208" + cCtn);
                                newList.Add("411200000150255Gross Wt.");
                                newList.Add("421100001100253" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150300Net Wt.");
                                newList.Add("421100001100298" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150345Lot No.");
                                newList.Add("421100002500343" + cHartaSize);
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                            }

                            break;

                        case "106":
                            // This Outer label set is for BONRIC station
                            newList.Add("411105000150030" + "HARTALEGA SDN BHD");
                            newList.Add("411100000150050" + "BRAND   :");
                            newList.Add("411100001000050" + cBrand);
                            newList.Add("411100000150070" + "PRODUCT :");
                            newList.Add("411100001000070" + cCustRefNo);
                            newList.Add("411100000150090" + "PO      :");
                            newList.Add("411100001000090" + cPo);
                            newList.Add("411100000150110" + "MFG DATE:");
                            newList.Add("411100001000110" + dMfg.ToString("MMM yyyy"));
                            newList.Add("411100000150130" + "LOT     :");
                            newList.Add("412400002150175" + PadCenter(cCustSize, 5));
                            newList.Add("4d3105001000170" + cLot);
                            newList.Add("401100001000180" + cLot);
                            // newList.Add("Q0004");
                            break;

                        case "108":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100001000051" + cCustOrderLot);
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100001000095" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("421100001000141" + dExp.ToString("yyyy-MM"));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100001000179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;

                        case "112":
                            cCustOrderLot = cPo + "-" + cBrand;
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("411200000800053" + cCustOrderLot);
                            newList.Add("422300001950138" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("411200000800100" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("411200000800143" + dExp.ToString("yyyy-MM"));
                            newList.Add("411200000150183Case.");
                            newList.Add("411200000800183" + cCtn);
                            newList.Add("410005001700188" + cLot);
                            break;

                        case "110":
                            newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                            newList.Add("111100000800240" + cCtn);
                            newList.Add("121100000550020" + "LOT NO.:");
                            newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                            newList.Add("141100000100020" + cLot);
                            break;

                        case "67":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200058Ctn. No.");
                            newList.Add("421100001000058" + cCtn);
                            newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060MFG");
                            newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150095EXP");
                            newList.Add("421100001000121" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150130LOT");
                            newList.Add("421100001000149" + cCustOrderLot + cCustRefNo);
                            newList.Add("4d3103001000185" + cLot);
                            newList.Add("410005001000200" + cLot);
                            break;

                        case "69":
                            newList.Add("422200000300060" + PadCenter(cCustSize, 11));
                            newList.Add("411200000200100PO No.");
                            newList.Add("421100001100100" + cPo);
                            newList.Add("411200000200130Ctn. No.");
                            newList.Add("421105001100130" + cCtn);
                            newList.Add("411200000200165Lot No.");
                            newList.Add("4d3103001100170" + cLot);
                            newList.Add("410005001100187" + cLot);
                            break;

                        case "73":
                            //DateTime.TryParseExact("01" + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", null, DateTimeStyles.None, out dMfg);
                            //dExp = dMfg.AddMonths(nExpMonth);
                            newList.Add("422200000800060" + PadCenter(cCustSize, 7));
                            newList.Add("491100000150090Quantidade/Cantidad:");
                            newList.Add("4911000020000901.000 unds");
                            newList.Add("491100000150120Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                            newList.Add("491100002000140" + dMfg.ToString("MM/yyyy"));
                            newList.Add("491100000150140Fecha de Fabricaci" + Chr(Convert.ToInt32("162")) + "n:");
                            newList.Add("491100000150170Lote:");
                            newList.Add("491100002000170" + cCustOrderLot);
                            newList.Add("401100000450190" + cPo.PadRight(10) + " " + cCtn.PadRight(8) + " " + cLot.PadRight(12));

                            break;

                        case "58":
                            newList.Add("1Y1100000200015LOT");
                            newList.Add("421100001100035" + cCustOrderLot);
                            newList.Add("411200000200065Gross Wt.");
                            newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200090Net Wt.");
                            newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200115PO.");
                            newList.Add("421100001100115" + cPo);
                            newList.Add("411200000200140Case No.");
                            newList.Add("421100001100140" + cCtn);
                            newList.Add("1Y1100000200145MFG");
                            newList.Add("421100001100170" + dMfg.ToString("MM-yyyy"));
                            newList.Add("401105002000190" + cLot);
                            break;

                        case "59":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("421200001800090" + PadCenter(cCustSize, 10));
                            newList.Add("411200000200080Ctn. No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("1Y1100000150100MFG");
                            newList.Add("421100001100125" + (dMfg.ToString("MMM-yyyy")));
                            newList.Add("1Y1100000150150LOT");
                            newList.Add("4d3103001100175" + cLot);
                            newList.Add("410005001100187" + cLot);
                            break;

                        case "61":
                            newList.Add("410005000200023" + cPo);
                            newList.Add("422400002000090" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200080Ctn. No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("411200000200110Gross Wt.");
                            newList.Add("421100001100110" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200140Net Wt.");
                            newList.Add("421100001100140" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200170Lot No.");
                            newList.Add("4d3103001100175" + cLot);
                            newList.Add("400005001100187" + cLot);
                            break;

                        case "44":
                            newList.Add("191100000800070" + PadCenter(cPo, 15));
                            newList.Add("191000000510200Ctn.no.");
                            newList.Add("191000000300200" + cCtn);
                            newList.Add("1D3100000150070" + cLot);
                            break;

                        case "45":
                            newList.Add("491000000400035Ctn.No.");
                            newList.Add("491000001300035" + cCtn);
                            newList.Add("491000000400055Mfg. Date.");
                            newList.Add("491100001300055" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("491000000400075Lot No.");
                            newList.Add("4d3102501300080" + cLot);
                            newList.Add("400002501300090" + PadCenter(cLot, 20));
                            newList.Add("401100000400095" + cPo);
                            break;

                        case "47":
                            newList.Add("491100000150030" + PadCenter(cPo, 15));
                            newList.Add("491000000150055Lot No.");
                            newList.Add("4d3102500150080" + cLot);
                            newList.Add("400002500150090" + PadCenter(cLot, 20));
                            newList.Add("491000001400050Ctn.No.");
                            newList.Add("491000002200050" + cCtn);
                            newList.Add("491000001400065Mfg.Date. " + dMfg.ToString("MMM-yyyy"));
                            newList.Add("491000001400080Exp.Date. " + dExp.ToString("MMM-yyyy"));
                            break;

                        case "97":
                            newList.Add("491000000400035Ctn.No.");
                            newList.Add("491000001300035" + cCtn);
                            newList.Add("491000000400055Mfg. Date.");
                            newList.Add("491100001300055" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("491000000400075Lot No.");
                            newList.Add("4d3102501300080" + cLot);
                            newList.Add("400002501300090" + cLot);
                            newList.Add("401100000400095" + cPo);
                            break;

                        case "98":
                            cCustOrderLot = cPo + "-" + cCustRefNo;
                            newList.Add("410005000200030" + cPo);
                            newList.Add("410005001800030" + cLot);
                            newList.Add("422400000100120" + PadCenter(cCustSize, 11));
                            newList.Add("411200000100200Ctn. No.");
                            newList.Add("421100000900198" + cCtn);
                            newList.Add("421100000900245" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100000900300" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100220LOGO");
                            newList.Add("420005000900348" + cCustOrderLot);

                            break;

                        case "99":
                            newList.Add("491100000200035" + "PO NO:");
                            newList.Add("491100000900035" + cPo);
                            newList.Add("431100002200060" + PadCenter(cCustSize, 3));
                            newList.Add("491000002200080Ctn.No.");
                            newList.Add("491000002200100" + cCtn);
                            newList.Add("4d3100000900078" + cLot);
                            newList.Add("491100000200100" + "LOT NO:");
                            newList.Add("491100000900100" + cLot);
                            break;

                        case "55":
                            newList.Add("411205000200040" + "Lot No.");
                            newList.Add("421105001500040" + cPo);
                            newList.Add("411205000200080" + "Batch No.");
                            newList.Add("421105001500080" + cLot);
                            newList.Add("1Y1100000200100MFG");
                            newList.Add("400000000600105Manufacturing");
                            newList.Add("400000000600113date:");
                            newList.Add("400000000600123Date");
                            newList.Add("400000000600131de fabrication:");
                            newList.Add("421105001500130" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000200150EXP");
                            newList.Add("400000000600157Expiration");
                            newList.Add("400000000600165date:");
                            newList.Add("400000000600175Date");
                            newList.Add("400000000600183d' expiration:");
                            newList.Add("421105001500182" + dExp.ToString("yyyy-MM"));
                            newList.Add("400005002600190" + cCtn);
                            break;

                        case "56":
                            newList.Add("111200000600020" + "Batch No.");
                            newList.Add("121100000650130" + cLot);
                            newList.Add("111100000100250" + cCtn);
                            break;

                        case "57":
                            newList.Add("1Y1100000200025LOT");
                            newList.Add("421100001100045" + cCustOrderLot);
                            newList.Add("411200000200080Gross Wt.");
                            newList.Add("421100001100080" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200110Net Wt.");
                            newList.Add("421100001100110" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200140PO");
                            newList.Add("421100001100140" + cPo);
                            newList.Add("411200000200170Case No.");
                            newList.Add("421100001100170" + cCtn);
                            newList.Add("401105002000190" + cLot);
                            break;

                        case "83":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100001000051" + cCustOrderLot);
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100001000179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;

                        case "85":
                            //String[] aYear = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                            //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                            //if (nPos > -1)
                            //{
                            //    string cYear = DateTime.Today.ToString("yyyy").Substring(0, 3) + (nPos + 1).ToString();
                            //    DateTime.TryParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", null, DateTimeStyles.None, out dMfg);
                            //}
                            //dExp = dMfg.AddMonths(nExpMonth);
                            newList.Add("191000000650020" + "Lot No.");
                            newList.Add("191000000650100" + cCustOrderLot);
                            newList.Add("1Y1100000250020MFG_H");
                            newList.Add("191000000350100" + dMfg.ToString("MMM yyyy"));
                            newList.Add("101100000150100" + cCtn + "   " + cLot);
                            break;

                        case "87":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cLot;
                            newList.Add("400005000150020" + cPo);
                            newList.Add("422300001600095" + cCustSize);
                            newList.Add("411200000150060Carton No:");
                            newList.Add("421100000150083" + cCtn);
                            newList.Add("411200000150120GS1 code:");
                            newList.Add("4e3103000150155C&G" + cGs1);
                            newList.Add("400005000150170" + cReadable);
                            break;

                        case "107":
                            newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                            newList.Add("111100000800240" + cCtn);
                            newList.Add("121100000550020" + "LOT NO.:");
                            newList.Add("141100000150020" + cLot);
                            break;

                        case "34":
                            newList.Add("121100000700070" + cPo);
                            newList.Add("121000000300200" + cCtn);
                            newList.Add("1D3100000100070" + cLot);
                            break;

                        case "36":
                            newList.Add("4e2202500500040C" + cCustOrderLot);
                            newList.Add("411100000500055" + cCustOrderLot);
                            newList.Add("411100000500070" + cLot);
                            newList.Add("411100001700090" + cCtn);
                            break;

                        case "89":
                            newList.Add("100005000600040" + cOrderNum);
                            newList.Add("111000000300040" + cLot);
                            newList.Add("191000000500180Ctn.No.");
                            newList.Add("191000000270180" + cCtn);
                            break;

                        case "90":
                            //dMfg = dEtd;
                            //dExp = dMfg.AddMonths(nExpMonth);
                            newList.Add("1Y1100000150020LOT");
                            newList.Add("421100001000042" + cCustOrderLot);
                            newList.Add("411200000150070PO. No.");
                            newList.Add("421100001000067" + cPo);
                            newList.Add("411200000150095Ctn. No.");
                            newList.Add("421100001000092" + cCtn);
                            newList.Add("1Y1100000150100MFG");
                            newList.Add("421100001000125" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150135EXP");
                            newList.Add("421100001000162" + dExp.ToString("yyyy-MM"));
                            newList.Add("410000001850185" + cLot);
                            break;

                        case "92":
                            cGs1 = "10" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(10)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;
                            newList.Add("2e2105010350105C&G" + cGs1);
                            newList.Add("200000010350090" + cReadable);
                            newList.Add("242200007500100" + PadCenter(cCustSize, 3));
                            newList.Add("2X1110005350080" + "L001500");
                            newList.Add("201100010350070" + "PO No");
                            newList.Add("221100009850054" + cPo);
                            newList.Add("201100008150070" + "Mfg Date");
                            newList.Add("221100007550054" + dEtd.ToString("yyyy-MM")); //Shipment ETD date
                            newList.Add("201100006500070" + "Ctn No");
                            newList.Add("291100006050054" + cCtn);
                            newList.Add("200000006500020" + cLot);
                            newList.Add("2X1110005350050" + "L001500");
                            newList.Add("201100010350040" + "Lot No");
                            newList.Add("221100009850024" + cCustOrderLot);
                            newList.Add("201100008150040" + "Exp Date");
                            newList.Add("221100007550024" + dExp.ToString("yyyy-MM"));
                            newList.Add("2X1110005250010" + "L200001");
                            newList.Add("242200005000080" + PadCenter(cCustSize, 3));      // cCsize.Trim());
                            newList.Add("2e2105003250105C&G" + cGs1);
                            newList.Add("200000003250090" + cReadable);
                            newList.Add("2X1110000100080" + "L001500");
                            newList.Add("201100005100070" + "PO No");
                            newList.Add("221100004600054" + cPo);
                            newList.Add("201100002900070" + "Mfg Date");
                            newList.Add("221100002300054" + dEtd.ToString("yyyy-MM"));
                            newList.Add("201100001250070" + "Ctn No");
                            newList.Add("291100000800054" + cCtn);
                            newList.Add("200000001250020" + cLot);
                            newList.Add("2X1110000100050" + "L001500");
                            newList.Add("201100005100040" + "Lot No");
                            newList.Add("221100004600024" + cCustOrderLot);
                            newList.Add("201100002900040" + "Exp Date");
                            newList.Add("221100002300024" + dExp.ToString("yyyy-MM"));

                            objOuterLabelDTO.barcodeToValidate = dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            objOuterLabelDTO.countToValidate = cGs1.Length;

                            break;

                        case "17":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4);
                            newList.Add("2e1109009850105C&G" + cGs1);
                            newList.Add("201100009850090" + cReadable);
                            if (cCustSize.Contains("½"))
                                newList.Add("223400007000110" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100007000110" + PadCenter(cCustSize, 5));

                            newList.Add("2X1110005350080L001500");
                            newList.Add("201100010350070Gross Wt");
                            newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100009050070Exp Date");
                            newList.Add("221100008350054" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100007200070PO No");
                            newList.Add("291100006700054" + cPo);

                            newList.Add("2X1110005350050L001500");
                            newList.Add("201100010350040Nett Wt");
                            newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100009050040Reorder No");
                            newList.Add("221100008350024" + cProdRefNo);
                            newList.Add("201100007200040Ctn No");
                            newList.Add("221100006700024" + cCtn);

                            newList.Add("2X1110005250010L200001");
                            if (cCustSize.Contains("½"))
                                newList.Add("223400004500110" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100004500110" + PadCenter(cCustSize, 5));

                            newList.Add("2e1109002750105C&G" + cGs1);
                            newList.Add("201100002750090" + cReadable);

                            newList.Add("2X1110000100080L001500");
                            newList.Add("201100005100070Gross Wt");
                            newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100003800070Exp Date");
                            newList.Add("221100003100054" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100001950070PO No");
                            newList.Add("291100001450054" + cPo);

                            newList.Add("2X1110000100050L001500");
                            newList.Add("201100005100040Nett Wt");
                            newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100003800040Reorder No");
                            newList.Add("221100003100024" + cProdRefNo);
                            newList.Add("201100001950040Ctn No");
                            newList.Add("221100001450024" + cCtn);
                            break;

                        case "18":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("421100000100145PO No.");
                            newList.Add("4e1100001000165B" + cPo);
                            newList.Add("401100001000175" + cPo);
                            newList.Add("411200000100210Ctn. No.");
                            newList.Add("421100001000208" + cCtn);
                            newList.Add("411200000100245Gross Wt.");
                            newList.Add("421100001000243" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000100280Net Wt.");
                            newList.Add("421100001000278" + nNett.ToString("0.0 Kg"));
                            newList.Add("421100000100315Lot No.");
                            newList.Add("4e1105000100373B" + cLot);
                            newList.Add("401105000100383" + cLot);
                            break;

                        case "117":
                            cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            newList.Add("410005002400030" + cCtn);
                            newList.Add("422400000300100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000200130PO No.");
                            newList.Add("421100001000130" + cPo);
                            newList.Add("411200000200165Lot No.");
                            newList.Add("4e1103001000170C&G" + cGs1);
                            newList.Add("410005001000187" + cReadable);
                            newList.Add("100000002800115" + cLot);
                            break;

                        case "116":
                            newList.Add("410005000100030" + cPo);
                            newList.Add("411200000100058Ctn. No.");
                            newList.Add("421100000820058" + cCtn);
                            newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000100060MFG");
                            newList.Add("421100000820085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100095EXP");
                            newList.Add("421100000820121" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100130LOT");
                            newList.Add("421100000820149" + cCustOrderLot);
                            newList.Add("4d3103000820185" + cLot);
                            newList.Add("410005000820200" + cLot);
                            break;

                        case "115":
                            cCustOrderLot = dMfg.ToString("ddMMyyyy") + cProdRefNo;
                            newList.Add("411200000100058Ctn. No.");
                            newList.Add("421100000820058" + cCtn);
                            newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000100060MFG");
                            newList.Add("421100000820085" + dMfg.ToString("dd MMM yyyy"));
                            newList.Add("1Y1100000100095EXP");
                            newList.Add("421100000820121" + dExp.ToString("dd MMM yyyy"));
                            newList.Add("1Y1100000100130LOT");
                            newList.Add("421100000820149" + cCustOrderLot);
                            newList.Add("4d3103000820185" + cLot);
                            newList.Add("410005000820200" + cLot);
                            break;

                        case "114":
                            //DateTime.TryParseExact(cCustOrderLot.Substring(0, 4) + "01", "yyMMdd", null, DateTimeStyles.None, out dExp);
                            cGs1 = "01" + cOuterGtn14_Code + "17" + cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + cCustOrderLot.Substring(0, 6) + "(10)" + Right(cCustOrderLot, 10);
                            //dMfg = dExp.AddMonths(-nExpMonth);
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200055Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150070H_EXP_JP");
                            newList.Add("421100001000085" + dExp.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150100H_LOT_JP");
                            newList.Add("421105001000115" + cCustOrderLot);
                            newList.Add("410005000150140" + "GS1 code:");
                            newList.Add("4e1103000150180C&G" + cGs1);
                            newList.Add("400000000150190" + cReadable);

                            objOuterLabelDTO.barcodeToValidate = cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                            objOuterLabelDTO.countToValidate = cGs1.Length;

                            break;

                        case "113":
                            newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                            newList.Add("111100000800240" + cCtn);
                            newList.Add("111100000650020" + "LOT NO.:");
                            newList.Add("121100000600240" + PadCenter(cCustSize, 5));
                            newList.Add("141100000230020" + cLot);
                            newList.Add("111100000050020" + "Exp Date: " + dExp.ToString("MMM yyyy")); ;
                            break;

                        case "41":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("422400000100117" + PadCenter(cCustSize, 11));
                            newList.Add("421100000000159" + PadCenter(cBrand, 25));
                            newList.Add("411200000100205Ctn. No.");
                            newList.Add("421100001100203" + cCtn);
                            newList.Add("421100001100248" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100001100294" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100220LOGO");
                            newList.Add("4d3105001100373" + cLot);
                            newList.Add("410005001100388" + cLot);
                            break;

                        case "96":
                            //DateTime.TryParseExact(cCustOrderLot.Substring(0, 4) + "01", "yyMMdd", null, DateTimeStyles.None, out dExp);
                            cGs1 = "01" + cOuterGtn14_Code + "17" + cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + cCustOrderLot.Substring(0, 6) + "(10)" + Right(cCustOrderLot, 10);
                            //dMfg = dExp.AddMonths(-nExpMonth);

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200055Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060EXP");
                            newList.Add("421100001000085" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150100LOT");
                            newList.Add("421105001000115" + Right(cCustOrderLot, 10));
                            newList.Add("410005000150140" + "GS1 code:");
                            newList.Add("4e1103000150180C&G" + cGs1);
                            newList.Add("400000000150190" + cReadable);

                            objOuterLabelDTO.barcodeToValidate = cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                            objOuterLabelDTO.countToValidate = cGs1.Length;
                            break;

                        case "94":
                            string cCSizeNum = string.Empty, cCsizeStr = string.Empty;
                            string s = cCustSize;
                            foreach (char c in s)
                            {
                                if (char.IsDigit(c) && c != '.')
                                {
                                    cCSizeNum += c.ToString();
                                }
                                else
                                {
                                    cCsizeStr += c.ToString();
                                }
                            }

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000085" + PadCenter(cCSizeNum, 5));
                            newList.Add("422300002000145" + PadCenter(cCsizeStr, 5));
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            break;

                        case "93":
                            cCustOrderLot = dMfg.ToString("yyMMdd") + cPline;
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;
                            newList.Add("422200000150065" + PadCenter(cCustSize, 11));
                            newList.Add("490000000150110Caixa No /");
                            newList.Add("491100000150130Carton No :");
                            newList.Add("491100002000130" + cCtn);
                            newList.Add("491100000150160" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                            newList.Add("491100000150180Manufacturing Date:");
                            newList.Add("491100002000185" + dMfg.ToString("MM/yyyy"));
                            newList.Add("491100000150210Validade/Expiry Date:");
                            newList.Add("491100002000210" + dExp.ToString("MM/yyyy"));
                            newList.Add("491100000150240Lote:");
                            newList.Add("491100002000240" + cCustOrderLot);
                            newList.Add("401100000150255" + cPo + "  " + cLot);
                            newList.Add("4e2105000150320C&G" + cGs1);
                            newList.Add("400000000150330" + cReadable.ToString());
                            break;

                        case "66":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200058Ctn. No.");
                            newList.Add("421100001000058" + cCtn);
                            newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060MFG");
                            newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150095EXP");
                            newList.Add("421100001000121" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150130LOT");
                            newList.Add("421100001000149" + cCustOrderLot);
                            newList.Add("4d3103001000185" + cLot);
                            newList.Add("410005001000200" + cLot);
                            break;

                        case "65":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            break;

                        case "63":
                            cCustOrderLot = cOuterGtn14_Code + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1);
                            newList.Add("411200000200045PO No.");
                            newList.Add("421100001000045" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("422300001850145" + PadCenter(cCustSize, 5));
                            newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4e1103001000184C&G" + "10" + cCustOrderLot);
                            newList.Add("410005001000199(10)" + cCustOrderLot);
                            newList.Add("100000002800125" + cLot);
                            break;

                        case "123":
                            newList.Add("421100000150030" + "LOT NO:");
                            newList.Add("421100001050030" + cCustOrderLot);
                            newList.Add("1Y1100000200040EXP");
                            newList.Add("421100001050065" + dExp.ToString("yyyy") + "-" + dExp.ToString("MM") + "-" + "01");
                            newList.Add("431100002200070" + PadCenter(cCustSize, 5));
                            newList.Add("411100001050090" + cCtn);
                            newList.Add("411100001700090" + cLot);
                            break;

                        case "124":
                            cGs1 = "010" + cOuterGtn14_Code + "12" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + cCustOrderLot;
                            cReadable = "(01)0" + cOuterGtn14_Code.Trim() + "(12)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + cCustOrderLot;
                            cExpYear = (Convert.ToInt16((dExp - dMfg).TotalDays / 365)).ToString();
                            cPackDate = dMfg.ToString("MM/yyyy");

                            newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize); //Customer size
                            newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA"); //Product and packing size
                            newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS"); //Product and packing size
                            newList.Add("440000001950130" + Right(cCustRefNo, 6)); //SKU code
                            newList.Add("4d3104000150130" + cOuterGtn14_Code); //DUN14 barcode
                            newList.Add("400000000150140" + cOuterGtn14_Code); //DUN14 HMR text
                            newList.Add("4e1103002650180C" + cCustOrderLot); //Customer lot (YYMMDDLN) barcode
                            newList.Add("410000000150160" + "Data de embalagem"); //Packing date Description
                            newList.Add("410000000150175" + cPackDate); //Packing date
                            newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg")); //Gross weigh
                            newList.Add("410000002150195" + "LOTE: " + cCustOrderLot); //Customer lot (YYMMDDLN) HMR text
                            newList.Add("4X1110000150198" + "L002330"); //Draw Line
                            newList.Add("4X1110001950184" + "L030002"); //Draw Line
                            newList.Add("410000000150215" + "FAB.: " + cPackDate + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                            newList.Add("410000002150215" + "VAL.: " + cExpYear + " ANOS"); //Number of expiry years
                            newList.Add("4e1106000150280C&G" + cGs1); //GS1-128 barcode
                            newList.Add("400000000150290" + cReadable); //GS1-128 HMR text
                            newList.Add("300000003650270" + cOrderNum); // Work order number
                            newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize); //Hartalega internal lot, Carton number, Hartalega internal size
                            break;

                        case "125":
                            newList.Add("442200000500100" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200145" + "Batch No.");
                            newList.Add("421100001100140" + cLot);
                            newList.Add("411100002200175" + cCtn);
                            break;

                        case "01":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150140PO No.");
                            newList.Add("421100001100138" + cPo);
                            newList.Add("411200000150180Mfg. Date");
                            newList.Add("421100001100178" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150220Ctn. No.");
                            newList.Add("421100001100218" + cCtn);
                            newList.Add("411200000150260Gross Wt.");
                            newList.Add("421100001100258" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150300Net Wt.");
                            newList.Add("421100001100298" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150340Lot No.");
                            newList.Add("421100002500338" + cHartaSize);
                            newList.Add("4d3105001100369" + cLot);
                            newList.Add("401105001100379" + cLot);
                            break;
                        #endregion old label set

                        #region new label set 25/07/19 LabelSetNamingProject
                        #region Set 01
                        //formerly outer label set 1
                        case "LAB-OC-HTLG-0001":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150140PO No.");
                            newList.Add("421100001100138" + cPo);
                            newList.Add("411200000150180Mfg. Date");
                            newList.Add("421100001100178" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150220Ctn. No.");
                            newList.Add("421100001100218" + cCtn);
                            newList.Add("411200000150260Gross Wt.");
                            newList.Add("421100001100258" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150300Net Wt.");
                            newList.Add("421100001100298" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150340Lot No.");
                            newList.Add("421100002500338" + cHartaSize);
                            newList.Add("4d3105001100369" + cLot);
                            newList.Add("401105001100379" + cLot);
                            break;
                        #endregion
                        #region Set 130
                        //formerly outer label set 130
                        case "LAB-OC-HTLG-0084":
                            newList.Add("411100000150043Ctn. No.: " + cCtn);
                            newList.Add("411100000150058Gross Weight: " + nGross.ToString("0.0 Kg"));
                            newList.Add("411100000150075Net Weight: " + nNett.ToString("0.0 Kg"));
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150080MFG");
                            newList.Add("421100001000108" + dMfg.ToString("MMM yyyy"));
                            newList.Add("1Y1100000150116EXP");
                            newList.Add("421100001000141" + dExp.ToString("MMM yyyy"));
                            newList.Add("1Y1100000150156LOT");
                            newList.Add("4d3103001000178" + cLot);
                            newList.Add("410005001000193" + cLot);
                            break;
                        #endregion
                        #region Set 15
                        //formerly outer label set 15
                        case "LAB-OC-HTLG-0010":
                            lettercount = 0;
                            cSubBrand2 = string.Empty;
                            separators[0] = " ";
                            words = cBrand.Split(separators, StringSplitOptions.RemoveEmptyEntries);
                            foreach (var word in words)
                            {
                                lettercount += word.Length;
                                if (lettercount >= 25)
                                {
                                    cSubBrand2 = word;
                                }
                            }
                            if (cSubBrand2 != string.Empty)
                            {
                                newList.Add("421200000000055" + PadCenter(cBrand.Replace(cSubBrand2, "").Trim(), 25));
                                newList.Add("421200000150100" + PadCenter(cSubBrand2.Trim(), 25));
                                newList.Add("411200000150170Size");
                                newList.Add("422200001100168" + cCustSize);
                                newList.Add("411200000150205PO No.");
                                newList.Add("421100001100203" + cPo);
                                newList.Add("411200000150240Ctn. No.");
                                newList.Add("421100001100238" + cCtn);
                                newList.Add("411200000150275Gross Wt.");
                                newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));
                                newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150345Lot No.");
                                newList.Add("421100002500343" + cHartaSize);
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                            }
                            else
                            {
                                newList.Add("421200000150055" + PadCenter(cBrand, 25));
                                newList.Add("411200000150120Size");
                                newList.Add("422200001100118" + cCustSize);
                                newList.Add("411200000150165PO No.");
                                newList.Add("421100001100163" + cPo);
                                newList.Add("411200000150210Ctn. No.");
                                newList.Add("421100001100208" + cCtn);
                                newList.Add("411200000150255Gross Wt.");
                                newList.Add("421100001100253" + nGross.ToString("0.0 Kg"));
                                newList.Add("411200000150300Net Wt.");
                                newList.Add("421100001100298" + nNett.ToString("0.0 Kg"));
                                newList.Add("411200000150345Lot No.");
                                newList.Add("421100002500343" + cHartaSize);
                                newList.Add("4d3105001100374" + cLot);
                                newList.Add("401105001100384" + cLot);
                            }

                            break;
                        #endregion
                        #region Outer Label 162
                        //formerly outer label set 162
                        case "LAB-OC-HTLG-0102":
                            newList.Add("421100100150035" + "BATCH");
                            newList.Add("421100001000035" + cLot);
                            newList.Add("1Y1100000150045" + "MFG");
                            newList.Add("421100001000070" + dMfg.ToString("MM-yyyy"));
                            newList.Add("1Y1100000150085" + "EXP");
                            newList.Add("421100001000110" + dExp.ToString("MM-yyyy"));
                            newList.Add("1Y1100000150130" + "LOT");
                            newList.Add("421100001000150" + cCustOrderLot);//double check cust lot parameter
                            newList.Add("421100000150185" + "CTN.");
                            newList.Add("421100001000185" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 211
                        //formerly outer label set 211
                        case "LAB-OC-HTLG-0130":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyyyMM") + "10" + cPo;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyyyMM") + "(10)" + cPo;

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200055Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060EXP");
                            newList.Add("421100001000085" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150100LOT");
                            newList.Add("421105001000115" + cLot);
                            newList.Add("410005000150140" + "GS1 code:");
                            newList.Add("4e1103000150180C&G" + cGs1);
                            newList.Add("400000000150190" + cReadable);

                            break;
                        #endregion
                        #region Outer Label 217
                        //formerly outer label set 217
                        case "LAB-OC-HTLG-0134":

                            newList.Add("410005000200035" + cPo);
                            newList.Add("411200000200065" + "Ctn.:");
                            newList.Add("421100000750065" + cCtn);
                            newList.Add("462200002050145" + cCustSize);
                            newList.Add("1Y1100000150072" + "MFG");
                            newList.Add("421100000750102" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150109" + "EXP");
                            newList.Add("421100000750135" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150147" + "LOT");
                            newList.Add("4d3103000750174" + cLot);
                            newList.Add("410005000750189" + cLot);
                            break;
                        #endregion
                        #region Outer Label 216
                        //formerly outer label set 216
                        case "LAB-OC-HTLG-0133":

                            cCustOrderLot = cPo.Substring(2, 3) + cProdRefNo;
                            newList.Add("D11");
                            newList.Add("491100100150061" + "Lot Number");
                            newList.Add("491100100150109" + "Date of");
                            newList.Add("491100100150116" + "Manufacture");
                            newList.Add("491100100150160" + "Date of");
                            newList.Add("491100100150167" + "Expiry");
                            newList.Add("D22");
                            newList.Add("410005000150025" + cPo);
                            newList.Add("1Y1100000150030" + "LOT");
                            newList.Add("421100000650051" + cCustOrderLot);
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150068" + "MFG");
                            newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150120" + "EXP");
                            newList.Add("421100000650147" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("411200000150193" + "Case.");
                            newList.Add("421100000650191" + cCtn);
                            newList.Add("410005001850188" + cLot);

                            break;
                        #endregion
                        #region Outer Label 224
                        //formerly outer label set 224
                        case "LAB-OC-HLYD-0005":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                            newList.Add("211100003690076" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100002190076" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("211100001020076" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("201100003690063" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1105003690011" + "C&G" + cGs1);     //GS1 barcode - check paramater
                            newList.Add("201100000400010" + cCtn);     //GS1 barcode - check paramater
                            break;
                        #endregion
                        #region Outer Label 222
                        //formerly outer label set 222
                        case "LAB-OC-GLOV-0001":

                            newList.Add("491100200200063" + "FBA");
                            newList.Add("1X1100000150060" + "l00050350");
                            newList.Add("1X1100000150133" + "l00090350");
                            newList.Add("3z2200003600320" + "F2002000" + cOuterGtn14_Code + cCtn);
                            newList.Add("4e1111000250260" + cOuterGtn14_Code + cCtn);
                            newList.Add("400000000900270" + cOuterGtn14_Code + cCtn);
                            newList.Add("1X1100000150280" + "l00050260");
                            newList.Add("D11");
                            newList.Add("420000001000030" + "PLEASE LEAVE THIS LABEL UNCOVERED");
                            newList.Add("491100200200080" + "SHIP FROM:");
                            newList.Add("491100200200090" + "Port of Los Angeles");
                            newList.Add("491100200200100" + "425 S. Palos Verdes St.");
                            newList.Add("491100200200110" + "San Pedro, CA 90731");
                            newList.Add("491100200200120" + "United States");
                            newList.Add("491100201800080" + "SHIP TO:");
                            newList.Add("491100201800090" + "FBA: Glovmart");
                            newList.Add("491100201800100" + "Amazon.com Services, Inc.");
                            newList.Add("491100201800110" + "24300 Nandina Ave");
                            newList.Add("491100201800120" + "Moreno Valley, CA 92551-9534");
                            newList.Add("491100201800130" + "United States");
                            newList.Add("491100202150300" + "Single SKU");
                            newList.Add("491100301750315" + cProdRefNo);
                            newList.Add("491100302350327" + "Qty 5");
                            newList.Add("491100200250317" + cOrderNum + "     " + cCustSize);
                            newList.Add("491100200250327" + "CTN:" + cCtn + "    " + cLot);

                            break;
                        #endregion
                        #region Outer Label 4
                        //formerly outer label set 4
                        case "LAB-OC-HTLG-0003":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150135" + "PO No.");
                            newList.Add("421100001100133" + cPo);
                            newList.Add("411200000150170" + "Mfg. Date");
                            newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150205" + "Exp. Date");
                            newList.Add("421100001100203" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150240" + "Ctn. No.");
                            newList.Add("421100001100238" + cCtn);
                            newList.Add("411200000150275" + "Gross Wt.");
                            newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));//gross wt
                            newList.Add("411200000150310" + "Net Wt.");
                            newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));//nett wt
                            newList.Add("411200000150345" + "Lot No.");
                            newList.Add("421100002500343" + cHartaSize);//internal sz
                            newList.Add("4d3105001100374" + cLot);
                            newList.Add("401105001100384" + cLot);
                            break;
                        #endregion
                        #region Outer Label 215
                        //formerly outer label set 215
                        case "LAB-OC-HTLG-0132":

                            cGs1 = "02" + cOuterGtn14_Code + "10" + cCustOrderLot + "17" + dExp.ToString("yyMMdd") + "37" + cProdRefNo;
                            cReadable = "(02)" + cOuterGtn14_Code + "(10)" + cCustOrderLot + "(17)" + dExp.ToString("yyMMdd") + "(37)" + cProdRefNo;

                            newList.Add("1Y1100000200020" + "LOT");
                            newList.Add("1Y1100000200050" + "MFG");
                            newList.Add("1Y1100001850050" + "EXP");
                            newList.Add("491100100700040" + cCustOrderLot);
                            newList.Add("491100100700080" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491100102300080" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("4e1105000200150" + "C&G" + cGs1);
                            newList.Add("400000000200160" + cReadable);
                            newList.Add("4e1105000200230" + "C&G" + cOuterGtn14_Code);
                            newList.Add("400000000200240" + cOuterGtn14_Code);
                            newList.Add("411100000200280" + "CTN: " + cCtn + "   " + cLot + "   " + cCustSize);

                            break;
                        #endregion
                        #region Outer Label 214
                        //formerly outer label set 214
                        case "LAB-OC-SPGL-0001":

                            newList.Add("H15");
                            newList.Add("401100000150040" + "RDNMD-METAL DETECTABLE NITRILE");
                            newList.Add("D22");
                            newList.Add("421100002500050" + "RDNMD");
                            newList.Add("491100000150075" + "SIZE");
                            newList.Add("491100001200075" + cCustSize);
                            newList.Add("491100002500075" + "PO NO.: " + cPo);
                            newList.Add("4e1105002500135" + "C&G" + cDistCountry);
                            newList.Add("400000002650145" + cDistCountry);
                            newList.Add("491100000150100" + "MFG DATE");
                            newList.Add("491100001200100" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("491100000150125" + "EXP DATE");
                            newList.Add("491100001200125" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("491100000150150" + "LOT");
                            newList.Add("491100001200150" + cLot);
                            newList.Add("491100000150175" + "QTY");
                            newList.Add("491100001200175" + "(10 inner x " + cProdRefNo + " pcs) by weight");
                            newList.Add("491100000150280" + "CTN. NO.");
                            newList.Add("491100001200280" + cCtn);
                            newList.Add("4e1105001200235" + "C&G" + "01" + cOuterGtn14_Code);
                            newList.Add("400000001350245" + "(01)" + cOuterGtn14_Code);
                            newList.Add("491100001050075" + ":");
                            newList.Add("491100001050100" + ":");
                            newList.Add("491100001050125" + ":");
                            newList.Add("491100001050150" + ":");
                            newList.Add("491100001050175" + ":");
                            newList.Add("491100001050280" + ":");
                            newList.Add("Q0002");

                            break;
                        #endregion
                        #region Outer Label 213
                        //formerly outer label set 213
                        case "LAB-OC-MEDL-0006":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                            newList.Add("D11");
                            newList.Add("421100000150050" + "Gross Weight/Poids");
                            newList.Add("421100000150060" + "brut/Peso bruto:");
                            newList.Add("421100000150078" + "Net Weight/Poids");
                            newList.Add("421100000150088" + "net/Peso neto:");
                            newList.Add("421100000150187" + "Case #/N de caisse:");
                            newList.Add("491100100150155" + "Date of Manufacture");
                            newList.Add("491100100150163" + "Date de Fabrication");
                            newList.Add("491100100150171" + "Fecha de Fabricaci" + Chr(162) + "n");
                            newList.Add("491100100620187" + Chr(167));
                            newList.Add("D22");
                            newList.Add("1Y1100000150015" + "LOT");
                            newList.Add("421100001350035" + cCustOrderLot);
                            newList.Add("421100001350060" + nGross.ToString("0.0 Kgs"));
                            newList.Add("421100001350085" + nNett.ToString("0.0 Kgs"));
                            newList.Add("411100000150108" + "P.O.:" + Chr(224));
                            newList.Add("421100001350110" + cPo);
                            newList.Add("1Y1100000150113" + "MFG");
                            newList.Add("421100001350150" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("421100001350190" + cCtn);
                            newList.Add("401105002200190" + cLot);

                            break;
                        #endregion
                        #region Outer Label 212
                        //formerly outer label set 212
                        case "LAB-OC-HTLG-0131":

                            newList.Add("410005000150025" + cPo);
                            newList.Add("1Y1100000150040" + "LOT_T_V");
                            newList.Add("421100001000062" + cCustOrderLot);
                            newList.Add("422300002300138" + cCustSize);
                            newList.Add("1Y1100000150080" + "MFG_T_V");
                            newList.Add("421100001000110" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("411200000150173" + "Case.");
                            newList.Add("421100001000170" + cCtn);
                            newList.Add("410005001850188" + cLot);

                            break;
                        #endregion
                        #region Outer Label 210
                        //formerly outer label set 210
                        case "LAB-OC-KCGS-0002":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                            newList.Add("211100003690145" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100002190145" + dMfg.ToString("yyyy-MM"));
                            newList.Add("211100001020145" + dExp.ToString("yyyy-MM"));
                            newList.Add("211100003690128" + cCtn);
                            newList.Add("201100003690113" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1105003690061" + "C&G" + cGs1);     //GS1 barcode - check paramater
                            newList.Add("Q0002");
                            break;
                        #endregion
                        #region Outer Label 208
                        //formerly outer label print 208
                        case "LAB-OC-DASH-0001":

                            cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "10" + cPo;
                            cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(10)" + cPo;

                            newList.Add("410005000150030" + cPo);
                            newList.Add("411200000150055" + "Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000100060" + "MFG");
                            newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100100" + "LOT");
                            newList.Add("421105001000120" + cPo);
                            newList.Add("4e1105000100180" + "C&G" + cGs1);
                            newList.Add("400000000100190" + cReadable);
                            break;
                        #endregion
                        #region Outer Label 206
                        //formerly outer label print 206
                        case "LAB-OC-ANSL-0009":

                            newList.Add("411200000200060" + "LOT NO.");
                            newList.Add("4e1106001050080" + "C&G" + Right(cPo, 5));
                            newList.Add("410005001050095" + Right(cPo, 5));
                            newList.Add("411200000200120" + "CTN. NO.");
                            newList.Add("421100001050120" + cCtn);
                            newList.Add("411200000200150" + "MFG.");
                            newList.Add("421100001050148" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("411100000200173" + "MFG. REF.");
                            newList.Add("411100001050173" + cLot);
                            newList.Add("422200001300190" + PadCenter(cCustSize, 11));
                            break;
                        #endregion
                        #region Outer Label 202
                        //formerly outer label print 202
                        case "LAB-OC-ANSL-0008": //Ansell/Microflex

                            cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            newList.Add("411200000200040" + "PO No.");
                            newList.Add("421100001150038" + cPo);
                            newList.Add("411200000200070" + "Ctn.No.");
                            newList.Add("421100001150068" + cCtn);
                            newList.Add("411200000200099" + "Mfg. Date.");
                            newList.Add("421100001150097" + dMfg.ToString("yyyy-MM"));
                            newList.Add("411200000200130" + "Exp. Date.");
                            newList.Add("421100001150128" + dExp.ToString("yyyy-MM"));
                            newList.Add("422300001850125" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200160" + "Lot No.");
                            newList.Add("421100001150158" + dMfg.ToString("yyMM") + "LJ");
                            newList.Add("411200000200187" + "Batch");
                            newList.Add("421100001150185" + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                            newList.Add("100000002800115" + cLot);
                            break;
                        #endregion
                        #region Outer Label 201
                        //formerly outer label print 201
                        case "LAB-OC-HTLG-0126"://OBP

                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150132" + "PO No.");
                            newList.Add("421100001100130" + cPo);
                            newList.Add("411200000150162" + "Mfg. Date");
                            newList.Add("421100001100160" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150192" + "Exp. Date");
                            newList.Add("421100001100190" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150222" + "Ctn. No.");
                            newList.Add("421100001100220" + cCtn);
                            newList.Add("411200000150252" + "Gross Wt.");
                            newList.Add("421100001100250" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150282" + "Net Wt.");
                            newList.Add("421100001100280" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150310" + "Lot No.");
                            newList.Add("421100001100308" + cLot);
                            newList.Add("421100000500343" + cHartaSize);
                            newList.Add("4e3105001100374" + cCustOrderLot);
                            newList.Add("401105001100384" + cCustOrderLot);
                            break;
                        #endregion
                        #region Outer Label 203
                        //formerly outer label print 203
                        case "LAB-OC-HTLG-0127":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4);
                            newList.Add("2e1109009850105C&G" + cGs1);
                            newList.Add("201100009850090" + cReadable);
                            if (cCustSize.Contains("½"))
                                newList.Add("223400007000125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100007000125" + PadCenter(cCustSize, 5));

                            newList.Add("D11");
                            newList.Add("2e4102007050095" + cLot + cCtn);
                            newList.Add("210005006900085" + cLot + cCtn);
                            newList.Add("D22");

                            newList.Add("2X1110005350080L001500");
                            newList.Add("201100010350070Gross Wt");
                            newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100009050070Exp Date");
                            newList.Add("221100008350054" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100007200070PO No");
                            newList.Add("291100006700054" + cPo);

                            newList.Add("2X1110005350050L001500");
                            newList.Add("201100010350040Nett Wt");
                            newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100009050040Reorder No");
                            newList.Add("221100008350024" + cProdRefNo);
                            newList.Add("201100007200040Ctn No");
                            newList.Add("221100006700024" + cCtn);

                            newList.Add("2X1110005250010L200001");
                            if (cCustSize.Contains("½"))
                                newList.Add("223400004500125" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100004500125" + PadCenter(cCustSize, 5));

                            newList.Add("2e1109002750105C&G" + cGs1);
                            newList.Add("201100002750090" + cReadable);

                            newList.Add("D11");
                            newList.Add("2e4102004550095" + cLot + cCtn);
                            newList.Add("210005004400085" + cLot + cCtn);
                            newList.Add("D22");

                            newList.Add("2X1110000100080L001500");
                            newList.Add("201100005100070Gross Wt");
                            newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100003800070Exp Date");
                            newList.Add("221100003100054" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100001950070PO No");
                            newList.Add("291100001450054" + cPo);

                            newList.Add("2X1110000100050L001500");
                            newList.Add("201100005100040Nett Wt");
                            newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100003800040Reorder No");
                            newList.Add("221100003100024" + cProdRefNo);
                            newList.Add("201100001950040Ctn No");
                            newList.Add("221100001450024" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 204
                        //formerly outer label print 204
                        case "LAB-OC-HTLG-0128":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075" + "Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150082" + "MFG");
                            newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150119" + "EXP");
                            newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150157" + "LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            newList.Add("D11");
                            newList.Add("4e4102001750070" + cLot + cCtn);
                            newList.Add("410005001900080" + cLot + cCtn);
                            newList.Add("D22");
                            break;
                        #endregion
                        #region Outer Label 200
                        //formerly outer label print 200
                        case "LAB-OC-ANSL-0007":
                            newList.Add("411200000200055" + "Lot No.");
                            newList.Add("421100001150055" + dMfg.ToString("yyMM") + "LJ");
                            newList.Add("411200000200085" + "Batch");
                            newList.Add("421100001150085" + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                            newList.Add("411200000200115" + "Mfg. Date.");
                            newList.Add("421100001150115" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("411200000200145" + "Case No");
                            newList.Add("421100001150143" + cCtn);
                            newList.Add("411100000200168" + "    Ref.");
                            newList.Add("411100001150168" + cPo);
                            newList.Add("400000001150181" + cLot);
                            newList.Add("422200001200185" + PadCenter(cCustSize, 11));
                            break;
                        #endregion
                        #region Outer Label 199
                        //formerly outer label print 199
                        case "LAB-OC-HLYD-0004":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                            newList.Add("211100003500067" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100001650067" + dExp.ToString("yyyy-MM"));
                            newList.Add("211100000650067" + cCtn);
                            newList.Add("201100003690050" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1104003690010" + "C&G" + cGs1);     //GS1 barcode - check paramater
                            newList.Add("Q0002");
                            break;
                        #endregion
                        #region Outer Label 198
                        //formerly outer label print 198
                        case "LAB-OC-MEDL-0005":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //This is for BB Code

                            newList.Add("D11");
                            newList.Add("421100000150030" + "Date of Manufacture/");
                            newList.Add("421100000150040" + "Date de Fabrication:");
                            newList.Add("421100000150055" + "Gross Weight/");
                            newList.Add("421100000150065" + "Poids brut:");
                            newList.Add("421100000150105" + "Net Weight/");
                            newList.Add("421100000150115" + "Poids net:");
                            newList.Add("421100000150165" + "Case #/Caisse no.:");
                            newList.Add("D22");
                            newList.Add("421100001350040" + dMfg.ToString("MM-yyyy"));
                            newList.Add("421100001350065" + nGross.ToString("0.0 Kg"));
                            newList.Add("1Y1100000150070LOT");
                            newList.Add("421100001350090" + cCustOrderLot);
                            newList.Add("421100001350115" + nNett.ToString("0.0 Kg"));
                            newList.Add("411100000150138" + "P.O.:");
                            newList.Add("421100001350140" + cPo);
                            newList.Add("421100001350170" + cCtn);
                            newList.Add("401105002000190" + cLot);

                            break;
                        #endregion
                        #region Outer Label 193
                        //formerly outer label set 193
                        case "LAB-OC-ANSL-0006":

                            newList.Add("D10");
                            newList.Add("490000303100145" + "LOT #: " + dMfg.ToString("yyMM") + "LJ");
                            newList.Add("490000304300145" + "Batch: " + dMfg.ToString("yyMM") + Right(cItemNumber, 2) + Right(cOrderNum, 5).Substring(0, 2) + "LJ");
                            newList.Add("490000303100165" + "Mfg Ref: " + cLot);
                            newList.Add("490000303100185" + "Expiration Date");
                            newList.Add("490000303100200" + "Date d'expiration:");
                            newList.Add("490000303100220" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("490000304300185" + "Manufacturing Date");
                            newList.Add("490000304300200" + "Date de fabrication:");
                            newList.Add("490000304300220" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("490000303100240" + "Ctn. No: " + cCtn);
                            newList.Add("D10");
                            //newList.Add("Q0002"); 
                            break;
                        #endregion
                        #region Outer Label 195
                        //formerly outer label print 195
                        case "LAB-OC-MEDL-0002":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                            newList.Add("1Y1100000200025LOT");
                            newList.Add("421100001100045" + cCustOrderLot);
                            newList.Add("411200000200080Gross Wt.");
                            newList.Add("421100001100080" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200110Net Wt.");
                            newList.Add("421100001100110" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200140PO");
                            newList.Add("421100001100140" + cPo);
                            newList.Add("411200000200170Case No.");
                            newList.Add("421100001100170" + cCtn);
                            newList.Add("401105002000190" + cLot);
                            break;
                        #endregion
                        #region Outer Label 196
                        //formerly outer label print 196
                        case "LAB-OC-MEDL-0003":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                            newList.Add("1Y1100000200015LOT");
                            newList.Add("421100001100035" + cCustOrderLot);
                            newList.Add("411200000200065Gross Wt.");
                            newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200090Net Wt.");
                            newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200115PO.");
                            newList.Add("421100001100115" + cPo);
                            newList.Add("411200000200140Case No.");
                            newList.Add("421100001100140" + cCtn);
                            newList.Add("1Y1100000200145MFG");
                            newList.Add("421100001100170" + dMfg.ToString("MM-yyyy"));
                            newList.Add("401105002000190" + cLot);
                            break;
                        #endregion
                        #region Outer Label 197
                        //formerly outer label print 197
                        case "LAB-OC-MEDL-0004":

                            cCustOrderLot = "AM" + dMfg.ToString("yy").Substring(1, 1) + cPo.Substring(2); //this code is for BB

                            newList.Add("411100100150025Lot No.");
                            newList.Add("411100001400025" + cCustOrderLot);
                            newList.Add("411100000150045Gross Weight");
                            newList.Add("411100001400045" + nGross.ToString("0.0 Kgs"));
                            newList.Add("411100000150070Nett Weight");
                            newList.Add("411100001400070" + nNett.ToString("0.0 Kgs"));
                            newList.Add("411100000150095PO. No.");
                            newList.Add("411100001400095" + cPo);
                            newList.Add("411100000150120Ctn. No.");
                            newList.Add("411100001400120" + cCtn);
                            newList.Add("411100000150145Mfg. Date");
                            newList.Add("411100001400145" + dMfg.ToString("yyyy-MM"));
                            newList.Add("411100000150170Exp. Date");
                            newList.Add("411100001400170" + dExp.ToString("yyyy-MM"));
                            newList.Add("410000001800187" + cLot);
                            break;
                        #endregion
                        #region Outer Label 191
                        //formerly outer label set 191
                        case "LAB-OC-SFMH-0001":

                            newList.Add("121005004000020" + cPo);
                            newList.Add("122305003160020" + cCustOrderLot);
                            newList.Add("122205002430020" + dMfg.ToString("MM-yyyy"));
                            newList.Add("122205001720020" + dExp.ToString("MM-yyyy"));
                            newList.Add("122205001010020" + nGross.ToString("0.00 Kg"));
                            newList.Add("122205000260020" + nNett.ToString("0.00 Kg"));
                            newList.Add("420005001120388" + cLot);
                            newList.Add("121005000250300" + cCtn);
                            break;

                        #endregion
                        #region Outer Label 192
                        //formerly outer label set 192
                        case "LAB-OC-HTLG-0124":

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("421100000300030" + "Lot No.  :");
                            newList.Add("421100001700030" + cCustOrderLot);
                            newList.Add("421100000300060" + "Use By   :");
                            newList.Add("421100001700060" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("421100000300090" + "Case No. :");
                            newList.Add("421100001700090" + Right(cCtn, 4));
                            newList.Add("421100000300120" + cCustSize);
                            newList.Add("1Y1100001700100" + "REF");
                            newList.Add("421100002200120" + cProdRefNo);
                            newList.Add("110000003700020" + cLot);
                            newList.Add("4e1109000350220" + "C&G" + cGs1);
                            newList.Add("400000000500230" + cReadable);
                            break;
                        #endregion
                        #region Outer Label 190
                        //formerly outer label set 190
                        case "LAB-OC-HTLG-0123":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "30" + cCustRefNo + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(30)" + cCustRefNo + "(10)" + cCustOrderLot;

                            newList.Add("410005000200025" + cPo);
                            newList.Add("410005002000025" + "CTN: " + cCtn);
                            newList.Add("422300002000090" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150030" + "MFG");
                            newList.Add("421100000700055" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("1Y1100000150065" + "EXP");
                            newList.Add("421100000700090" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("1Y1100000150100" + "LOT");
                            newList.Add("421105000700120" + cCustOrderLot);
                            newList.Add("4e1106000150185" + "C&G" + cGs1);
                            newList.Add("400000000080195" + cReadable);
                            break;
                        #endregion
                        #region Outer Label 187
                        //formerly outer label set 187
                        case "LAB-OC-HTLG-0121":
                            newList.Add("421100000400033" + "Gross Wt: " + nGross.ToString("0.0 Kg"));
                            newList.Add("421100000400058" + "Nett  Wt: " + nNett.ToString("0.0 Kg"));
                            newList.Add("411100000400078" + "PO No.: " + cPo);
                            newList.Add("411100000400093" + cLot);
                            newList.Add("411100001900093" + cCtn);
                            break;
                        #endregion
                        #region Outer Label 186
                        //formerly outer label set 186
                        case "LAB-OC-CRMB-0001":
                            cGs1 = "010" + cOuterGtn14_Code + "17" + dExp.ToString("yyMM") + "3303" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "30" + nInnerBox.ToString() + "10" + cCustOrderLot;
                            cReadable = "(01)0" + cOuterGtn14_Code.Trim() + "(17)" + dExp.ToString("yyMM") + "(3303)" + Convert.ToInt16(nGross * 1000).ToString("D" + 6) + "(30)" + nInnerBox.ToString() + "(10)" + cCustOrderLot;
                            cPackDate = dMfg.ToString("MM/yyyy");

                            newList.Add("420000000150040" + "LUVAS PROCED. NAO CIRURGICO " + cCustSize); //Customer size
                            newList.Add("490000000150065" + "CREMER - COM P" + Chr(224) + " LISA AMBIDESTRA"); //Product and packing size
                            newList.Add("490000000150085" + "NAO ESTERIL CAIXA C/ 10 COM 100 UNDS"); //Product and packing size
                            newList.Add("440000001950130" + Right(cOuterGtn14_Code, 6)); //SKU code
                            newList.Add("4d3104000150130" + cCustRefNo); //DUN14 barcode
                            newList.Add("400000000150140" + cCustRefNo); //DUN14 HMR text
                            newList.Add("4e1103002650180C" + cCustOrderLot); //Customer lot (YYMMDDLN) barcode
                            newList.Add("410000000150195" + "PESO BRUTO: " + nGross.ToString("0.00 Kg")); //Gross weigh
                            newList.Add("410000002150195" + "LOTE: " + cCustOrderLot); //Customer lot (YYMMDDLN) HMR text
                            newList.Add("4X1110000150198" + "L002330"); //Draw Line
                            newList.Add("4X1110001950184" + "L030002"); //Draw Line
                            newList.Add("410000000150215" + "FAB.: " + cPackDate + "  " + cBatchTime.Substring(0, 5)); //Production date and time
                            newList.Add("410000002150215" + "VAL.: " + dExp.ToString("MM-yyyy")); //Exp Date
                            newList.Add("4e1106000150280C&G" + cGs1); //GS1-128 barcode
                            newList.Add("400000000150290" + cReadable); //GS1-128 HMR text
                            newList.Add("300000003650270" + cOrderNum); // Work order number
                            newList.Add("300000003750270" + cLot + "   " + cCtn + "   " + cHartaSize); //Hartalega internal lot, Carton number, Hartalega internal size
                            break;
                        #endregion

                        #region Outer Label 185
                        //formerly outer label set 185
                        case "LAB-OC-HTLG-0120":
                            cGs1 = "01" + cOuterGtn14_Code + "11" + dMfg.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(11)" + dMfg.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200055Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060MFG");
                            newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150100LOT");
                            newList.Add("421105001000115" + cCustOrderLot);
                            newList.Add("4e1105000150180C&G" + cGs1);
                            newList.Add("400000000080190" + cReadable);
                            break;
                        #endregion

                        #region Outer Label 184
                        //formerly outer label set 184
                        case "LAB-OC-HTLG-0119":
                            newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                            newList.Add("111100000800240" + cCtn);
                            newList.Add("121100000550020" + "LOT NO.:");
                            newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                            newList.Add("141100000100020" + cLot);
                            // newList.Add("Q0002"); 
                            break;
                        #endregion


                        #region Outer Set 178 (138)
                        //formerly outer label set 178
                        case "LAB-OC-HTLG-0113":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075" + "Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000080" + cCustSize);
                            newList.Add("1Y1100000150114" + "EXP");
                            newList.Add("421100001000140" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150157" + "LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            break;
                        #endregion

                        #region Outer Set 179 (59)
                        //formerly outer label set 179
                        case "LAB-OC-HTLG-0114":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("422300001800080" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200080Ctn. No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("1Y1100000150100MFG");
                            newList.Add("421100001100125" + (dMfg.ToString(outerLabelSetDateFormat)));
                            newList.Add("1Y1100000150150LOT");
                            newList.Add("4d3103001100175" + cLot);
                            newList.Add("410005001100187" + cLot);
                            break;
                        #endregion

                        #region Outer Set 180 (65)
                        //formerly outer label set 180
                        case "LAB-OC-HTLG-0115":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000112" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("421100001000145" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            break;
                        #endregion

                        #region Outer Set 181 (101)
                        //formerly outer label set 181
                        case "LAB-OC-HTLG-0116":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100000650051" + cCustOrderLot); //Lot by Size
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100000650179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;
                        #endregion

                        #region Outer Set 182 (108)
                        //formerly outer label set 182
                        case "LAB-OC-HTLG-0117":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100000650051" + cCustOrderLot);
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100000650095" + dMfg.ToString(outerLabelSetDateFormat));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("421100000650141" + dExp.ToString(outerLabelSetDateFormat));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100000650179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;
                        #endregion

                        #region Outer Label 74
                        //formerly outer label set 74
                        case "LAB-OC-HTLG-0049":
                            newList.Add("410005000200020" + cOrderNum);            //cust order number
                            newList.Add("422400002000090" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200080" + "Ctn. No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("1Y1100000150100" + "MFG");
                            newList.Add("421100001100125" + dMfg.ToString("MM-yyyy"));
                            newList.Add("1Y1100000150150" + "LOT");
                            newList.Add("421105001100168" + cPo);
                            newList.Add("401105001100190" + cLot);
                            break;
                        #endregion

                        //#region Outer Label 77
                        //case "77":
                        //    DateTime dExpLastDayOfMonth = new DateTime(dExp.Year, dExp.Month, 1);
                        //    dExpLastDayOfMonth = dExpLastDayOfMonth.AddMonths(1).AddDays(-1);

                        //    switch (cItemNumber)
                        //    {
                        //        case "FG-P027-001":
                        //            switch (cCustSize)
                        //            {
                        //                case "XS":
                        //                    cPzn = "3539159";
                        //                    cHartaRfCode = "9422001";
                        //                    break;
                        //                case "S":
                        //                    cPzn = "3539171";
                        //                    cHartaRfCode = "9422011";
                        //                    break;
                        //                case "M":
                        //                    cPzn = "3539188";
                        //                    cHartaRfCode = "9422021";
                        //                    break;
                        //                case "L":
                        //                    cPzn = "3539194";
                        //                    cHartaRfCode = "9422031";
                        //                    break;
                        //                default: //XL
                        //                    cPzn = "3539202";
                        //                    cHartaRfCode = "9422041";
                        //                    break;
                        //            }
                        //            break;

                        //        case "FG-P027-002":
                        //            switch (cCustSize)
                        //            {
                        //                case "XS":
                        //                    cPzn = "3538409";
                        //                    cHartaRfCode = "9421951";
                        //                    break;
                        //                case "S":
                        //                    cPzn = "3538415";
                        //                    cHartaRfCode = "9421961";
                        //                    break;
                        //                case "M":
                        //                    cPzn = "3538421";
                        //                    cHartaRfCode = "9421971";
                        //                    break;
                        //                case "L":
                        //                    cPzn = "3538438";
                        //                    cHartaRfCode = "9421981";
                        //                    break;
                        //                default: //XL
                        //                    cPzn = "3538444";
                        //                    cHartaRfCode = "9421991";
                        //                    break;
                        //            }
                        //            break;

                        //        case "FG-P027-003":
                        //            switch (cCustSize)
                        //            {
                        //                case "XS":
                        //                    cPzn = "3539343";
                        //                    cHartaRfCode = "9421952";
                        //                    break;
                        //                case "S":
                        //                    cPzn = "3539455";
                        //                    cHartaRfCode = "9421962";
                        //                    break;
                        //                case "M":
                        //                    cPzn = "3539509";
                        //                    cHartaRfCode = "9421972";
                        //                    break;
                        //                case "L":
                        //                    cPzn = "3539722";
                        //                    cHartaRfCode = "9421982";
                        //                    break;
                        //                default: //XL
                        //                    cPzn = "3539774";
                        //                    cHartaRfCode = "9421992";
                        //                    break;
                        //            }
                        //            break;

                        //        default: //not found. Example new brand
                        //            cPzn = "NOT SET";
                        //            cHartaRfCode = "NOT SET";
                        //            break;
                        //    }

                        //    newList.Add("491100100200035" + "EAN " + cOuterGtn14_Code);
                        //    newList.Add("491100102300035" + "REF. " + cHartaRfCode);
                        //    newList.Add("1Y1100000200055" + "LOT");
                        //    newList.Add("491100200600078" + cCustOrderLot.Substring(0, 2));
                        //    newList.Add("491100400900080" + cCustOrderLot.Substring(2, 2));
                        //    newList.Add("491100201250078" + cCustOrderLot.Substring(4, 5));
                        //    newList.Add("1Y1100002200050" + "EXP");
                        //    newList.Add("491100202600078" + dExp.ToString("yyyy-MM"));
                        //    newList.Add("4e1110000200205" + "C&G" + "010" + cOuterGtn14_Code);
                        //    newList.Add("401100000350215" + "(01)0" + cOuterGtn14_Code);
                        //    newList.Add("491100202000130" + "SIZE:");
                        //    newList.Add("491100502700133" + cCustSize);
                        //    newList.Add("491100202000175" + "PZN:");
                        //    newList.Add("491100202500175" + "10 x " + cPzn);
                        //    newList.Add("491100202000205" + "10 x " + cCustRefNo);
                        //    newList.Add("4e1110000200330" + "C&G" + "92" + cHartaRfCode + "17" + dExpLastDayOfMonth.ToString("yyMMdd") + "10" + cCustOrderLot);//check End of month
                        //    newList.Add("401100000200340" + "(92)" + cHartaRfCode + "(17)" + dExpLastDayOfMonth.ToString("yyMMdd") + "(10)" + cCustOrderLot);//check End of month
                        //    newList.Add("301100004000340" + cLot + "  " + cCtn);
                        //    // newList.Add("Q0002"); 
                        //    break;
                        //#endregion

                        #region Outer Label 81
                        //formerly outer label set 81
                        case "LAB-OC-HTLG-0054":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150135" + "PO No.");
                            newList.Add("421100001100133" + cPo);
                            newList.Add("411200000150170" + "Mfg. Date");
                            newList.Add("421100001100168" + dMfg.ToString("yyyy-MM"));
                            newList.Add("411200000150205" + "Exp. Date");
                            newList.Add("421100001100203" + dExp.ToString("yyyy-MM"));
                            newList.Add("411200000150240" + "Ctn. No.");
                            newList.Add("421100001100238" + cCtn);
                            newList.Add("411200000150275" + "Gross Wt.");
                            newList.Add("421100001100273" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150310" + "Net Wt.");
                            newList.Add("421100001100308" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150345" + "Lot No.");
                            newList.Add("421105001100345" + cLot + " " + cHartaSize);
                            break;
                        #endregion

                        #region Outer Label 135
                        //formerly outer label set 135
                        case "LAB-OC-HTLG-0085":
                            newList.Add("221100002800070" + "Carton No: ");
                            newList.Add("221100001600070" + Right(cCtn, 4) + "/" + cTotalCarton); // xxxx/yyyy - xxxx : running carton , yyyy : total carton per 1 SIZE
                            newList.Add("221100000580050" + PadCenter(cCustSize, 5));
                            newList.Add("211100001600038" + cLot);
                            break;
                        #endregion

                        #region Outer Label 142
                        //formerly outer label set 142
                        case "LAB-OC-HLYD-0002":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot.Substring(0, 9) + "30" + cProdRefNo;
                            cReadable = "(01) " + cOuterGtn14_Code.Substring(0, 1) + " " + cOuterGtn14_Code.Substring(1, 7) + " " + cOuterGtn14_Code.Substring(8, 5)
                                      + " " + cOuterGtn14_Code.Substring(13, 1) + "(10) " + cLot.Substring(0, 9) + " (30)" + cProdRefNo;

                            newList.Add("211100003690076" + cLot.Substring(0, 9));  //Check substr;
                            newList.Add("211100002190076" + dMfg.ToString("yyyy-MM"));
                            newList.Add("211100001020076" + dExp.ToString("yyyy-MM"));
                            newList.Add("201100003690063" + cReadable);   //Readable barcode - check paramater
                            newList.Add("2e1105003690011C&G" + cGs1);     //GS1 barcode - check paramater
                                                                          //newList.Add("Q0002");
                            break;
                        #endregion

                        #region Outer Label 143
                        //formerly outer label set 143
                        case "LAB-OC-DBGL-0001":
                            newList.Add("1Y1100000150015" + "MFG");
                            newList.Add("421100001000040" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150080" + "EXP");
                            newList.Add("421100001000105" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150155" + "LOT");
                            newList.Add("4e1105000100230" + "C&G" + "100000000000" + cPo.Substring(0, 10) + "21000000000000");  //check C&G and Substr
                            newList.Add("410005000150245" + "100000000000" + cPo.Substring(0, 10) + "21000000000000");          //check Substr      
                            newList.Add("410005002600280" + cLot);
                            break;
                        #endregion

                        #region Outer Label 151
                        //formerly outer label set 151
                        case "LAB-OC-HTLG-0094":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("421200001800090" + PadCenter(cCustSize, 10));
                            newList.Add("411200000200080" + "Ctn.No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("1Y1100000150100" + "MFG");
                            newList.Add("421100001100125" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150150" + "LOT");
                            newList.Add("4d3103001100175" + cLot);
                            newList.Add("410005001100187" + cLot);
                            break;
                        #endregion

                        #region Outer Label 157
                        //formerly outer label set 157
                        case "LAB-OC-HTLG-0098":
                            newList.Add("410005000150020" + cPo);
                            newList.Add("1Y1100000150027" + "LOT_T_V");
                            newList.Add("421100001000051" + cCustOrderLot); //product code by size
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150065" + "MFG_T_V");
                            newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150122" + "EXP");
                            newList.Add("421100001000143" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150183" + "Case.");
                            newList.Add("421100001000179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;
                        #endregion

                        #region Outer Label 161
                        //formerly outer label set 161
                        case "LAB-OC-UTSU-0001":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cLot;

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200060" + "Ctn.No.");
                            newList.Add("421100001000060" + cCtn);
                            newList.Add("1Y2100000150070" + "LOT_UTSU");
                            newList.Add("421100001000092" + cLot);
                            newList.Add("1Y2100000150102" + "EXP_UTSU");
                            newList.Add("421105001000120" + dExp.ToString("yyyy.MM"));
                            newList.Add("4e1105000150180C&G" + cGs1); //GS1 barcode - check paramater
                            newList.Add("400000000150190" + cReadable); //Readable barcode - check paramater"
                            break;
                        #endregion

                        #region Outer Label 164
                        //formerly outer label set 164
                        case "LAB-OC-GPTH-0001":
                            newList.Add("420000000200030" + cProdRefNo); // change from cCustSize
                            newList.Add("411100000200048" + "Greenpath Studios");
                            newList.Add("411100000200063" + "CleanPro Powder - Free");
                            newList.Add("411100000200078" + "Blue Nitrile Gloves");
                            newList.Add("411100000200093" + "Qty: 10 pk.(100ea / pk)");
                            newList.Add("411100000200110" + "LOT: ");
                            newList.Add("411100000600110" + cLot);
                            newList.Add("411100001970110" + "CTN: ");
                            newList.Add("411100002370110" + cCtn);
                            newList.Add("4X0000000400116" + "L011222");
                            newList.Add("4X0000000400127" + "L040012");
                            newList.Add("410005000870190" + cOuterGtn14_Code); //Product code
                            newList.Add("4d4104000700167" + cOuterGtn14_Code); //Product code
                            newList.Add("4X0000000400167" + "L011222");
                            newList.Add("4X0000002500127" + "L040012");
                            break;
                        #endregion

                        #region Outer Label 165
                        //formerly outer label set 165
                        case "LAB-OC-HTLG-0104":
                            newList.Add("421100000200045" + cPo);
                            newList.Add("421100000200085" + cLot);
                            newList.Add("421100000200125" + dMfg.ToString("yyyy-MM"));
                            newList.Add("421100000200165" + dExp.ToString("yyyy-MM"));
                            newList.Add("411100001500165" + "CTN: " + cCtn);
                            break;
                        #endregion

                        #region Outer Label 175
                        //formerly outer label set 175
                        case "LAB-OC-HTLG-0111":
                            newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                            newList.Add("111100000800240" + cCtn);
                            newList.Add("121100000550020" + "LOT NO.:");
                            newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                            newList.Add("141100000100020" + cLot);
                            // newList.Add("Q0004");
                            break;
                        #endregion

                        #region Outer Label 174
                        //formerly outer label set 174
                        case "LAB-OC-HTLG-0110":
                            newList.Add("421100000150030" + "LOT NO:");
                            newList.Add("421100001050030" + cCustOrderLot);
                            newList.Add("1Y1100000200040" + "MFG");
                            newList.Add("421100001050065" + dMfg.ToString("yyyy") + "-" + dMfg.ToString("MM") + "-" + dMfg.ToString("dd"));
                            newList.Add("431100002200070" + PadCenter(cCustSize, 5));
                            newList.Add("411100001050090" + cCtn);
                            newList.Add("411100001700090" + cLot);
                            break;
                        #endregion

                        #region Outer Label 173
                        //formerly outer label set 173
                        case "LAB-OC-ANSL-0005":
                            switch (cCustSize.Trim())
                            {
                                case "XS":
                                    cCustSizeFull = "X-SMALL";
                                    cCustRefNo = "313041060";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410603";
                                    cCustIntrnlPrd = "827388";
                                    break;
                                case "S":
                                    cCustSizeFull = "SMALL";
                                    cCustRefNo = "313041065";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410658";
                                    cCustIntrnlPrd = "827389";
                                    break;
                                case "M":
                                    cCustSizeFull = "MEDIUM";
                                    cCustRefNo = "313041070";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410702";
                                    cCustIntrnlPrd = "827390";
                                    break;
                                case "L":
                                    cCustSizeFull = "LARGE";
                                    cCustRefNo = "313041075";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410757";
                                    cCustIntrnlPrd = "827391";
                                    break;
                                case "XL":
                                    cCustSizeFull = "X-LARGE";
                                    cCustRefNo = "313041080";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "35414566410801";
                                    cCustIntrnlPrd = "827392";
                                    break;
                            }

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                            newList.Add("421100100150035" + "PRODUCT:MICRO-TOUCH BLUE NITRILE");
                            newList.Add("421100000150075" + "SIZE:");
                            newList.Add("421100000800075" + cCustSizeFull);
                            newList.Add("421100001850075" + "SHIPPER");
                            newList.Add("421100002720075" + "BOX");
                            newList.Add("421100003120075" + "OF");
                            newList.Add("421100003400075" + cPackSize);
                            newList.Add("421100000150115" + "REF");
                            newList.Add("421100000800115" + cCustRefNo);
                            newList.Add("1Y1100002200090" + "MFG");
                            newList.Add("421100002700115" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("1Y1100000150135" + "LOT");
                            newList.Add("421100000800155" + cCustOrderLot);
                            newList.Add("1Y1100002200130" + "EXP");
                            newList.Add("421100002700155" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("411100000150178" + "INTERNAL PRODUCT ID:" + cCustIntrnlPrd);
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250" + "C&G" + cGs1);
                            newList.Add("411100000150290" + "CTN#: " + cCtn);
                            newList.Add("411100001800290" + "MFG REF: " + cLot);
                            break;
                        #endregion

                        #region Outer Label 172
                        //formerly outer label set 172
                        case "LAB-OC-ANSL-0004":

                            switch (cCustSize.Trim())
                            {
                                case "L":
                                    cCustSizeFull = "LARGE";
                                    cCustRefNo = "6034303";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210752";
                                    cCustIntrnlPrd = "826402";
                                    break;
                                case "M":
                                    cCustSizeFull = "MEDIUM";
                                    cCustRefNo = "6034302";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210707";
                                    cCustIntrnlPrd = "826401";
                                    break;
                                case "S":
                                    cCustSizeFull = "SMALL";
                                    cCustRefNo = "6034301";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210653";
                                    cCustIntrnlPrd = "826400";
                                    break;
                                case "XL":
                                    cCustSizeFull = "X-LARGE";
                                    cCustRefNo = "6034304";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210806";
                                    cCustIntrnlPrd = "826403";
                                    break;
                                case "XS":
                                    cCustSizeFull = "X-SMALL";
                                    cCustRefNo = "6034300";
                                    cPackSize = "2000";
                                    cOuterGtn14_Code = "30884792210608";
                                    cCustIntrnlPrd = "826399";
                                    break;
                                case "XXL":
                                    cCustSizeFull = "XX-LARGE";
                                    cCustRefNo = " 6034305";
                                    cPackSize = "1800";
                                    cOuterGtn14_Code = "30884792210851";
                                    cCustIntrnlPrd = "826404";
                                    break;
                            }

                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot + "92" + cCustIntrnlPrd;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot + "(92)" + cCustIntrnlPrd;

                            newList.Add("421100100150035" + "PRODUCT : MICRO-TOUCH NITRILE");
                            newList.Add("421100000150075" + "SIZE:");
                            newList.Add("421100000800075" + cCustSizeFull);
                            newList.Add("421100001850075" + "SHIPPER");
                            newList.Add("421100002720075" + "BOX");
                            newList.Add("421100003120075" + "OF");
                            newList.Add("421100003400075" + cPackSize);
                            newList.Add("421100000150115" + "REF");
                            newList.Add("421100000800115" + cCustRefNo);
                            newList.Add("1Y1100002200090" + "MFG");
                            newList.Add("421100002700115" + dMfg.ToString("yyyy-MM-dd"));
                            newList.Add("1Y1100000150135" + "LOT");
                            newList.Add("421100000800155" + cCustOrderLot);
                            newList.Add("1Y1100002200130" + "EXP");
                            newList.Add("421100002700155" + dExp.ToString("yyyy-MM-dd"));
                            newList.Add("411100000150178" + "INTERNAL PRODUCT ID:" + cCustIntrnlPrd);
                            newList.Add("401100000150260" + cReadable);
                            newList.Add("4e1107000150250" + "C&G" + cGs1);
                            newList.Add("411100000150290" + "CTN#: " + cCtn);
                            newList.Add("411100001800290" + "MFG REF: " + cLot);
                            break;
                        #endregion

                        #region Set 171 - 25/05/2017
                        //formerly outer label set 171
                        case "LAB-OC-HTLG-0109":
                            newList.Add("410005000200020" + cPo.Trim());
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100001000051" + cCustOrderLot); //Lot By Size
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100001000179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            // newList.Add("Q0002");  // to include 2 printing in 1 time
                            break;
                        #endregion 171 

                        #region Outer Label 167
                        //formerly outer label set 167
                        case "LAB-OC-HTLG-0106":
                            newList.Add("411200000200037" + "Lot No.  :");
                            newList.Add("411200001200037" + cLot);
                            newList.Add("411200000200067" + "Exp Date : ");
                            newList.Add("411200001200067" + dExp.ToString("MMM yyyy"));
                            newList.Add("411200000200098" + "Ctn No.  :");
                            newList.Add("411200001200098" + cCtn);
                            newList.Add("431100002200085" + cHartaSize);
                            break;
                        #endregion
                        //formerly outer label set 163
                        case "LAB-OC-HTLG-0103":
                            newList.Add("411100000250030Batch:");
                            newList.Add("411100000250047" + cLot);
                            newList.Add("1Y1100000250055MFG");
                            newList.Add("411100000650080" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411100001600030CTN.:");
                            newList.Add("411100001950030" + cCtn);
                            newList.Add("4d3103001600070" + cCustOrderLot);
                            newList.Add("410005001600085" + cCustOrderLot);
                            break;
                        //formerly outer label set 155
                        case "LAB-OC-MEDL-0001":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;

                            newList.Add("2e2105013550105C&G" + cGs1);
                            newList.Add("200000013550090" + cReadable);
                            newList.Add("242200009900100" + PadCenter(cCustSize, 3));
                            newList.Add("2X1110007100080" + "L001665");
                            newList.Add("201100013750070" + "PO No");
                            newList.Add("221100013250054" + cPo);
                            newList.Add("201100011550070" + "Mfg Date");
                            newList.Add("221100010950054" + dEtd.ToString("yyyy-MM")); //Shipment ETD date
                            newList.Add("201100009900070" + "Gross Wt.");
                            newList.Add("221100009300054" + nGross.ToString("0.0 Kgs"));
                            newList.Add("201100008250070" + "Ctn No");
                            newList.Add("291100007800054" + cCtn);
                            newList.Add("200000008250020" + cLot);
                            newList.Add("2X1110007100050" + "L001665");
                            newList.Add("201100013750040" + "Lot No");
                            newList.Add("221100013250024" + cCustOrderLot);
                            newList.Add("201100011550040" + "Exp Date");
                            newList.Add("221100010950024" + dExp.ToString("yyyy-MM"));
                            newList.Add("201100009900040" + "Nett Wt.");
                            newList.Add("221100009300024" + nNett.ToString("0.0 Kgs"));
                            newList.Add("2X1110006950010" + "L200001");
                            newList.Add("242200005050100" + PadCenter(cCustSize, 3));
                            newList.Add("2e2105003600105C&G" + cGs1);
                            newList.Add("200000003600090" + cReadable);
                            newList.Add("2X1110000100080" + "L001665");
                            newList.Add("201100006750070" + "PO No");
                            newList.Add("221100006250054" + cPo);
                            newList.Add("201100004550070" + "Mfg Date");
                            newList.Add("221100003950054" + dEtd.ToString("yyyy-MM"));
                            newList.Add("201100002900070" + "Gross Wt.");
                            newList.Add("221100002300054" + nGross.ToString("0.0 Kgs"));
                            newList.Add("201100001250070" + "Ctn No");
                            newList.Add("291100000800054" + cCtn);
                            newList.Add("200000001250020" + cLot);
                            newList.Add("2X1110000100050" + "L001665");
                            newList.Add("201100006750040" + "Lot No");
                            newList.Add("221100006250024" + cCustOrderLot);
                            newList.Add("201100004550040" + "Exp Date");
                            newList.Add("221100003950024" + dExp.ToString("yyyy-MM"));
                            newList.Add("201100002900040" + "Nett Wt.");
                            newList.Add("221100002300024" + nNett.ToString("0.0 Kgs"));

                            break;
                        //formerly outer label set 154
                        case "LAB-OC-KCLG-0002":
                            newList.Add("421100002450100" + dExp.ToString("yyyy-MM"));
                            newList.Add("411100002000350" + cPo);
                            newList.Add("411100003750350" + "LOT " + cLot);
                            newList.Add("411100006100350" + "CTN# " + cCtn);
                            break;
                        //formerly outer label set 153
                        case "LAB-OC-HTLG-0096":
                            newList.Add("191000000500020" + "Lot No.");
                            newList.Add("191000000500100" + cCustOrderLot);
                            newList.Add("101100000300100" + cCtn + "   " + cLot);
                            break;
                        //formerly outer label set 146
                        case "LAB-OC-KCLG-0001":
                            newList.Add("421100001500100" + dExp.ToString("yyyy-MM"));
                            newList.Add("411100000200350" + cPo);
                            newList.Add("411100001300350" + "LOT " + cLot);
                            newList.Add("411100003000350" + "CTN# " + cCtn);
                            break;
                        //formerly outer label set 105
                        case "LAB-OC-HTLG-0070":
                            newList.Add("111200000600020" + "LOT NO.:");
                            newList.Add("121100000600110" + cLot);
                            newList.Add("111100000100240" + cCtn);
                            break;
                        //formerly outer label set 152
                        case "LAB-OC-HTLG-0095":
                            newList.Add("411100100150025Lot No.");
                            newList.Add("411100001400025" + cCustOrderLot);
                            newList.Add("411100000150045Gross Weight");
                            newList.Add("411100001400045" + nGross.ToString("0.0 Kgs"));
                            newList.Add("411100000150070Nett Weight");
                            newList.Add("411100001400070" + nNett.ToString("0.0 Kgs"));
                            newList.Add("411100000150095PO. No.");
                            newList.Add("411100001400095" + cPo);
                            newList.Add("411100000150120Ctn. No.");
                            newList.Add("411100001400120" + cCtn);
                            newList.Add("411100000150145Mfg. Date");
                            newList.Add("411100001400145" + dMfg.ToString("yyyy-MM"));
                            newList.Add("411100000150170Exp. Date");
                            newList.Add("411100001400170" + dExp.ToString("yyyy-MM"));
                            newList.Add("410000001800187" + cLot);
                            break;
                        //formerly outer label set 79
                        case "LAB-OC-HTLG-0052":
                            newList.Add("411200000200058Ctn. No.");
                            newList.Add("421100001000058" + cCtn);
                            newList.Add("422300002000108" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150070EXP");
                            newList.Add("421100001000095" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150115LOT");
                            newList.Add("421100001000135" + cCustOrderLot);
                            newList.Add("4d3103001000180" + cLot);
                            newList.Add("410005001000195" + cLot);
                            break;
                        //formerly outer label set 136
                        case "LAB-OC-HTLG-0086":
                            newList.Add("1Y1100000650020LOT_H");
                            newList.Add("191000000650100" + cCustOrderLot);
                            newList.Add("1Y1100000250020MFG_H");
                            newList.Add("191000000350100" + dMfg.ToString("yyyy-MM"));
                            newList.Add("101100000150100" + cCtn + "   " + cLot);
                            // newList.Add("Q0002"); 
                            break;
                        //formerly outer label set 147
                        case "LAB-OC-HTLG-0091":
                            newList.Add("1Y1100000150015LOT");
                            newList.Add("421100000800030" + cCustOrderLot);
                            newList.Add("421100000150080" + "Gross Weight:  " + nGross.ToString("0.0 Kgs"));
                            newList.Add("421100000150125" + "Net Weight:    " + nNett.ToString("0.0 Kgs"));
                            newList.Add("421100000150170" + "PO:      " + cPo);
                            newList.Add("1Y1100000150190MFG_T_V");
                            newList.Add("421100001200230" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150260EXP_T_V");
                            newList.Add("421100001200290" + dExp.ToString("yyyy-MM"));
                            newList.Add("421100000150340" + "Case #:");
                            newList.Add("421100001200340" + cCtn);
                            newList.Add("411100001900380" + cLot);
                            break;
                        //formerly outer label set 128
                        case "LAB-OC-CMTS-0002":
                            //cCustOrderLot = dEtd.ToString("ddMMyyyy") + cProdRefNo;
                            newList.Add("411200000200058Ctn. No.");
                            newList.Add("421100001000058" + cCtn);
                            newList.Add("422300002000108" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150070EXP");
                            newList.Add("421100001000095" + dExp.ToString("MMM yyyy"));
                            newList.Add("1Y1100000150115LOT");
                            newList.Add("421100001000135" + cCustOrderLot);
                            newList.Add("4d3103001000180" + cLot);
                            newList.Add("410005001000195" + cLot);
                            break;
                        //formerly outer label set 104
                        case "LAB-OC-HTLG-0069":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411100000200050Ctn. No.");
                            newList.Add("421100001000052" + cCtn);
                            newList.Add("411100000200072Date of");
                            newList.Add("411100000200082Import:");
                            newList.Add("421100001000080" + dEtd.ToString("MMM-yyyy"));
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000200085MFG");
                            newList.Add("421100001000110" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000200119EXP");
                            newList.Add("421100001000140" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000200154LOT");
                            newList.Add("4d3103001000180" + cLot);
                            newList.Add("410005001000195" + cLot);
                            break;
                        //formerly outer label set 145
                        case "LAB-OC-HTLG-0090":
                            dMfg = DateTime.ParseExact(cCustOrderLot.Substring(4, 2) + cCustOrderLot.Substring(2, 2) + cCustOrderLot.Substring(0, 2), "ddMMyy", CultureInfo.InvariantCulture);
                            dExp = dMfg.AddMonths(nExpMonth);
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;
                            newList.Add("422200000150065" + PadCenter(cCustSize, 11));
                            newList.Add("490000000150110Caixa No /");
                            newList.Add("491100000150130Carton No :");
                            newList.Add("491100002000130" + cCtn);
                            newList.Add("491100000150160" + "Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                            newList.Add("491100000150180Manufacturing Date:");
                            newList.Add("491100002000185" + dMfg.ToString("MM/yyyy"));
                            newList.Add("491100000150210Validade/Expiry Date:");
                            newList.Add("491100002000210" + dExp.ToString("MM/yyyy"));
                            newList.Add("491100000150240Lote:");
                            newList.Add("491100002000240" + cCustOrderLot);
                            newList.Add("401100000150255" + cPo + "  " + cLot);
                            newList.Add("4e2105000150320C&G" + cGs1);
                            newList.Add("400000000150330" + cReadable.ToString());
                            break;
                        //formerly outer label set 91
                        case "LAB-OC-HTLG-0060":
                            newList.Add("411100000150026PO NO: " + cPo);
                            newList.Add("411100000150043Ctn. No.: " + cCtn);
                            newList.Add("411100000150058Gross Weight: " + nGross.ToString("0.0 Kg"));
                            newList.Add("411100000150075Net Weight: " + nNett.ToString("0.0 Kg"));
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150080MFG");
                            newList.Add("421100001000108" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150116EXP");
                            newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150156LOT");
                            newList.Add("4d3103001000178" + cLot);
                            newList.Add("410005001000193" + cLot);
                            break;
                        //formerly outer label set 139
                        case "LAB-OC-HTLG-0089":
                            cCustOrderLot = dMfg.ToString("yyMM") + Right(cOrderNum, 5).Replace("/", "");
                            newList.Add("410005000200025" + cPo);
                            newList.Add("422400000100117" + PadCenter(cCustSize, 11));
                            newList.Add("421100000000159" + PadCenter(cBrand, 25));
                            newList.Add("411200000100205Ctn. No.");
                            newList.Add("421100001100203" + cCtn);
                            newList.Add("421100001100248" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100001100294" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100220LOGO");
                            newList.Add("420000001100340" + cCustOrderLot);
                            newList.Add("410000001700388" + cLot);
                            break;
                        //formerly outer label set 137
                        case "LAB-OC-HTLG-0087":
                            newList.Add("191000000500030Ctn.No. " + cCtn);
                            newList.Add("141100000400190" + PadCenter(cCustSize, 5));
                            newList.Add("111000000200030" + cOrderNum);
                            newList.Add("111000000200150" + cLot);
                            break;
                        //formerly outer label set 120
                        case "LAB-OC-HTLG-0079":
                            cCustOrderLot = dMfg.ToString("yyMM") + "01" + cPline;
                            newList.Add("422200000100045" + PadCenter(cCustSize, 11));
                            newList.Add("491100000150070Caixa No /");
                            newList.Add("491100000150090Carton No :");
                            newList.Add("491100002000080" + cCtn);
                            newList.Add("491100000150110Data de Fabrica" + Chr(Convert.ToInt32("135")) + Chr(Convert.ToInt32("131")) + "o/");
                            newList.Add("491100000150130Manufacturing Date:");
                            newList.Add("491100002000125" + dMfg.ToString("MM/yyyy"));
                            newList.Add("491100000150150Validade/Expiry Date:");
                            newList.Add("491100002000150" + dExp.ToString("MM/yyyy"));
                            newList.Add("491100000150170Lote:");
                            newList.Add("491100002000170" + cCustOrderLot);
                            newList.Add("401100000150185" + cPo + "  " + cLot);
                            break;
                        //formerly outer label print 2
                        case "LAB-OC-HTLG-0002":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150135PO No.");
                            newList.Add("421100001100133" + cPo);
                            newList.Add("411200000150170Mfg. Date");
                            newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150205Ctn. No.");
                            newList.Add("421100001100203" + cCtn);
                            newList.Add("411200000150240Gross Wt.");
                            newList.Add("421100001100238" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150275Net Wt.");
                            newList.Add("421100001100273" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150310Reorder No.");
                            newList.Add("421100001100308" + cCustRefNo);
                            newList.Add("411200000150345Lot No.");
                            newList.Add("421100002500343" + cHartaSize);
                            newList.Add("4d3105001100374" + cLot);
                            newList.Add("401105001100384" + cLot);
                            break;
                        //formerly outer label set 5
                        case "LAB-OC-HTLG-0004":
                            newList.Add("422400000100100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000150135PO No.");
                            newList.Add("421100001100133" + cPo);
                            newList.Add("411200000150170Mfg. Date");
                            newList.Add("421100001100168" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411200000150205Ctn. No.");
                            newList.Add("421100001100203" + cCtn);
                            newList.Add("411200000150240Gross Wt.");
                            newList.Add("421100001100238" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000150275Net Wt.");
                            newList.Add("421100001100273" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000150310Lot No.");
                            newList.Add("421100001100308" + cCustOrderLot);
                            newList.Add("421100002500343" + cHartaSize);
                            newList.Add("4d3105001100374" + cLot);
                            newList.Add("401105001100384" + cLot);
                            break;
                        //formerly outer label set 75
                        case "LAB-OC-HTLG-0050":
                            newList.Add("110000000800135" + PadCenter(cPo, 15));
                            newList.Add("110000000650115Ctn.No.");
                            newList.Add("110000000650210" + cCtn);
                            newList.Add("110000000500115Mfg. Date.");
                            newList.Add("110000000500210" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("110000000350115Lot No.");
                            newList.Add("1d3102500200180" + cLot);
                            newList.Add("110002500050180" + cLot);
                            newList.Add("123300000250020" + PadCenter(cCustSize, 3));
                            break;
                        //formerly outer label set 80
                        case "LAB-OC-HTLG-0053":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150089EXP");
                            newList.Add("421100001000112" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150140LOT");
                            newList.Add("4d3103001000170" + cLot);
                            newList.Add("410005001000185" + cLot);
                            break;
                        //formerly outer label set 100
                        case "LAB-OC-HTLG-0067":
                            newList.Add("410005000200020" + cPo.Trim());
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100001000051" + cCustOrderLot); //Lot By Size
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100001000095" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("421100001000141" + dExp.ToString("MMM-yyyy"));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100001000179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;
                        //formerly outer label set 121
                        case "LAB-OC-HTLG-0080":
                            newList.Add("421100000150035" + cLot);
                            newList.Add("411100001900035" + cOrderNum);
                            newList.Add("421100000150090" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("411100001900090" + cCtn);
                            newList.Add("421100000150130" + dExp.ToString("MMM-yyyy"));
                            newList.Add("422300001900160" + cCustSize);
                            newList.Add("421100000150160" + nGross.ToString("0.0 Kg"));
                            newList.Add("421100000150190" + nNett.ToString("0.0 Kg"));
                            break;
                        //formerly outer label set 108
                        case "LAB-OC-HTLG-0073":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("421100001000051" + cCustOrderLot);
                            newList.Add("422300002150138" + cCustSize);
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("421100001000095" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("421100001000141" + dExp.ToString("yyyy-MM"));
                            newList.Add("411200000150183Case.");
                            newList.Add("421100001000179" + cCtn);
                            newList.Add("410005001850188" + cLot);
                            break;
                        //formerly outer label set 112
                        case "LAB-OC-HTLG-0075":
                            cCustOrderLot = cPo + "-" + cBrand;
                            newList.Add("1Y1100000150030LOT");
                            newList.Add("411200000800053" + cCustOrderLot);
                            newList.Add("422300001950138" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150070MFG");
                            newList.Add("411200000800100" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150115EXP");
                            newList.Add("411200000800143" + dExp.ToString("yyyy-MM"));
                            newList.Add("411200000150183Case.");
                            newList.Add("411200000800183" + cCtn);
                            newList.Add("410005001700188" + cLot);
                            break;
                        //formerly outer label set 110
                        case "LAB-OC-HTLG-0074":
                            newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                            newList.Add("111100000800240" + cCtn);
                            newList.Add("121100000550020" + "LOT NO.:");
                            newList.Add("121100000550240" + PadCenter(cCustSize, 5));
                            newList.Add("141100000100020" + cLot);
                            break;
                        //formerly outer label set 67
                        case "LAB-OC-HTLG-0045":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200058Ctn. No.");
                            newList.Add("421100001000058" + cCtn);
                            newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060MFG");
                            newList.Add("421100001000085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150095EXP");
                            newList.Add("421100001000121" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150130LOT");
                            newList.Add("421100001000149" + cCustOrderLot + cCustRefNo);
                            newList.Add("4d3103001000185" + cLot);
                            newList.Add("410005001000200" + cLot);
                            break;
                        //formerly outer label set 69
                        case "LAB-OC-HTLG-0047":
                            newList.Add("422200000300060" + PadCenter(cCustSize, 11));
                            newList.Add("411200000200100PO No.");
                            newList.Add("421100001100100" + cPo);
                            newList.Add("411200000200130Ctn. No.");
                            newList.Add("421105001100130" + cCtn);
                            newList.Add("411200000200165Lot No.");
                            newList.Add("4d3103001100170" + cLot);
                            newList.Add("410005001100187" + cLot);
                            break;
                        //formerly outer label set 58
                        case "LAB-OC-HTLG-0039":
                            newList.Add("1Y1100000200015LOT");
                            newList.Add("421100001100035" + cCustOrderLot);
                            newList.Add("411200000200065Gross Wt.");
                            newList.Add("421100001100065" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200090Net Wt.");
                            newList.Add("421100001100090" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200115PO.");
                            newList.Add("421100001100115" + cPo);
                            newList.Add("411200000200140Case No.");
                            newList.Add("421100001100140" + cCtn);
                            newList.Add("1Y1100000200145MFG");
                            newList.Add("421100001100170" + dMfg.ToString("MM-yyyy"));
                            newList.Add("401105002000190" + cLot);
                            break;
                        //formerly outer label set 59
                        case "LAB-OC-HTLG-0040":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("421200001800090" + PadCenter(cCustSize, 10));
                            newList.Add("411200000200080Ctn. No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("1Y1100000150100MFG");
                            newList.Add("421100001100125" + (dMfg.ToString("MMM-yyyy")));
                            newList.Add("1Y1100000150150LOT");
                            newList.Add("4d3103001100175" + cLot);
                            newList.Add("410005001100187" + cLot);
                            break;
                        //formerly outer label set 61
                        case "LAB-OC-HTLG-0041":
                            newList.Add("410005000200023" + cPo);
                            newList.Add("422400002000090" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200080Ctn. No.");
                            newList.Add("421100001100080" + cCtn);
                            newList.Add("411200000200110Gross Wt.");
                            newList.Add("421100001100110" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200140Net Wt.");
                            newList.Add("421100001100140" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200170Lot No.");
                            newList.Add("4d3103001100175" + cLot);
                            newList.Add("400005001100187" + cLot);
                            break;
                        //formerly outer label set 44
                        case "LAB-OC-HTLG-0031":
                            newList.Add("191100000800070" + PadCenter(cPo, 15));
                            newList.Add("191000000510200Ctn.no.");
                            newList.Add("191000000300200" + cCtn);
                            newList.Add("1D3100000150070" + cLot);
                            break;
                        //formerly outer label set 45
                        case "LAB-OC-HTLG-0032":
                            newList.Add("491000000400035Ctn.No.");
                            newList.Add("491000001300035" + cCtn);
                            newList.Add("491000000400055Mfg. Date.");
                            newList.Add("491100001300055" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("491000000400075Lot No.");
                            newList.Add("4d3102501300080" + cLot);
                            newList.Add("400002501300090" + PadCenter(cLot, 20));
                            newList.Add("401100000400095" + cPo);
                            break;
                        //formerly outer label set 47
                        case "LAB-OC-HTLG-0033":
                            newList.Add("491100000150030" + PadCenter(cPo, 15));
                            newList.Add("491000000150055Lot No.");
                            newList.Add("4d3102500150080" + cLot);
                            newList.Add("400002500150090" + PadCenter(cLot, 20));
                            newList.Add("491000001400050Ctn.No.");
                            newList.Add("491000002200050" + cCtn);
                            newList.Add("491000001400065Mfg.Date. " + dMfg.ToString("MMM-yyyy"));
                            newList.Add("491000001400080Exp.Date. " + dExp.ToString("MMM-yyyy"));
                            break;
                        //formerly outer label set 97
                        case "LAB-OC-IHCP-0001":
                            newList.Add("491000000400035Ctn.No.");
                            newList.Add("491000001300035" + cCtn);
                            newList.Add("491000000400055Mfg. Date.");
                            newList.Add("491100001300055" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("491000000400075Lot No.");
                            newList.Add("4d3102501300080" + cLot);
                            newList.Add("400002501300090" + cLot);
                            newList.Add("401100000400095" + cPo);
                            break;
                        //formerly outer label set 99
                        case "LAB-OC-HTLG-0066":
                            newList.Add("491100000200035" + "PO NO:");
                            newList.Add("491100000900035" + cPo);
                            newList.Add("431100002200060" + PadCenter(cCustSize, 3));
                            newList.Add("491000002200080Ctn.No.");
                            newList.Add("491000002200100" + cCtn);
                            newList.Add("4d3100000900078" + cLot);
                            newList.Add("491100000200100" + "LOT NO:");
                            newList.Add("491100000900100" + cLot);
                            break;
                        //formerly outer label set 56
                        case "LAB-OC-HTLG-0037":
                            newList.Add("111200000600020" + "Batch No.");
                            newList.Add("121100000650130" + cLot);
                            newList.Add("111100000100250" + cCtn);
                            break;
                        //formerly outer label set 57
                        case "LAB-OC-HTLG-0038":
                            newList.Add("1Y1100000200025LOT");
                            newList.Add("421100001100045" + cCustOrderLot);
                            newList.Add("411200000200080Gross Wt.");
                            newList.Add("421100001100080" + nGross.ToString("0.0 Kg"));
                            newList.Add("411200000200110Net Wt.");
                            newList.Add("421100001100110" + nNett.ToString("0.0 Kg"));
                            newList.Add("411200000200140PO");
                            newList.Add("421100001100140" + cPo);
                            newList.Add("411200000200170Case No.");
                            newList.Add("421100001100170" + cCtn);
                            newList.Add("401105002000190" + cLot);
                            break;
                        //formerly outer label set 85
                        case "LAB-OC-HTLG-0056":
                            //String[] aYear = { "A", "B", "C", "D", "E", "F", "G", "H", "I", "J" };
                            //int nPos = Array.IndexOf(aYear, cCustOrderLot.Substring(2, 1));
                            //if (nPos > -1)
                            //{
                            //    string cYear = DateTime.Today.ToString("yyyy").Substring(0, 3) + (nPos + 1).ToString();
                            //    DateTime.TryParseExact("01" + cCustOrderLot.Substring(3, 2) + cYear, "ddMMyyyy", null, DateTimeStyles.None, out dMfg);
                            //}
                            //dExp = dMfg.AddMonths(nExpMonth);
                            newList.Add("191000000650020" + "Lot No.");
                            newList.Add("191000000650100" + cCustOrderLot);
                            newList.Add("1Y1100000250020MFG_H");
                            newList.Add("191000000350100" + dMfg.ToString("MMM yyyy"));
                            newList.Add("101100000150100" + cCtn + "   " + cLot);
                            break;
                        //formerly outer label set 87
                        case "LAB-OC-OKMT-0001":
                            cGs1 = "01" + cOuterGtn14_Code + "10" + cLot;
                            cReadable = "(01)" + cOuterGtn14_Code + "(10)" + cLot;
                            newList.Add("400005000150020" + cPo);
                            newList.Add("422300001600095" + cCustSize);
                            newList.Add("411200000150060Carton No:");
                            newList.Add("421100000150083" + cCtn);
                            newList.Add("411200000150120GS1 code:");
                            newList.Add("4e3103000150155C&G" + cGs1);
                            newList.Add("400005000150170" + cReadable);
                            break;
                        //formerly outer label set 107
                        case "LAB-OC-HTLG-0072":
                            newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                            newList.Add("111100000800240" + cCtn);
                            newList.Add("121100000550020" + "LOT NO.:");
                            newList.Add("141100000150020" + cLot);
                            break;
                        //formerly outer label set 36
                        case "LAB-OC-HTLG-0026":
                            newList.Add("4e2202500500040C" + cCustOrderLot);
                            newList.Add("411100000500055" + cCustOrderLot);
                            newList.Add("411100000500070" + cLot);
                            newList.Add("411100001700090" + cCtn);
                            break;
                        //formerly outer label set 89
                        case "LAB-OC-HTLG-0058":
                            newList.Add("100005000600040" + cOrderNum);
                            newList.Add("111000000300040" + cLot);
                            newList.Add("191000000500180Ctn.No.");
                            newList.Add("191000000270180" + cCtn);
                            break;
                        //formerly outer label set 90
                        case "LAB-OC-HTLG-0059":
                            //dMfg = dEtd;
                            //dExp = dMfg.AddMonths(nExpMonth);
                            newList.Add("1Y1100000150020LOT");
                            newList.Add("421100001000042" + cCustOrderLot);
                            newList.Add("411200000150070PO. No.");
                            newList.Add("421100001000067" + cPo);
                            newList.Add("411200000150095Ctn. No.");
                            newList.Add("421100001000092" + cCtn);
                            newList.Add("1Y1100000150100MFG");
                            newList.Add("421100001000125" + dMfg.ToString("yyyy-MM"));
                            newList.Add("1Y1100000150135EXP");
                            newList.Add("421100001000162" + dExp.ToString("yyyy-MM"));
                            newList.Add("410000001850185" + cLot);
                            break;
                        //formerly outer label set 92
                        case "LAB-OC-HTLG-0061":
                            cGs1 = "10" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            cReadable = "(10)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + cCustOrderLot;
                            newList.Add("2e2105010350105C&G" + cGs1);
                            newList.Add("200000010350090" + cReadable);
                            newList.Add("242200007500100" + PadCenter(cCustSize, 3));
                            newList.Add("2X1110005350080" + "L001500");
                            newList.Add("201100010350070" + "PO No");
                            newList.Add("221100009850054" + cPo);
                            newList.Add("201100008150070" + "Mfg Date");
                            newList.Add("221100007550054" + dEtd.ToString("yyyy-MM")); //Shipment ETD date
                            newList.Add("201100006500070" + "Ctn No");
                            newList.Add("291100006050054" + cCtn);
                            newList.Add("200000006500020" + cLot);
                            newList.Add("2X1110005350050" + "L001500");
                            newList.Add("201100010350040" + "Lot No");
                            newList.Add("221100009850024" + cCustOrderLot);
                            newList.Add("201100008150040" + "Exp Date");
                            newList.Add("221100007550024" + dExp.ToString("yyyy-MM"));
                            newList.Add("2X1110005250010" + "L200001");
                            newList.Add("242200005000080" + PadCenter(cCustSize, 3));      // cCsize.Trim());
                            newList.Add("2e2105003250105C&G" + cGs1);
                            newList.Add("200000003250090" + cReadable);
                            newList.Add("2X1110000100080" + "L001500");
                            newList.Add("201100005100070" + "PO No");
                            newList.Add("221100004600054" + cPo);
                            newList.Add("201100002900070" + "Mfg Date");
                            newList.Add("221100002300054" + dEtd.ToString("yyyy-MM"));
                            newList.Add("201100001250070" + "Ctn No");
                            newList.Add("291100000800054" + cCtn);
                            newList.Add("200000001250020" + cLot);
                            newList.Add("2X1110000100050" + "L001500");
                            newList.Add("201100005100040" + "Lot No");
                            newList.Add("221100004600024" + cCustOrderLot);
                            newList.Add("201100002900040" + "Exp Date");
                            newList.Add("221100002300024" + dExp.ToString("yyyy-MM"));

                            objOuterLabelDTO.barcodeToValidate = dExp.ToString("yyMMdd") + "10" + cCustOrderLot;
                            objOuterLabelDTO.countToValidate = cGs1.Length;

                            break;
                        //formerly outer label set 17
                        case "LAB-OC-HTLG-0011":
                            cGs1 = "01" + cOuterGtn14_Code + "17" + dExp.ToString("yyMMdd") + "10" + Right(cLot, 4);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + dExp.ToString("yyMMdd") + "(10)" + Right(cLot, 4);
                            newList.Add("2e1109009850105C&G" + cGs1);
                            newList.Add("201100009850090" + cReadable);
                            if (cCustSize.Contains("½"))
                                newList.Add("223400007000110" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100007000110" + PadCenter(cCustSize, 5));

                            newList.Add("2X1110005350080L001500");
                            newList.Add("201100010350070Gross Wt");
                            newList.Add("221100009850054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100009050070Exp Date");
                            newList.Add("221100008350054" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100007200070PO No");
                            newList.Add("291100006700054" + cPo);

                            newList.Add("2X1110005350050L001500");
                            newList.Add("201100010350040Nett Wt");
                            newList.Add("221100009850024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100009050040Reorder No");
                            newList.Add("221100008350024" + cProdRefNo);
                            newList.Add("201100007200040Ctn No");
                            newList.Add("221100006700024" + cCtn);

                            newList.Add("2X1110005250010L200001");
                            if (cCustSize.Contains("½"))
                                newList.Add("223400004500110" + PadCenter(cCustSize.Substring(0, 1), 5).TrimEnd() + Chr(171));
                            else
                                newList.Add("261100004500110" + PadCenter(cCustSize, 5));

                            newList.Add("2e1109002750105C&G" + cGs1);
                            newList.Add("201100002750090" + cReadable);

                            newList.Add("2X1110000100080L001500");
                            newList.Add("201100005100070Gross Wt");
                            newList.Add("221100004600054" + nGross.ToString("0.0 Kg"));
                            newList.Add("201100003800070Exp Date");
                            newList.Add("221100003100054" + dExp.ToString("MMM-yyyy"));
                            newList.Add("201100001950070PO No");
                            newList.Add("291100001450054" + cPo);

                            newList.Add("2X1110000100050L001500");
                            newList.Add("201100005100040Nett Wt");
                            newList.Add("221100004600024" + nNett.ToString("0.0 Kg"));
                            newList.Add("201100003800040Reorder No");
                            newList.Add("221100003100024" + cProdRefNo);
                            newList.Add("201100001950040Ctn No");
                            newList.Add("221100001450024" + cCtn);
                            break;
                        //formerly outer label set 117
                        case "LAB-OC-ANSL-0001":
                            cGs1 = "10" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            cReadable = "(10)" + cProdRefNo + dMfg.ToString("MM") + dMfg.ToString("yy").Substring(1, 1) + "1";
                            newList.Add("410005002400030" + cCtn);
                            newList.Add("422400000300100" + PadCenter(cCustSize, 11));
                            newList.Add("411200000200130PO No.");
                            newList.Add("421100001000130" + cPo);
                            newList.Add("411200000200165Lot No.");
                            newList.Add("4e1103001000170C&G" + cGs1);
                            newList.Add("410005001000187" + cReadable);
                            newList.Add("100000002800115" + cLot);
                            break;
                        //formerly outer label set 116
                        case "LAB-OC-HTLG-0078":
                            newList.Add("410005000100030" + cPo);
                            newList.Add("411200000100058Ctn. No.");
                            newList.Add("421100000820058" + cCtn);
                            newList.Add("422300002000121" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000100060MFG");
                            newList.Add("421100000820085" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100095EXP");
                            newList.Add("421100000820121" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100130LOT");
                            newList.Add("421100000820149" + cCustOrderLot);
                            newList.Add("4d3103000820185" + cLot);
                            newList.Add("410005000820200" + cLot);
                            break;
                        //formerly outer label set 113
                        case "LAB-OC-HTLG-0076":
                            newList.Add("111100000800020" + "PO NO.:" + cOrderNum);
                            newList.Add("111100000800240" + cCtn);
                            newList.Add("111100000650020" + "LOT NO.:");
                            newList.Add("121100000600240" + PadCenter(cCustSize, 5));
                            newList.Add("141100000230020" + cLot);
                            newList.Add("111100000050020" + "Exp Date: " + dExp.ToString("MMM yyyy")); ;
                            break;
                        //formerly outer label set 41
                        case "LAB-OC-HTLG-0030":
                            newList.Add("410005000200020" + cPo);
                            newList.Add("422400000100117" + PadCenter(cCustSize, 11));
                            newList.Add("421100000000159" + PadCenter(cBrand, 25));
                            newList.Add("411200000100205Ctn. No.");
                            newList.Add("421100001100203" + cCtn);
                            newList.Add("421100001100248" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("421100001100294" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000100220LOGO");
                            newList.Add("4d3105001100373" + cLot);
                            newList.Add("410005001100388" + cLot);
                            break;
                        //formerly outer label set 96
                        case "LAB-OC-HTLG-0065":
                            //DateTime.TryParseExact(cCustOrderLot.Substring(0, 4) + "01", "yyMMdd", null, DateTimeStyles.None, out dExp);
                            cGs1 = "01" + cOuterGtn14_Code + "17" + cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                            cReadable = "(01)" + cOuterGtn14_Code + "(17)" + cCustOrderLot.Substring(0, 6) + "(10)" + Right(cCustOrderLot, 10);
                            //dMfg = dExp.AddMonths(-nExpMonth);

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200055Ctn. No.");
                            newList.Add("421100001000055" + cCtn);
                            newList.Add("422300002000080" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150060EXP");
                            newList.Add("421100001000085" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150100LOT");
                            newList.Add("421105001000115" + Right(cCustOrderLot, 10));
                            newList.Add("410005000150140" + "GS1 code:");
                            newList.Add("4e1103000150180C&G" + cGs1);
                            newList.Add("400000000150190" + cReadable);

                            objOuterLabelDTO.barcodeToValidate = cCustOrderLot.Substring(0, 6) + "10" + Right(cCustOrderLot, 10);
                            objOuterLabelDTO.countToValidate = cGs1.Length;
                            break;
                        //formerly outer label set 94
                        case "LAB-OC-HTLG-0063":
                            string cCSizeNumNewLabelSet = string.Empty, cCsizeStrNewLabelSet = string.Empty;
                            string sNewLabelSet = cCustSize;
                            foreach (char c in sNewLabelSet)
                            {
                                if (char.IsDigit(c) && c != '.')
                                {
                                    cCSizeNumNewLabelSet += c.ToString();
                                }
                                else
                                {
                                    cCsizeStrNewLabelSet += c.ToString();
                                }
                            }

                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000085" + PadCenter(cCSizeNumNewLabelSet, 5));
                            newList.Add("422300002000145" + PadCenter(cCsizeStrNewLabelSet, 5));
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            break;
                        //formerly outer label set 65
                        case "LAB-OC-HTLG-0044":
                            newList.Add("410005000200030" + cPo);
                            newList.Add("411200000200075Ctn. No.");
                            newList.Add("421100001000075" + cCtn);
                            newList.Add("422300002000145" + PadCenter(cCustSize, 5));
                            newList.Add("1Y1100000150082MFG");
                            newList.Add("421100001000112" + dMfg.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150119EXP");
                            newList.Add("421100001000145" + dExp.ToString("MMM-yyyy"));
                            newList.Add("1Y1100000150157LOT");
                            newList.Add("4d3103001000184" + cLot);
                            newList.Add("410005001000199" + cLot);
                            break;
                        //formerly outer label set 125
                        case "LAB-OC-HTLG-0082":
                            newList.Add("442200000500100" + PadCenter(cCustSize, 5));
                            newList.Add("411200000200145" + "Batch No.");
                            newList.Add("421100001100140" + cLot);
                            newList.Add("411100002200175" + cCtn);
                            break;
                        #endregion new label set
                        default:
                            objOuterLabelDTO.isLabelSetDoesnotExists = true;
                            break;

                    }



                    #endregion
                    //added by adamas for outer label print based on configuration of brand master
                    if (nooflabelprint > 1)
                    {
                        string nooflabeltoprint = nooflabelprint.ToString().PadLeft(4, '0');
                        string finalnooflabellabel = "Q" + nooflabeltoprint;
                        newList.Add(finalnooflabellabel);
                    }

                    newList.Add("E");
                    // Start printing process
                    if (WorkStationDataConfiguration.GetInstance().LHardwareIntegration == true)
                        objOuterLabelDTO.isPrintSuccess = LabelPrinterX2000LPT(newList.ToArray());
                    else
                    {
                        #region TestCode
                        //string filePath = @"\\192.168.9.47\fs\SIT\FinalPackingOuterLabel.txt";
                        //using (StreamWriter writer = new StreamWriter(filePath, true))
                        //{
                        //    writer.WriteLine("nExpMonth:" + nExpMonth);
                        //    writer.WriteLine("dMfg: " + dMfg);
                        //    writer.WriteLine("dExp: " + dExp);
                        //    writer.WriteLine("cGs1: " + cGs1);
                        //    writer.WriteLine("cReadable: " + cReadable);
                        //    writer.WriteLine("cLot: " + cLot);
                        //    writer.WriteLine("cProdRefNo:" + cProdRefNo);
                        //    writer.WriteLine("cPo: " + cPo);
                        //    writer.WriteLine("cCustSize: " + cCustSize);
                        //    writer.WriteLine("cCustOrderLot: " + cCustOrderLot);
                        //    writer.WriteLine("nGross: " + nGross);
                        //    writer.WriteLine("nNett" + nNett);
                        //    writer.WriteLine("cCustRefNo: " + cCustRefNo);
                        //    writer.WriteLine("cHartaSize: " + cHartaSize);
                        //    writer.WriteLine("cOrderNum: " + cOrderNum);
                        //    writer.WriteLine("cOuterGtn14_Code " + cOuterGtn14_Code);
                        //    writer.WriteLine("cDistBy " + cDistBy);
                        //    writer.WriteLine("cDistCountry " + cDistCountry);
                        //    writer.WriteLine("cBrand " + cBrand);
                        //    writer.WriteLine("dEtd " + dEtd);
                        //    writer.WriteLine("nInnerBox " + nInnerBox);
                        //    writer.WriteLine("cBatchTime " + cBatchTime);
                        //    writer.WriteLine("Case Number :" + objPurchaseOrderItemDTO.CaseNumber);
                        //    writer.WriteLine("InternalLotnumber: " + objFinalPackingDTO.Internallotnumber);
                        //}
                        #endregion
                    }
                }
                objOuterLabelDTO.isPrintSuccess = true;
            }
            return objOuterLabelDTO;
        }


        #region Pad Center - HSB
        public static string PadCenter(string text, int newWidth)
        {
            const char filler = ' ';
            int length = text.Length;
            int charactersToPad = newWidth - length;
            if (charactersToPad < 0) throw new ArgumentException("New width must be greater than string length.", "newWidth");
            int padLeft = charactersToPad / 2 + charactersToPad % 2;
            //add a space to the left if the string is an odd number
            int padRight = charactersToPad / 2;

            StringBuilder resultBuilder = new StringBuilder(newWidth);
            for (int i = 0; i < padLeft; i++) resultBuilder.Insert(i, filler);
            for (int i = 0; i < length; i++) resultBuilder.Insert(i + padLeft, text[i]);
            for (int i = newWidth - padRight; i < newWidth; i++) resultBuilder.Insert(i, filler);
            return resultBuilder.ToString();
        }
        #endregion

        #region Convert int to Char - HSB
        public static Char Chr(int i)
        {
            return Convert.ToChar(i);
        }
        #endregion

        #region String to right - HSB
        public static string Right(string value, int length)
        {
            return value.Substring(value.Length - length);
        }
        #endregion


        #region Label Printer
        public static Boolean LabelPrinterX2000LPT(string[] labelString)
        {
            HSBHWInterface hw = new HSBHWInterface();
            hw.PrinterName = WorkStationDataConfiguration.GetInstance().OuterPrinter;

            hw.LabelString = labelString;
            Boolean isPrintSucess = hw.X2000LPT();
            return isPrintSucess;
        }

        public static Boolean LabelPrinterX2000COM(string[] labelString)
        {
            HSBHWInterface hw = new HSBHWInterface();
            hw.ComPort = WorkStationDataConfiguration.GetInstance().InnerLabel_Comport;
            hw.BaudRate = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().InnerLabel_BaudRate);
            switch (WorkStationDataConfiguration.GetInstance().InnerLabel_Parity)
            {
                case "Even":
                    hw.Parity = System.IO.Ports.Parity.Even;
                    break;
                case "Odd":
                    hw.Parity = System.IO.Ports.Parity.Odd;
                    break;
                default:
                    hw.Parity = System.IO.Ports.Parity.None;
                    break;
            }

            switch (WorkStationDataConfiguration.GetInstance().InnerLabel_StopBits)
            {
                case "1":
                    hw.StopBits = System.IO.Ports.StopBits.One;
                    break;
                case "1.5":
                    hw.StopBits = System.IO.Ports.StopBits.OnePointFive;
                    break;
                case "2":
                    hw.StopBits = System.IO.Ports.StopBits.Two;
                    break;
                default:
                    hw.StopBits = System.IO.Ports.StopBits.None;
                    break;
            }
            hw.DataBit = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().InnerLabel_Databits);
            hw.LabelString = labelString;
            Boolean isPrintSucess = hw.X2000COM();
            return isPrintSucess;
        }
        # endregion

        # region VideoJet Printer
        public static Boolean VideoJetPrint(string[] labelString)
        {
            HSBHWInterface hw = new HSBHWInterface();
            hw.ComPort = WorkStationDataConfiguration.GetInstance().FirstInkjet_Comport;//"";
            hw.BaudRate = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().FirstInkjet_BaudRate);// 38400;
            hw.DataBit = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().InnerLabel_Databits); //8;
            switch (WorkStationDataConfiguration.GetInstance().FirstInkjet_Parity)
            {
                case "Even":
                    hw.Parity = System.IO.Ports.Parity.Even;
                    break;
                case "Odd":
                    hw.Parity = System.IO.Ports.Parity.Odd;
                    break;
                default:
                    hw.Parity = System.IO.Ports.Parity.None;
                    break;
            }

            switch (WorkStationDataConfiguration.GetInstance().FirstInkjet_StopBits)
            {
                case "1":
                    hw.StopBits = System.IO.Ports.StopBits.One;
                    break;
                case "1.5":
                    hw.StopBits = System.IO.Ports.StopBits.OnePointFive;
                    break;
                case "2":
                    hw.StopBits = System.IO.Ports.StopBits.Two;
                    break;
                default:
                    hw.StopBits = System.IO.Ports.StopBits.None;
                    break;
            }

            hw.Timeout = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().FirstInkjet_Timeout);

            hw.LabelString = labelString;
            return hw.VideoJet();

        }
        #endregion

        #region Imaje string , Barcode Printer and clearBuffer
        public static Boolean ImajePrint(string lblString1, string lblString2)
        {
            //Use workstation configuration table to retrieve workstatiton printer attributes

            HSBHWInterface hw = new HSBHWInterface("COM1");
            return hw.ImajeString(1, true, 52, lblString1, true, 53, lblString2);
        }

        public static Boolean ClearBuffer()
        {
            HSBHWInterface hw = new HSBHWInterface("COM1");
            return hw.ImajeClearBuffer(1);
        }

        public static Boolean ImajeBarcodePrint(string[] barcode)
        {
            HSBHWInterface hw = new HSBHWInterface();
            return hw.ImajeBarcode(1, true, 52, barcode[0]);
        }
        # endregion


        public static Boolean checkInnerlabelPrinterAvailable()
        {
            //using (HSBHWInterface hw = new HSBHWInterface())

            HSBHWInterface hw = new HSBHWInterface();
            hw.ComPort = WorkStationDataConfiguration.GetInstance().InnerLabel_Comport;
            hw.BaudRate = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().InnerLabel_BaudRate);
            switch (WorkStationDataConfiguration.GetInstance().InnerLabel_Parity)
            {
                case "Even":
                    hw.Parity = System.IO.Ports.Parity.Even;
                    break;
                case "Odd":
                    hw.Parity = System.IO.Ports.Parity.Odd;
                    break;
                default:
                    hw.Parity = System.IO.Ports.Parity.None;
                    break;
            }
            switch (WorkStationDataConfiguration.GetInstance().InnerLabel_StopBits)
            {
                case "1":
                    hw.StopBits = System.IO.Ports.StopBits.One;
                    break;
                case "1.5":
                    hw.StopBits = System.IO.Ports.StopBits.OnePointFive;
                    break;
                case "2":
                    hw.StopBits = System.IO.Ports.StopBits.Two;
                    break;
                default:
                    hw.StopBits = System.IO.Ports.StopBits.None;
                    break;
            }
            hw.DataBit = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().InnerLabel_Databits);

            return hw.chkArgoxPrinterResponse();

        }

        public static Boolean checkInnerImajePrinterAvailable()
        {
            Boolean bReturn = true;
            string Inkjetprintername = WorkStationDataConfiguration.GetInstance().innerPrinter;
            if (Inkjetprintername == "IMAJE")
            {
                HSBHWInterface hw = new HSBHWInterface();
                hw.ComPort = WorkStationDataConfiguration.GetInstance().FirstInkjet_Comport;
                hw.BaudRate = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().FirstInkjet_BaudRate);
                switch (WorkStationDataConfiguration.GetInstance().FirstInkjet_Parity)
                {
                    case "Even":
                        hw.Parity = System.IO.Ports.Parity.Even;
                        break;
                    case "Odd":
                        hw.Parity = System.IO.Ports.Parity.Odd;
                        break;
                    default:
                        hw.Parity = System.IO.Ports.Parity.None;
                        break;
                }

                switch (WorkStationDataConfiguration.GetInstance().FirstInkjet_StopBits)
                {
                    case "1":
                        hw.StopBits = System.IO.Ports.StopBits.One;
                        break;
                    case "1.5":
                        hw.StopBits = System.IO.Ports.StopBits.OnePointFive;
                        break;
                    case "2":
                        hw.StopBits = System.IO.Ports.StopBits.Two;
                        break;
                    default:
                        hw.StopBits = System.IO.Ports.StopBits.None;
                        break;
                }
                hw.Timeout = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().FirstInkjet_Timeout);
                //hw.DataBit = Convert.ToInt32(WorkStationDataConfiguration.GetInstance().fir);
                bReturn = hw.chkImajePrinterResponse();

            }
            else
            {


            }//end if Imaje
            return bReturn;
        }
    }


}
